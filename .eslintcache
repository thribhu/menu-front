[{"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/index.js":"1","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/Layouts/index.js":"2","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/utils/normalize.js":"3","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Sidebar/index.js":"4","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/reportWebVitals.js":"5","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Pizza/index.js":"6","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/App.js":"7","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/createStore.js":"8","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/modules/options/reducer.js":"9","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/routes.js":"10","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Options/addOption.js":"11","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Items/index.js":"12","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/utils/isValidImage.js":"13","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Groups/addGroup.js":"14","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Sidebar/sidebarRoutes.js":"15","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Modifiers/addModifier.js":"16","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Options/index.js":"17","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Modifiers/index.js":"18","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/modules/options/constants.js":"19","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Groups/index.js":"20","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Items/addItem.js":"21","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/reducers.js":"22","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/modals/Groups/index.js":"23","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/modals/Options/index.js":"24","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/table/index.js":"25","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Grid/GridItem.js":"26","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Grid/GridContainer.js":"27","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/orderTable/index.js":"28"},{"size":500,"mtime":1611552944563,"results":"29","hashOfConfig":"30"},{"size":367,"mtime":1612337528682,"results":"31","hashOfConfig":"30"},{"size":136,"mtime":1612337528712,"results":"32","hashOfConfig":"30"},{"size":1075,"mtime":1612337528698,"results":"33","hashOfConfig":"30"},{"size":362,"mtime":1611552944567,"results":"34","hashOfConfig":"30"},{"size":1064,"mtime":1612337528690,"results":"35","hashOfConfig":"30"},{"size":529,"mtime":1612338734514,"results":"36","hashOfConfig":"30"},{"size":1130,"mtime":1612337528700,"results":"37","hashOfConfig":"30"},{"size":1928,"mtime":1612337528705,"results":"38","hashOfConfig":"30"},{"size":1857,"mtime":1612337528707,"results":"39","hashOfConfig":"30"},{"size":6808,"mtime":1612338191364,"results":"40","hashOfConfig":"30"},{"size":3975,"mtime":1613271930123,"results":"41","hashOfConfig":"30"},{"size":179,"mtime":1612337528711,"results":"42","hashOfConfig":"30"},{"size":9369,"mtime":1613126111373,"results":"43","hashOfConfig":"30"},{"size":1457,"mtime":1612337528699,"results":"44","hashOfConfig":"30"},{"size":8646,"mtime":1612338211267,"results":"45","hashOfConfig":"30"},{"size":1948,"mtime":1613153996038,"results":"46","hashOfConfig":"30"},{"size":2405,"mtime":1613271990463,"results":"47","hashOfConfig":"30"},{"size":857,"mtime":1612337528704,"results":"48","hashOfConfig":"30"},{"size":3952,"mtime":1613154139572,"results":"49","hashOfConfig":"30"},{"size":14190,"mtime":1613270962396,"results":"50","hashOfConfig":"30"},{"size":172,"mtime":1612337528706,"results":"51","hashOfConfig":"30"},{"size":2935,"mtime":1612507157361,"results":"52","hashOfConfig":"30"},{"size":2515,"mtime":1612509212052,"results":"53","hashOfConfig":"30"},{"size":11217,"mtime":1613554231500,"results":"54","hashOfConfig":"30"},{"size":676,"mtime":1612514667866,"results":"55","hashOfConfig":"30"},{"size":854,"mtime":1612514556604,"results":"56","hashOfConfig":"30"},{"size":4332,"mtime":1613244015831,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"15bsurr",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"77"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"71"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"77"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"81"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/index.js",[],["132","133"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/Layouts/index.js",[],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/utils/normalize.js",[],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Sidebar/index.js",["134"],"import React from 'react';\nimport styles from './Sidebar.module.sass';\nimport classname from 'classnames';\nimport default_img from './default.jpg';\nimport { normalizeText } from 'utils/normalize'\nimport SidebarRoutes from './sidebarRoutes'\nexport default function Sidebar(props) {\n    const {\n        title,\n        img\n    } = props;\n    return (\n        <div className={classname(styles.main)}>\n            <div className={classname(styles.sidebar_header)}>\n                <div class={classname(styles.titleBox)}>\n                    <div className={classname(styles.avatar)}>\n                        <img src={img ? img : default_img} className={classname(styles.avatarImg)} />\n                    </div>\n                    <div className={classname(styles.title)}>\n                        <h1>{title ? normalizeText(title) : normalizeText('echola pizza')}</h1>\n                    </div>\n                </div>\n            </div>\n            <div className={classname(styles.sidebar_content)}>\n                <SidebarRoutes />\n            </div>\n        </div>\n    )\n}",["135","136"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/reportWebVitals.js",[],["137","138"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Pizza/index.js",["139","140"],"import React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport styles from './Pizza.module.sass'\nimport classname from 'classnames';\nimport routes from 'routes';\nimport Group from 'views/Groups'\nexport default function Pizza(props){\n    const {component} = props;\n    const getRoutes = (routes) => {\n        return routes.map((prop, key) => {\n          if (prop.children) {\n            return getRoutes(prop.children);\n          }\n          if (prop.layout === \"/pizza\") {\n              let _routes = <Route\n                path={prop.path}\n                component={prop.component}\n                key={key}\n              />\n              return _routes\n          } else {\n            return null;\n          }\n        });\n      };\n    return (\n        <div className={classname(styles.pizza)}>\n          {/* <div className={classname(styles.topBar)}>\n\n          </div> */}\n           <Switch>\n               {getRoutes(routes())}\n               <Route path=\"/groups\" component={Group}/>\n           </Switch> \n        </div>\n    )\n}","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/App.js",[],["141","142"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/createStore.js",["143","144"],"import { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { persistReducer, persistStore} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from 'reducers';\n//import rootSaga from './sagas';\nimport immutableTransform from 'redux-persist-transform-immutable';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    transforms: [immutableTransform()],\n    whitelist:  [\"\"]\n}\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? composeWithDevTools({ realtime: true }) : compose;\n// persisting the reducer and creating a reference to saga instance \nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst sagaMiddleware = createSagaMiddleware();\n\n\nexport default () => {\n    const enhancer = composeEnhancers(applyMiddleware());\n\n    const store =  createStore(persistedReducer, enhancer);\n    const  persistor = persistStore(store);\n    \n    //run saga middleware\n//    sagaMiddleware.run(rootSaga);\n    return {store, persistor};\n}\n",["145","146"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/modules/options/reducer.js",["147"],"import {fromJS, List} from 'immutable';\nimport * as Actions from './constants';\n\nconst initState = fromJS({\n    loading: false,\n    error: '',\n    options: List(),\n    selectedOptions: List(),\n    optionToEdit: ''\n})\n\nexport default function optionReducer(state=initState, action) {\n    const {type, payload, error} = action\n    switch (type) {\n        case Actions.STATE_LOADING:\n            return state.set('loading', !state.get('loading'))\n        //add\n        case Actions.ADD_OPTION:\n            return state.set('loading', true).set('error', initState.get('error'))\n        case Actions.ADD_OPTION_SUCCESS:\n            return state.set('loading', false).set('options', fromJS(payload)).set('error', initState.get('error')) \n        case Actions.ADD_OPTION_SUCCESS:\n            return state.set('loading', false).set('error', fromJS(error))\n        //remove\n        case Actions.REMOVE_OPTION:\n            return state.set('loading', true).set('error', initState.get('error'));\n        case Actions.REMOVE_OPTION_SUCCESS:\n            return state.set('loading', false)\n        case Actions.REMOVE_OPTION_ERROR:\n            return state.set('loading', false).set('error', fromJS(error))\n        //update\n        case Actions.UPDATE_OPTION:\n            return state.set('loading', true).set('error', initState.get('error'));\n        case Actions.UPDATE_OPTION_SUCCESS:\n            return state.set('loading', false)\n        case Actions.UPDATE_OPTION_ERROR:\n            return state.set('loading', false).set('error', fromJS(error))\n        //list\n        case Actions.LIST_OPTIONS:\n            return state.set('loading', true).set('error', initState.get('error'));\n        case Actions.LIST_OPTIONS_SUCCESS:\n            return state.set('loading', false)\n        case Actions.LIST_OPTIONS_ERROR:\n            return state.set('loading', false).set('error', fromJS(error))\n        default:\n            return state\n    } \n}","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/routes.js",["148"],"import AddOptions from 'views/Options/addOption'\nimport OptionsList from 'views/Options'\nimport Groups from 'views/Groups';\nimport AddGroup from 'views/Groups/addGroup'\nimport ListItems from 'views/Items';\nimport AddItem from 'views/Items/addItem';\nimport Modifiers from 'views/Modifiers'\nimport AddModifier from 'views/Modifiers/addModifier';\nexport default function () {\n    return [\n        {\n            path: \"/options\",\n            name: \"Options\",\n            icon: '/assets/options.svg',\n            component: OptionsList,\n            layout: \"/pizza\",\n        },\n        {\n            path: \"/addOption\",\n            name: \"Add option\",\n            icon: \"\",\n            component: AddOptions,\n            layout: \"/pizza\",\n        },\n        {\n            path: '/modifiers',\n            name: 'Modifiers',\n            icon: '/assets/modifier.svg',\n            component: Modifiers,\n            layout: \"/pizza\",\n        },\n        {\n            path: \"/addModifier\",\n            name: \"Add Modifier\",\n            icon: \"\",\n            component: AddModifier,\n            layout: \"/pizza\"\n        },\n        {\n            path: '/items',\n            name: 'Items',\n            icon: '/assets/menu.svg',\n            component: ListItems,\n            layout: \"/pizza\",\n        },\n        {\n            path: \"/addItem\",\n            name: \"Add Item\",\n            icon: \"\",\n            component: AddItem,\n            layout: \"/pizza\"\n        }\n        ,{\n            path: '/groups',\n            name: 'Option groups',\n            icon: '/assets/groups.svg',\n            component: Groups,\n            layout: \"/pizza\",\n            children: [\n            ]\n        },\n        {\n            path: \"/addgroup\",\n            name: \"add option group\",\n            icon: \"\",\n            component: AddGroup,\n            layout: \"/pizza\"\n        }\n    ]\n}","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Options/addOption.js",["149","150","151"],"import React from 'react';\nimport classname from 'classnames';\nimport styles from './Options.module.sass'\nimport _ from 'lodash';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport modifiers from '../Modifiers/modifiers.json'\nimport {normalizeText as normalize} from 'utils/normalize'\nconst initialValues = {\n    name: '',\n    description: '',\n    image_url: '',\n    price: '',\n    type: '',\n    modifiers: []\n}\nconst validationSchema = yup.object({\n    name: yup.string().required('A valid option must have name'),\n    description: yup.string().optional(),\n    image_url: yup.string().optional(),\n    price: yup.number().required('A valid option must have price'),\n    type: yup.string().optional(),\n})\nexport default function AddOption(props) {\n    const handleSubmit = e => {\n        e.preventDefault();\n    }\n    return (\n        <div className={classname(styles.container)}>\n            <div className={classname(styles.formTitle)}>\n                <h4>\n                Add Option\n                </h4>\n            </div>\n        <Formik\n            initialValues={initialValues}\n            onSubmit={async (values) => {\n                await new Promise((r) => setTimeout(r, 500));\n                alert(JSON.stringify(values, null, 2));\n            }}\n        >\n            {({ values }) => (\n                <Form>\n                    <div>\n                        <div className={classname(styles.formControl)}>\n                            <div className={classname(styles.labelContainer)}>\n                                <label htmlFor=\"name\" className={classname(styles.formLabel, styles.labelContainer)}>Option</label>\n                            </div>\n                            <div>\n                                <Field\n                                    name=\"name\"\n                                    type=\"text\"\n                                    className={classname(styles.formInput)}\n                                    autoFocus={true}\n                                />\n                            </div>\n                            <ErrorMessage\n                                name={\"name\"}\n                                component=\"div\"\n                                className=\"field-error\"\n                            />\n                        </div>\n                        <div className={classname(styles.formControl)}>\n                            <div className={classname(styles.labelContainer)}>\n                                <label htmlFor=\"price\" className={classname(styles.formLabel, styles.labelContainer)}>Price</label>\n                            </div>\n                            <div>\n                                <Field\n                                    name=\"price\"\n                                    type=\"number\"\n                                    className={classname(styles.formInput)}\n                                    min={0}\n                                    step={0.01}\n                                />\n                            </div>\n                            <ErrorMessage\n                                name={\"price\"}\n                                component=\"div\"\n                                className=\"field-error\"\n                            />\n                        </div>\n                        <div className={classname(styles.formControl)}>\n                            <div className={classname(styles.labelContainer)}>\n                                <label htmlFor=\"type\" className={classname(styles.formLabel, styles.labelContainer)}>Type</label>\n                            </div>\n                            <div>\n                                <Field\n                                    name=\"type\"\n                                    type=\"text\"\n                                    className={classname(styles.formInput)}\n                                />\n                            </div>\n                            <ErrorMessage\n                                name={\"type\"}\n                                component=\"div\"\n                                className=\"field-error\"\n                            />\n                        </div>\n                        <div className={classname(styles.imageField, styles.formControl)}>\n                            <div className={classname(styles.labelContainer)}>\n                            <label htmlFor=\"modifier_image\" className={classname(styles.formLabel, styles.labelContainer)}>\n                                Image\n                            </label>\n                            </div>\n                            <div>\n                            <input type=\"file\" name=\"modifier_image\" max={1} className={classname(styles.formInput)}/>\n                            </div>\n                        </div>\n                        <div className={classname(styles.titleWithNoBox)}>\n                            <h4>Description</h4>\n                        </div>\n                        <div className={classname(styles.formControl)}>\n                            <div>\n                                <Field\n                                    as=\"textarea\"\n                                    name=\"description\"\n                                    type=\"text\"\n                                    className={classname(styles.descriptionContainer)}\n                                />\n                            </div>\n                            <ErrorMessage\n                                name={\"name\"}\n                                component=\"div\"\n                                className=\"field-error\"\n                            />\n                        </div>\n                        \n                        <div>\n                            <h6 className={classname(styles.titleWithNoBox)}>\n                                Select Modifiers\n                            </h6>\n                            <div role=\"group\" className={classname(styles.checkboxContainer)}>\n                                {modifiers.map((m, i) => (\n                                    <label className={classname(styles.checkBoxLabel)}>\n                                         <Field type=\"checkbox\" name=\"modifiers\" value={m.name + i } key={i}/>\n                                         {normalize(m.name)}\n                                    </label>\n                                ))}\n                            </div>\n                        </div>\n                        <div className={classname(styles.saveButtonContainer)}>\n                            <button type=\"submit\" className={classname(styles.ctaButton)}>Save Option</button>\n                        </div>\n                    </div>\n                </Form>\n            )\n            }\n        </Formik >\n        </div>\n    )\n}","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Items/index.js",["152","153","154"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/utils/isValidImage.js",[],["155","156"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Groups/addGroup.js",["157","158","159"],"import React from 'react';\nimport classname from 'classnames';\nimport styles from './Groups.module.sass'\nimport _ from 'lodash';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport options from '../Options/options.json'\nimport { normalizeText as normalize } from 'utils/normalize'\nimport Table from 'components/orderTable'\nimport Modal from 'react-modal'\nconst columns = [\n    {\n        Header: 'Image',\n        accessor: 'image'\n    },\n    {\n        Header: 'Name',\n        accessor: 'name'\n    },\n    {\n        Header: 'Price',\n        accessor: 'price'\n    },\n    {\n        Header: 'Type',\n        accessor: 'type'\n    },\n]\nconst initialValues = {\n    name: '',\n    description: '',\n    price: '',\n    price_default: 2,\n    options: [],\n    min_required: 1,\n    max_allowed: 1,\n    display_order: 100\n}\nconst validationSchema = yup.object({\n    name: yup.string().required('A valid option must have name'),\n    description: yup.string().optional(),\n    image_url: yup.string().optional(),\n    price: yup.number().required('A valid option must have price'),\n    type: yup.string().optional(),\n})\nexport default function AddGroup(props) {\n    const [showTable, setTableShow] = React.useState(false);\n    const [selected, setSelected] = React.useState([]);\n    const customStyles = {\n        content : {\n          top                   : '50%',\n          left                  : '50%',\n          right                 : 'auto',\n          bottom                : 'auto',\n          marginRight           : '-50%',\n          transform             : 'translate(-50%, -50%)'\n        }\n      };\n    return (\n        <div className={classname(styles.container)}>\n        <Modal\n            isOpen={showTable}\n            onRequestClose={() => setTableShow(false)}\n            style={customStyles}\n        >\n            <Table updateSelectItems={setSelected} columns={columns} data={options}/>\n        </Modal>\n            <div className={classname(styles.titleContainer)}>\n            <div className={classname(styles.formTitle)}>\n                <h4>\n                    Add Group\n                </h4>\n            </div>\n            </div>\n            <div className={styles.formContainer}>\n            <Formik\n                enableReinitialize\n                initialValues={_.merge(initialValues, props.currentForm)}\n                onSubmit={async (values) => {\n                    props.formMethod(values)\n                    props.next(true)\n                }}\n            >\n                {({ values }) => (\n                    <Form>\n                        <div>\n                            <div className={classname(styles.formControl)}>\n                                <div className={classname(styles.labelContainer)}>\n                                    <label htmlFor=\"name\" className={classname(styles.formLabel, styles.labelContainer)}>Name</label>\n                                </div>\n                                <div>\n                                    <Field\n                                        name=\"name\"\n                                        type=\"text\"\n                                        className={classname(styles.formInput)}\n                                        autoFocus={true}\n                                        required\n                                    />\n                                </div>\n                                <ErrorMessage\n                                    name={\"name\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                />\n                            </div>\n                            <div className={classname(styles.formControl)}>\n                                <div className={classname(styles.labelContainer)}>\n                                    <label htmlFor=\"min_required\" className={classname(styles.formLabel, styles.labelContainer)}>Min Required</label>\n                                </div>\n                                <div>\n                                    <Field\n                                        name=\"min_required\"\n                                        value={values.min_required}\n                                        type=\"number\"\n                                        min={1}\n                                        className={classname(styles.formInput)}\n                                    />\n                                </div>\n                                <ErrorMessage\n                                    name={\"min_required\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                />\n                            </div>\n                            <div className={classname(styles.formControl)}>\n                                <div className={classname(styles.labelContainer)}>\n                                    <label htmlFor=\"max_allowed\" className={classname(styles.formLabel, styles.labelContainer)}>Max Allowed</label>\n                                </div>\n                                <div>\n                                    <Field\n                                        name=\"max_allowed\"\n                                        value={values.max_allowed}\n                                        type=\"number\"\n                                        min={1}\n                                        className={classname(styles.formInput)}\n                                    />\n                                </div>\n                                <ErrorMessage\n                                    name={\"max_allowed\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                />\n                            </div>\n                            <div className={classname(styles.formControl)}>\n                                <div className={classname(styles.labelContainer)}>\n                                    <label htmlFor=\"price_default\" className={classname(styles.formLabel, styles.labelContainer)}>Price Default</label>\n                                </div>\n                                <div>\n                                    <Field\n                                        name=\"price_default\"\n                                        value={values.price_default}\n                                        type=\"number\"\n                                        min={1}\n                                        className={classname(styles.formInput)}\n                                    />\n                                </div>\n                                <ErrorMessage\n                                    name={\"max_allowed\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                />\n                            </div>\n                            <div className={classname(styles.formControl)}>\n                                <div className={classname(styles.labelContainer)}>\n                                    <label htmlFor=\"display_order\" className={classname(styles.formLabel, styles.labelContainer)}>Display order</label>\n                                </div>\n                                <div>\n                                    <Field\n                                        name=\"display_order\"\n                                        value={values.display_order}\n                                        type=\"number\"\n                                        min={0}\n                                        className={classname(styles.formInput)}\n                                    />\n                                </div>\n                                <ErrorMessage\n                                    name={\"max_allowed\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                />\n                            </div>\n                            <div className={classname(styles.titleWithNoBox)}>\n                                <h4>Description</h4>\n                            </div>\n                            <div>\n                                <div>\n                                    <Field\n                                        as=\"textarea\"\n                                        name=\"description\"\n                                        type=\"text\"\n                                        className={classname(styles.descriptionContainer)}\n                                    />\n                                </div>\n                                <ErrorMessage\n                                    name={\"name\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                />\n                            </div>\n                            <div className={classname(styles.saveButtonContainer)}>\n                                <button type=\"submit\" className={classname(styles.ctaButton)}>Add Option</button>\n                            </div>\n                        </div>\n                    </Form>\n                )\n                }\n            </Formik >\n            </div>\n        </div>\n    )\n}","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Sidebar/sidebarRoutes.js",["160","161","162"],"import routes from 'routes';\nimport { map, sortBy } from 'lodash'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport classname from 'classnames';\nimport styles from './Sidebar.module.sass'\nexport default function SidebarRoutes() {\n    const location = useLocation();\n    const history = useHistory();\n    const currentPath = location.pathname;\n    const sortedRoutes = sortBy(routes(), [\"name\"]);\n    const handleClick = (route) => {\n        debugger\n        if (!route) return null;\n        let { component } = route\n        history.push(route.path)\n    }\n\n    return (\n        <div className={classname(styles.nav_links)}>\n            {map(sortedRoutes, route =>\n                {\n                    if(!route.icon) return null\n                return (\n                <div \n                    className={classname([styles.link_container, styles.isALinkContainer])}\n                    key={route.name} \n                    onClick={() => handleClick(route)}\n                >\n                    <div className={classname(styles.avatar_container)}>\n                        <img src={route.icon} className={classname(styles.link_avatar)} />\n                    </div>\n                    <div className={classname(styles.link_text)}>\n                        <p>\n                            {route.name}\n                        </p>\n                    </div>\n                </div>\n                )}\n            )}\n        </div>\n    )\n}","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Modifiers/addModifier.js",["163","164","165","166","167","168"],"import React from 'react';\nimport classname from 'classnames'\nimport styles from './Modifiers.module.sass';\nimport { Formik, ErrorMessage, Field, Form, FieldArray } from 'formik';\nimport * as Yup from 'yup';\nimport _ from 'lodash';\nconst initialValues = {\n    name: '',\n    options: [\n        {\n            name: '',\n            price: '',\n        },\n    ],\n};\nexport default function AddModifier() {\n    return (\n        <div className={classname(styles.container)}>\n            <div className={classname(styles.formTitle)}>\n                Add Modifier\n            </div>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={async (values) => {\n                    await new Promise((r) => setTimeout(r, 500));\n                    if((values.options[0].name || values.options[0].price) === ''){\n                        values.options.splice(0,1)\n                    }\n                    alert(JSON.stringify(values, null, 2));\n                }}\n            >\n                {({ values }) => (\n                    <Form>\n                        <div>\n                            <div className={classname(styles.formControl)}>\n                                <div>\n                                    <label htmlFor=\"name\" className={classname(styles.formLable)}>Modifier</label>\n                                </div>\n                                <div>\n                                    <Field\n                                        name=\"name\"\n                                        type=\"text\"\n                                        className={classname(styles.formInput)}\n                                    />\n                                </div>\n                                <ErrorMessage\n                                    name={\"name\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                />\n                            </div>\n                            <div>\n                                <div>\n                                    <h4>\n                                        Options\n                                    </h4>\n                                </div>\n                                <FieldArray name=\"options\">\n                                    {({ insert, remove, push, form }) => (\n                                        <div>\n                                            {values.options.length > 0 &&\n                                                values.options.map((option, index) => (\n                                                    <div className={classname(styles.horizontalContent)} key={index}>\n                                                        <div className={classname(styles.formControl)}>\n                                                            <div>\n                                                                <label className={classname(styles.formLable)} htmlFor={`options.${index}.name`}>Name</label>\n                                                            </div>\n                                                            <div>\n                                                                <Field\n                                                                    name={`options.${index}.name`}\n                                                                    type=\"text\"\n                                                                    className={classname(styles.formInput)}\n                                                                />\n                                                            </div>\n                                                            <ErrorMessage\n                                                                name={`options.${index}.name`}\n                                                                component=\"div\"\n                                                                className=\"field-error\"\n                                                            />\n                                                        </div>\n                                                        <div className={classname(styles.formControl)}>\n                                                            <div>\n                                                                <label className={classname(styles.formLable)} htmlFor={`options.${index}.price`}>Price</label>\n                                                            </div>\n                                                            <div>\n                                                                <Field\n                                                                    name={`options.${index}.price`}\n                                                                    type=\"number\"\n                                                                    step=\"0.01\"\n                                                                    className={classname(styles.formInput)}\n                                                                />\n                                                            </div>\n                                                            <ErrorMessage\n                                                                name={`options.${index}.price`}\n                                                                component=\"div\"\n                                                                className=\"field-error\"\n                                                            />\n                                                        </div>\n                                                        <div className={classname(styles.button_container)}>\n                                                            {index === 0 ? null :\n                                                                <div>\n                                                                    <button\n                                                                        type=\"button\"\n                                                                        className=\"secondary\"\n                                                                        onClick={() => remove(index)}\n                                                                        className={classname(styles.common_button)}\n                                                                    >\n                                                                        <img src=\"/assets/remove.svg\" height=\"20px\" width=\"20px\"/>\n                                                                    </button>\n                                                                </div>\n                                                            }\n                                                            {\n                                                                index !== 0 ? null :\n                                                                    <div className={classname(styles.buttonContainer)}>\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"secondary\"\n                                                                            onClick={() => insert(0, { name: '', price: '' })}\n                                                                            className={classname(styles.common_button)}\n                                                                        >\n                                                                            <img src=\"/assets/plus.svg\" height=\"20px\" width=\"20px\" />\n                                                                        </button>\n                                                                    </div>\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                        </div>\n                                    )}\n                                </FieldArray>\n                            </div>\n                        </div>\n                        <div className={classname(styles.saveButtonContainer)}>\n                            <button type=\"submit\" className={classname(styles.ctaButton)}>Save Option</button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Options/index.js",["169","170","171"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Modifiers/index.js",["172","173","174"],"import React from 'react';\nimport classname from 'classnames'\nimport styles from './Modifiers.module.sass';\nimport {useHistory} from 'react-router-dom'\nimport Table from 'components/table'\nimport modifiers from './modifiers.json'\nimport {normalizeText as normalize} from 'utils/normalize'\nimport _ from 'lodash'\nimport {FaEdit, FaTrash} from 'react-icons/fa'\nexport default function Modifiers (){\n    const [selected, setSelected] = React.useState()\n    const [open, setOpen] = React.useState()\n    const history = useHistory()\n    const columns = [\n        {\n            Header: 'Modifier',\n            accessor: d => normalize(d.name)\n        },\n        {\n            Header: 'Options',\n            accessor: 'options',\n            Cell: row => {\n                return (\n                    _.map(row.value, r => (\n                        <div style={{display: 'flex', justifyContent:'center'}}>\n                        <div style={{display: 'grid', gridTemplateColumns: '100px 100px'}}>\n                        <div style={{padding: '0 5px'}}>\n                            {normalize(r.name)}\n                        </div>\n                        <div>\n                            {parseFloat(r.value).toFixed(2)}\n                        </div>\n                        </div>\n                        </div>\n                    ))\n                )\n            }\n        },\n        {\n            Header: \"Actions\",\n            accessor: 'actions'\n        }\n    ]\n    _.map(modifiers, option => _.assign(option, {actions: (\n            <div style={{display: 'flex', justifyContent: 'center'}}>\n                <div style={{padding: '0 5px'}}>\n                    <button>\n                        <FaEdit />\n                    </button>\n                </div>\n                <div>\n                    <button>\n                        <FaTrash />\n                    </button>\n                </div>\n            </div>\n        )}))\n    return (\n        <div className={classname(styles.tableContainer)}>\n            <div>\n            <Table columns={columns} data={modifiers} updateSelectItems={setSelected}/>\n            </div>\n            <div style={{display: 'flex', justifyContent: 'center', margin: '20px'}}>\n              <button onClick={() => setOpen(true)} className={classname(styles.ctaButton)}>\n                Add Modifier\n              </button>\n            </div>\n        </div>\n    )\n}\n","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/modules/options/constants.js",[],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Groups/index.js",["175"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Items/addItem.js",["176","177","178","179","180"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/reducers.js",["181","182"],"import {combineReducers} from 'redux'\nimport optionReducer from 'modules/options/reducer';\n\nexport default function () {\n    return {\n        options: optionReducer\n    }\n}","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/modals/Groups/index.js",[],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/modals/Options/index.js",["183","184","185"],"import React from 'react';\nimport classname from 'classnames'\nimport _ from 'lodash'\nimport styles from './Options.module.sass'\nimport Options from 'views/Options/options.json'\nimport { normalizeText as normalize, normalizeText } from 'utils/normalize';\nexport default function OptionModal(props) {\n    const { option } = props;\n    let selectedOption = _.filter(Options, { name: option })[0]\n    const {\n        name,\n        description,\n        modifiers,\n        image_url,\n        price,\n        type\n    } = selectedOption;\n    return (\n        <div className={classname(styles.modal_main)}>\n            <div className={classname(styles.modal_header)} />\n            <div className={classname(styles.modal_body)}>\n                <div className={classname(styles.modal_title)}>\n                    {/* name attribute here */}\n                <div>\n                    <img src={'/mozzarella.jpg'} className={classname(styles.avatar)}/>\n                </div>\n                    <div className={classname(styles.padding_5px)}>\n                        <h5 style={{ fontSize: '1rem' }}>{normalize(name)}</h5>\n                    </div>\n                </div>\n                <div>\n                    <div className={classname(styles.display_container)}>\n                        <label className={classname(styles.modal_label)}>Price</label>\n                        <p>${parseFloat(price)}</p>\n                    </div>\n                    <div className={classname(styles.display_container)}>\n                        <label className={classname(styles.modal_label)}>Type</label>\n                        <p>{normalize(type)}</p>\n                    </div>\n                </div>\n                <div>\n                    <p className={classname(styles.modal_label)}>Modifiers</p>\n                    <ul>\n                        {modifiers.map((m, i) => (\n                            <li key={i}>\n                                {m}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className={classname(styles.text_area)}>\n                    <div className={classname(styles.row_with_margin, styles.modal_label)}>Description</div>\n                    <textarea\n                        value={description}\n                        disabled\n                        style={{ width: '100%', height: 'auto', padding: '10px', margin: '0 10px' }}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/table/index.js",["186","187","188","189","190","191","192","193","194","195","196","197","198","199"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Grid/GridItem.js",[],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Grid/GridContainer.js",[],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/orderTable/index.js",[],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":17,"column":25,"nodeType":"206","endLine":17,"endColumn":102},{"ruleId":"200","replacedBy":"207"},{"ruleId":"202","replacedBy":"208"},{"ruleId":"200","replacedBy":"209"},{"ruleId":"202","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":25,"nodeType":"213","messageId":"214","endLine":2,"endColumn":33},{"ruleId":"211","severity":1,"message":"215","line":8,"column":12,"nodeType":"213","messageId":"214","endLine":8,"endColumn":21},{"ruleId":"200","replacedBy":"216"},{"ruleId":"202","replacedBy":"217"},{"ruleId":"211","severity":1,"message":"218","line":19,"column":7,"nodeType":"213","messageId":"214","endLine":19,"endColumn":21},{"ruleId":"219","severity":1,"message":"220","line":22,"column":1,"nodeType":"221","endLine":31,"endColumn":2},{"ruleId":"200","replacedBy":"222"},{"ruleId":"202","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":22,"column":9,"nodeType":"226","messageId":"227","endLine":23,"endColumn":75},{"ruleId":"219","severity":1,"message":"228","line":9,"column":1,"nodeType":"221","endLine":70,"endColumn":2},{"ruleId":"211","severity":1,"message":"229","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":9},{"ruleId":"211","severity":1,"message":"230","line":17,"column":7,"nodeType":"213","messageId":"214","endLine":17,"endColumn":23},{"ruleId":"211","severity":1,"message":"231","line":25,"column":11,"nodeType":"213","messageId":"214","endLine":25,"endColumn":23},{"ruleId":"211","severity":1,"message":"232","line":7,"column":27,"nodeType":"213","messageId":"214","endLine":7,"endColumn":36},{"ruleId":"211","severity":1,"message":"233","line":28,"column":12,"nodeType":"213","messageId":"214","endLine":28,"endColumn":20},{"ruleId":"211","severity":1,"message":"234","line":30,"column":11,"nodeType":"213","messageId":"214","endLine":30,"endColumn":18},{"ruleId":"200","replacedBy":"235"},{"ruleId":"202","replacedBy":"236"},{"ruleId":"211","severity":1,"message":"232","line":8,"column":27,"nodeType":"213","messageId":"214","endLine":8,"endColumn":36},{"ruleId":"211","severity":1,"message":"230","line":39,"column":7,"nodeType":"213","messageId":"214","endLine":39,"endColumn":23},{"ruleId":"211","severity":1,"message":"233","line":48,"column":12,"nodeType":"213","messageId":"214","endLine":48,"endColumn":20},{"ruleId":"211","severity":1,"message":"237","line":9,"column":11,"nodeType":"213","messageId":"214","endLine":9,"endColumn":22},{"ruleId":"211","severity":1,"message":"215","line":14,"column":15,"nodeType":"213","messageId":"214","endLine":14,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":30,"column":25,"nodeType":"206","endLine":30,"endColumn":91},{"ruleId":"211","severity":1,"message":"238","line":5,"column":13,"nodeType":"213","messageId":"214","endLine":5,"endColumn":16},{"ruleId":"211","severity":1,"message":"229","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":9},{"ruleId":"239","severity":1,"message":"240","line":106,"column":73,"nodeType":"241","endLine":106,"endColumn":116},{"ruleId":"204","severity":1,"message":"205","line":108,"column":73,"nodeType":"206","endLine":108,"endColumn":131},{"ruleId":"239","severity":1,"message":"240","line":119,"column":77,"nodeType":"241","endLine":119,"endColumn":120},{"ruleId":"204","severity":1,"message":"205","line":121,"column":77,"nodeType":"206","endLine":121,"endColumn":134},{"ruleId":"211","severity":1,"message":"242","line":5,"column":9,"nodeType":"213","messageId":"214","endLine":5,"endColumn":19},{"ruleId":"211","severity":1,"message":"233","line":10,"column":12,"nodeType":"213","messageId":"214","endLine":10,"endColumn":20},{"ruleId":"211","severity":1,"message":"243","line":11,"column":12,"nodeType":"213","messageId":"214","endLine":11,"endColumn":16},{"ruleId":"211","severity":1,"message":"233","line":11,"column":12,"nodeType":"213","messageId":"214","endLine":11,"endColumn":20},{"ruleId":"211","severity":1,"message":"243","line":12,"column":12,"nodeType":"213","messageId":"214","endLine":12,"endColumn":16},{"ruleId":"211","severity":1,"message":"234","line":13,"column":11,"nodeType":"213","messageId":"214","endLine":13,"endColumn":18},{"ruleId":"211","severity":1,"message":"244","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":18},{"ruleId":"211","severity":1,"message":"232","line":9,"column":27,"nodeType":"213","messageId":"214","endLine":9,"endColumn":36},{"ruleId":"211","severity":1,"message":"245","line":10,"column":8,"nodeType":"213","messageId":"214","endLine":10,"endColumn":13},{"ruleId":"211","severity":1,"message":"246","line":14,"column":36,"nodeType":"213","messageId":"214","endLine":14,"endColumn":43},{"ruleId":"211","severity":1,"message":"247","line":14,"column":45,"nodeType":"213","messageId":"214","endLine":14,"endColumn":58},{"ruleId":"211","severity":1,"message":"230","line":25,"column":7,"nodeType":"213","messageId":"214","endLine":25,"endColumn":23},{"ruleId":"211","severity":1,"message":"248","line":1,"column":9,"nodeType":"213","messageId":"214","endLine":1,"endColumn":24},{"ruleId":"219","severity":1,"message":"228","line":4,"column":1,"nodeType":"221","endLine":8,"endColumn":2},{"ruleId":"211","severity":1,"message":"249","line":6,"column":38,"nodeType":"213","messageId":"214","endLine":6,"endColumn":51},{"ruleId":"211","severity":1,"message":"250","line":14,"column":9,"nodeType":"213","messageId":"214","endLine":14,"endColumn":18},{"ruleId":"204","severity":1,"message":"205","line":25,"column":21,"nodeType":"206","endLine":25,"endColumn":88},{"ruleId":"211","severity":1,"message":"251","line":5,"column":3,"nodeType":"213","messageId":"214","endLine":5,"endColumn":19},{"ruleId":"211","severity":1,"message":"252","line":7,"column":3,"nodeType":"213","messageId":"214","endLine":7,"endColumn":13},{"ruleId":"211","severity":1,"message":"253","line":20,"column":8,"nodeType":"213","messageId":"214","endLine":20,"endColumn":19},{"ruleId":"211","severity":1,"message":"254","line":27,"column":7,"nodeType":"213","messageId":"214","endLine":27,"endColumn":12},{"ruleId":"211","severity":1,"message":"255","line":39,"column":7,"nodeType":"213","messageId":"214","endLine":39,"endColumn":16},{"ruleId":"256","severity":1,"message":"257","line":93,"column":24,"nodeType":"258","endLine":93,"endColumn":37},{"ruleId":"256","severity":1,"message":"257","line":94,"column":21,"nodeType":"258","endLine":94,"endColumn":34},{"ruleId":"211","severity":1,"message":"259","line":129,"column":5,"nodeType":"213","messageId":"214","endLine":129,"endColumn":10},{"ruleId":"211","severity":1,"message":"260","line":130,"column":5,"nodeType":"213","messageId":"214","endLine":130,"endColumn":19},{"ruleId":"211","severity":1,"message":"261","line":133,"column":5,"nodeType":"213","messageId":"214","endLine":133,"endColumn":14},{"ruleId":"211","severity":1,"message":"262","line":139,"column":13,"nodeType":"213","messageId":"214","endLine":139,"endColumn":22},{"ruleId":"211","severity":1,"message":"263","line":139,"column":24,"nodeType":"213","messageId":"214","endLine":139,"endColumn":32},{"ruleId":"264","severity":1,"message":"265","line":176,"column":9,"nodeType":"266","messageId":"267","endLine":176,"endColumn":18},{"ruleId":"256","severity":1,"message":"268","line":178,"column":86,"nodeType":"269","endLine":178,"endColumn":120,"suggestions":"270"},"no-native-reassign",["271"],"no-negated-in-lhs",["272"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["271"],["272"],["271"],["272"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'component' is assigned a value but never used.",["271"],["272"],"'sagaMiddleware' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["271"],["272"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","Unexpected default export of anonymous function","'_' is defined but never used.","'validationSchema' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'normalize' is defined but never used.","'selected' is assigned a value but never used.","'history' is assigned a value but never used.",["271"],["272"],"'currentPath' is assigned a value but never used.","'Yup' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useHistory' is defined but never used.","'open' is assigned a value but never used.","'OrderTable' is defined but never used.","'Modal' is defined but never used.","'FaTrash' is defined but never used.","'FaStroopwafel' is defined but never used.","'combineReducers' is defined but never used.","'normalizeText' is defined but never used.","'image_url' is assigned a value but never used.","'useAsyncDebounce' is defined but never used.","'ReactTable' is defined but never used.","'CssBaseline' is defined but never used.","'style' is assigned a value but never used.","'newStyles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'state' is assigned a value but never used.","'visibleColumns' is assigned a value but never used.","'pageCount' is assigned a value but never used.","'pageIndex' is assigned a value but never used.","'pageSize' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","React Hook React.useEffect has a missing dependency: 'selectedFlatRows'. Either include it or remove the dependency array.","ArrayExpression",["273"],"no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},"Update the dependencies array to be: [updateSelectItems, selectedRowIds, selectedFlatRows]",{"range":"276","text":"277"},[4798,4832],"[updateSelectItems, selectedRowIds, selectedFlatRows]"]