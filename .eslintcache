[{"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/index.js":"1","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/saga.js":"2","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/index.js":"3","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/service.js":"4","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/index.js":"5","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/addGroup.js":"6","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/constants.js":"7","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/utils.js":"8","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/actions.js":"9","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/reducer.js":"10","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/index.js":"11","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/actions.js":"12","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/constants.js":"13","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/saga.js":"14","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/addModifier.js":"15","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/table/index.js":"16","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/index.js":"17","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/sidebarRoutes.js":"18","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/routes.js":"19","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reportWebVitals.js":"20","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reducers.js":"21","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/saga.js":"22","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/saga.js":"23","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/service.js":"24","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/constants.js":"25","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/utils/normalize.js":"26","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/addItem.js":"27","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/selector.js":"28","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/orderTable/index.js":"29","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/index.js":"30","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/App.js":"31","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/sagas.js":"32","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/service.js":"33","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/selector.js":"34","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/reducer.js":"35","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/reducer.js":"36","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/selector.js":"37","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/selectors.js":"38","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/addOption.js":"39","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Pizza/index.js":"40","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/reducer.js":"41","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/actions.js":"42","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/Layouts/index.js":"43","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/createStore.js":"44","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/constants.js":"45","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/api.js":"46","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/service.js":"47","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/actions.js":"48"},{"size":501,"mtime":1617371187943,"results":"49","hashOfConfig":"50"},{"size":3701,"mtime":1618599920506,"results":"51","hashOfConfig":"50"},{"size":6139,"mtime":1618501504787,"results":"52","hashOfConfig":"50"},{"size":897,"mtime":1617371188023,"results":"53","hashOfConfig":"54"},{"size":4623,"mtime":1618502740081,"results":"55","hashOfConfig":"50"},{"size":13314,"mtime":1617371188067,"results":"56","hashOfConfig":"50"},{"size":1463,"mtime":1617371188011,"results":"57","hashOfConfig":"50"},{"size":335,"mtime":1617371188103,"results":"58","hashOfConfig":"50"},{"size":817,"mtime":1617371187963,"results":"59","hashOfConfig":"54"},{"size":2769,"mtime":1617494937575,"results":"60","hashOfConfig":"50"},{"size":5342,"mtime":1618502142490,"results":"61","hashOfConfig":"54"},{"size":878,"mtime":1617371208896,"results":"62","hashOfConfig":"54"},{"size":1194,"mtime":1617371226520,"results":"63","hashOfConfig":"50"},{"size":4011,"mtime":1618599818216,"results":"64","hashOfConfig":"50"},{"size":10433,"mtime":1618601267692,"results":"65","hashOfConfig":"50"},{"size":8098,"mtime":1618501172516,"results":"66","hashOfConfig":"50"},{"size":1184,"mtime":1617373145952,"results":"67","hashOfConfig":"54"},{"size":1636,"mtime":1617819223786,"results":"68","hashOfConfig":"50"},{"size":1968,"mtime":1617819217226,"results":"69","hashOfConfig":"50"},{"size":362,"mtime":1613558109347,"results":"70","hashOfConfig":"54"},{"size":423,"mtime":1618596741443,"results":"71","hashOfConfig":"50"},{"size":3738,"mtime":1618599548300,"results":"72","hashOfConfig":"50"},{"size":3660,"mtime":1618599957060,"results":"73","hashOfConfig":"50"},{"size":821,"mtime":1616526875447,"results":"74","hashOfConfig":"50"},{"size":1562,"mtime":1616526875447,"results":"75","hashOfConfig":"54"},{"size":136,"mtime":1613558109347,"results":"76","hashOfConfig":"50"},{"size":14928,"mtime":1617819533798,"results":"77","hashOfConfig":"50"},{"size":1012,"mtime":1617371188007,"results":"78","hashOfConfig":"50"},{"size":4596,"mtime":1613727067867,"results":"79","hashOfConfig":"50"},{"size":4008,"mtime":1618502796429,"results":"80","hashOfConfig":"54"},{"size":1082,"mtime":1618596719904,"results":"81","hashOfConfig":"50"},{"size":334,"mtime":1616526875451,"results":"82","hashOfConfig":"54"},{"size":846,"mtime":1616526875451,"results":"83","hashOfConfig":"54"},{"size":1254,"mtime":1617371188011,"results":"84","hashOfConfig":"54"},{"size":2775,"mtime":1617520224082,"results":"85","hashOfConfig":"54"},{"size":2434,"mtime":1617531714733,"results":"86","hashOfConfig":"54"},{"size":1497,"mtime":1617490945074,"results":"87","hashOfConfig":"54"},{"size":1011,"mtime":1617494684933,"results":"88","hashOfConfig":"50"},{"size":11849,"mtime":1618513652139,"results":"89","hashOfConfig":"54"},{"size":1064,"mtime":1613558109343,"results":"90","hashOfConfig":"50"},{"size":2444,"mtime":1617818195640,"results":"91","hashOfConfig":"54"},{"size":812,"mtime":1616526875447,"results":"92","hashOfConfig":"50"},{"size":367,"mtime":1615192430968,"results":"93","hashOfConfig":"54"},{"size":1135,"mtime":1618580959869,"results":"94","hashOfConfig":"50"},{"size":1306,"mtime":1616526875447,"results":"95","hashOfConfig":"54"},{"size":72,"mtime":1616526875415,"results":"96","hashOfConfig":"50"},{"size":930,"mtime":1617371188011,"results":"97","hashOfConfig":"54"},{"size":901,"mtime":1617371188011,"results":"98","hashOfConfig":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sy1zlp",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"ds2j73",{"filePath":"109","messages":"110","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"103"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"103"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"103"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"103"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"148"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"175"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"120"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/index.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/saga.js",[],["213","214"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/index.js",["215","216","217","218","219","220","221"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/service.js",[],["222","223"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/index.js",["224","225","226","227","228","229","230","231","232","233"],"import React from \"react\";\nimport classname from \"classnames\";\nimport styles from \"./Items.module.sass\";\nimport { useHistory } from \"react-router-dom\";\nimport items from \"./items.json\";\nimport Table from \"components/table\";\nimport { normalizeText } from \"utils/normalize\";\nimport { FaEdit, FaTrash, FaWindowClose } from \"react-icons/fa\";\nimport _, { isEmpty } from \"lodash\";\nimport Modal from \"react-modal\";\nimport AddItem from \"./addItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  listItems,\n  removeItem,\n  setSelected as selectItem,\n} from \"modules/items/actions\";\nimport {\n  listSelector,\n  loadingSelector,\n  errorSelector,\n  itemInfoSelector,\n} from \"modules/items/selector\";\nimport { listGroup } from \"modules/groups/actions\";\nimport { listSelector as groupsSelector } from \"modules/groups/selector\";\nimport { listOptions } from \"modules/options/actions\";\nimport { optionsSelector } from \"modules/options/selector\";\nconst customStyles = {\n  content: {\n    margin: \"auto\",\n    height: \"80%\",\n    width: \"100%\",\n    maxWidth: \"600px\",\n    overflow: \"auto\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    bottom: \"auto\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nexport default function Items() {\n  const dispatch = useDispatch();\n  const items = useSelector(listSelector);\n  const loading = useSelector(loadingSelector);\n  const itemInfo = useSelector(itemInfoSelector);\n  const [selected, setSelected] = React.useState();\n  const [open, setOpen] = React.useState(false);\n  const [newItem, setItem] = React.useState();\n  const history = useHistory();\n  React.useEffect(() => {\n    if (isEmpty(itemInfo) && isEmpty(items)) {\n      dispatch(listItems());\n    }\n  }, [dispatch, items]);\n  const handleEdit = (item) => {\n    delete item.actions;\n    dispatch(selectItem(item));\n    history.push(\"/addItem\");\n  };\n  const handleDelete = (item) => {\n    const confirm = window.confirm(\n      \"You are about to remove an item. This is permanant\"\n    );\n    if (!!confirm) {\n      dispatch(removeItem(item.id));\n    }\n  };\n  const columns = [\n    {\n      Header: \"Name\",\n      accessor: (d) => normalizeText(d.name),\n    },\n    {\n      Header: \"Type\",\n      accessor: (d) => normalizeText(d.type) || \"-\",\n    },\n    {\n      Header: \"Price\",\n      accessor: (d) => d.price || \"-\",\n    },\n    {\n      Header: \"Active\",\n      accessor: (d) => (d.active === 1 ? \"True\" : \"False\"),\n    },\n    {\n      Header: \"Stock\",\n      accessor: (d) => d.stock || \"-\",\n    },\n    {\n      Header: \"Options\",\n      accessor: (d) => {\n        let names = _.map(d.options, (_) => normalizeText(_.name));\n        return names.join(\", \") || \"-\";\n      },\n    },\n    {\n      Header: \"Groups\",\n      accessor: (d) => {\n        let names = _.map(d.option_groups, (_) => normalizeText(_.name));\n        return names.join(\", \") || \"-\";\n      },\n    },\n    {\n      Header: \"Actions\",\n      accessor: \"actions\",\n    },\n  ];\n  _.map(items, (item) =>\n    _.assign(item, {\n      actions: (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <div style={{ padding: \"0 5px\" }}>\n            <button\n              className=\"transparentButton\"\n              onClick={() => handleEdit(item)}\n            >\n              <FaEdit />\n            </button>\n          </div>\n          <div>\n            <button\n              className=\"transparentButton\"\n              onClick={() => handleDelete(item)}\n            >\n              <FaTrash />\n            </button>\n          </div>\n        </div>\n      ),\n    })\n  );\n  return (\n    <div className={classname(styles.tableContainer)}>\n      <Modal isOpen={open} style={customStyles}>\n        <div>\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <button\n              onClick={() => setOpen(false)}\n              style={{ cursor: \"pointer\" }}\n              className=\"transparentButton\"\n            >\n              <FaWindowClose />\n            </button>\n          </div>\n          <AddItem setOpen={setOpen} setItem={setItem} />\n        </div>\n      </Modal>\n      <div>\n        <Table columns={columns} data={items} updateSelectItems={setSelected} />\n        {!isEmpty(itemInfo) && (\n          <div className=\"UcenterWithMargin IamInfo\">\n            * Add Items to view in this table\n          </div>\n        )}\n      </div>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", margin: \"20px\" }}\n      >\n        <button\n          onClick={() => setOpen(true)}\n          className={classname(styles.ctaButton)}\n        >\n          Add Item\n        </button>\n      </div>\n    </div>\n  );\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/addGroup.js",["234","235","236","237","238","239"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/utils.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/actions.js",[],["240","241"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/reducer.js",["242","243"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/index.js",["244","245"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/actions.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/addModifier.js",["246","247"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/table/index.js",["248","249","250","251","252","253","254"],"import React from \"react\";\nimport {\n  useTable,\n  useFilters,\n  useAsyncDebounce,\n  useSortBy,\n  usePagination,\n  useRowSelect,\n  useGlobalFilter,\n} from \"react-table\";\nimport _ from \"lodash\";\nimport classnames from \"classnames\";\nimport { matchSorter } from \"match-sorter\";\nimport styles from \"./table.module.css\";\n\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { map } from \"lodash\";\nconst style = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\nconst newStyles = {\n  formControlMargins: {\n    margin: \"3px 0 !important\",\n  },\n  gridContainer: {\n    justifyContent: \"center\",\n  },\n};\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n      <input\n        onChange={(e) => {\n          setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n        }}\n        placeholder={`Search ${count} records...`}\n        className={classnames(styles.rt_header_search)}\n      />\n    </div>\n  );\n}\n// global filter\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return (\n    <div style={{display: 'flex' }}>\n      <div style={{display: 'flex', alignItems:'center'}}>\n        Search\n      </div>\n      <input\n        value={value || \"\"}\n        onChange={(e) => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        }}\n        style={{\n          margin: '10px',\n          width: '100%',\n          fontSize: \"1rem\",\n          border: \"solid 1px\",\n          borderRadius: '5px',\n          padding: \"10px\",\n        }}\n      />\n    </div>\n  );\n}\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = (val) => !val;\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n      </>\n    );\n  }\n);\n\n// Our table component\nfunction Table({\n  columns,\n  data,\n  updateSelectItems,\n  withCheckBox,\n  noAction,\n  preSelected,\n  title,\n}) {\n  const memo_columns = React.useMemo(() => {\n    if (noAction) {\n      _.remove(columns, { Header: \"Actions\" });\n      return columns;\n    } else return columns;\n  }, [noAction]);\n  const memo_data = React.useMemo(() => data);\n  const filterTypes = React.useMemo(\n    () => ({\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: (rows, id, filterValue) => {\n        return rows.filter((row) => {\n          const rowValue = row.values[id];\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true;\n        });\n      },\n    }),\n    []\n  );\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n  const preSelectIndex = _.map(preSelected, (s) =>\n    _.indexOf(\n      memo_data.map((m) => m.id),\n      s.id\n    )\n  );\n  const selected = {};\n  preSelectIndex.map((i) => (selected[i] = true));\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    visibleColumns,\n    state: {selectedRowIds },\n    selectedFlatRows,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns: memo_columns,\n      data: memo_data,\n      defaultColumn, // Be sure to pass the defaultColumn option\n      filterTypes,\n      initialState: { selectedRowIds: selected },\n    },\n    useFilters, // useFilters!\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    (hooks) => {\n      if (withCheckBox) {\n        hooks.visibleColumns.push((columns) => [\n          {\n            id: \"selection\",\n            Header: ({ getToggleAllPageRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox\n                  {...getToggleAllPageRowsSelectedProps()}\n                />\n              </div>\n            ),\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ]);\n      } else return null;\n    }\n  );\n\n  React.useEffect(() => {\n    updateSelectItems(\n      map(selectedFlatRows, (d) => {\n        return d.original;\n      })\n    );\n  }, [updateSelectItems, selectedRowIds]);\n  return (\n    <div className={classnames(styles.ReactTable)}>\n      {title && <div className={classnames(styles.tableTile)}>{title}</div>}\n      <div>\n        <GlobalFilter\n          preGlobalFilteredRows={preGlobalFilteredRows}\n          globalFilter={state.globalFilter}\n          setGlobalFilter={setGlobalFilter}\n        />\n      </div>\n      <MaUTable {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()} className=\"rt-tr\">\n              {headerGroup.headers.map((column, key) => (\n                <TableCell\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                >\n                  <div\n                    className=\"rt-resizable-header-content table-header\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {column.render(\"Header\")}\n                    <span>\n                      {\n                        column.isSorted ? column.isSortedDesc ? ' 🔽':' 🔼': ''\n                      }\n                    </span>\n                  </div>\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n          {/*\n          <TableRow>\n            <TableCell\n              colSpan={visibleColumns.length}\n              style={{ textAlign: \"left\" }}\n            ></TableCell>\n          </TableRow>\n          */}\n        </TableHead>\n        <TableBody\n          // style={{ textAlign: \"center\" }}\n          {...getTableBodyProps()}\n          className=\"rt-tbody\"\n        >\n          {rows.map((row, i) => {\n            prepareRow(row);\n\n            return (\n              <TableRow\n                {...row.getRowProps()}\n                className={classnames(\n                  \"rt-tr\",\n                  { \" -odd\": i % 2 === 0 },\n                  { \" -even\": i % 2 === 1 }\n                )}\n                //   onClick={() => handleClickOpen(row.original)}\n              >\n                {row.cells.map((cell) => {\n                  return (\n                    <TableCell\n                      {...cell.getCellProps()}\n                      className=\"rt-td\"\n                      style={{ textAlign: \"center\" }}\n                    >\n                      {cell.render(\"Cell\")}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </MaUTable>\n    </div>\n  );\n}\nexport default Table;\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/index.js",["255"],"import React from 'react';\nimport styles from './Sidebar.module.sass';\nimport classname from 'classnames';\nimport default_img from './default.jpg';\nimport { normalizeText } from 'utils/normalize'\nimport SidebarRoutes from './sidebarRoutes'\nexport default function Sidebar(props) {\n    const [activeRoute, setActive] = React.useState('/items')\n    const {\n        title,\n        img\n    } = props;\n    return (\n        <div className={classname(styles.main)}>\n            <div className={classname(styles.sidebar_header)}>\n                <div class={classname(styles.titleBox)}>\n                    <div className={classname(styles.avatar)}>\n                        <img src={img ? img : default_img} className={classname(styles.avatarImg)} />\n                    </div>\n                    <div className={classname(styles.title)}>\n                        <h1>{title ? normalizeText(title) : normalizeText('echola pizza')}</h1>\n                    </div>\n                </div>\n            </div>\n            <div className={classname(styles.sidebar_content)}>\n                <SidebarRoutes activeRoute={activeRoute} setActive={setActive}/>\n            </div>\n        </div>\n    )\n}",["256","257"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/sidebarRoutes.js",["258","259","260","261","262"],"import routes from 'routes';\nimport { map, sortBy } from 'lodash'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport classname from 'classnames';\nimport styles from './Sidebar.module.sass'\nimport React from 'react'\nimport {FaObjectGroup, FaSitemap, FaPizzaSlice, FaDiceD6 } from 'react-icons/fa'\nexport default function SidebarRoutes(props) {\n    const {activeRoute, setActive} = props\n    const history = useHistory();\n    const location = useLocation()\n    const sortedRoutes = sortBy(routes(), [\"num\"]);\n    const handleClick = (route) => {\n        if (!route) return null;\n        setActive(route.path)\n    }\n    React.useEffect(() => {\n        history.push(activeRoute)\n    }, \n    [activeRoute])\n    return (\n        <div className={classname(styles.nav_links)}>\n            {map(sortedRoutes, route =>\n                {\n                    if(!route.icon) return null\n                return (\n                <div \n                    className={classname(styles.link_container, styles.isALinkContainer, {[styles.isActive]: \"/\" + route.name.toLowerCase() === location.pathname ? true : false})}\n                    key={route.name} \n                    onClick={() => handleClick(route)}\n                >\n                    <div className={classname(styles.avatar_container)}>\n                        {route.icon}\n                    </div>\n                    <div className={classname(styles.link_text)}>\n                        <p>\n                            {route.name}\n                        </p>\n                    </div>\n                </div>\n                )}\n            )}\n        </div>\n    )\n}\n",["263","264"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/routes.js",["265"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reportWebVitals.js",[],["266","267"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reducers.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/saga.js",["268"],"import {takeEvery, put, call} from 'redux-saga/effects'\nimport {listoptions, detailOption, deleteOption, addOption, updateOption} from './service'\nimport * as Actions from './constants'\nimport {createBrowserHistory} from 'history'\nconst history = createBrowserHistory()\nfunction* listOptionSaga(){\n    try {\n    const response = yield call(listoptions)\n    const {status, data} = response\n    if(status === 200) {\n        yield put({\n            type: Actions.LIST_OPTIONS_SUCCESS,\n            payload: data\n        })\n    }\n    else throw new Error(\"Unable to fetch options\")\n    }\n    catch(err){\n        console.log(err)\n        yield ({\n            type: Actions.LIST_OPTIONS_ERROR,\n            error: err.message\n        })\n    }\n}\n\nfunction* addOptionSaga({payload}){\n    try{\n        const addReq = yield call(addOption, payload)\n        if(addReq.status === 201){\n            yield put({\n                type: Actions.ADD_OPTION_SUCCESS,\n                payload: addReq.data\n            })\n        yield put({\n            type: Actions.LIST_OPTIONS\n        }) \n        }\n        else throw new Error(\"Unable to add option\")\n    }\n    catch (err){\n        console.log(err)\n        alert(err.message)\n        yield put({\n            type: Actions.ADD_OPTION_ERROR,\n            error: err.message\n        })\n    }\n}\n\nfunction* updateOptionSaga({payload}){\n    try{\n        const updateReq = yield call(updateOption, payload)\n        const {status} = updateReq\n        if(status === 200) {\n            alert('Update Option success')\n            yield put({\n                type: Actions.UPDATE_OPTION_SUCCESS,\n                pajjluuyload: 'success'\n            })\n        yield call(listOptionSaga)\n        this.context.history.push('/options')\n        }\n        else throw new Error(\"Unable to update option\")\n    }\n    catch(err){\n        console.log(err)\n        alert('Update Option failed')\n        yield put({\n            type: Actions.UPDATE_OPTION_ERROR,\n            error: err.message \n        })\n    }\n}\n/**\n * \n * @param {optionId} option \n * Usually we dont user this function\n * as fetching a single item or option with id is not practical\n */\nfunction* detailOptionSaga({payload}){\n    try {\n        const req = yield call(detailOption, payload)\n        const {status, data} = req\n        if(status === 200) {\n            yield put({\n                type: Actions.DETAIL_OPTION_SUCCESS,\n                payload: data\n            })\n        }\n        throw new Error(\"Unable to fetch option\")\n    }\n    catch(err){\n        console.log(err)\n        yield put({\n            type: Actions.DETAIL_OPTION_ERROR,\n            error: err.message\n        })\n    }\n}\n\nfunction* deleteOptionSaga({payload}){\n    try {\n        const req = yield call(deleteOption, payload)\n        const {status} = req\n        if(status === 204){\n            yield put({\n                type: Actions.REMOVE_OPTION_SUCCESS\n            })\n            yield put({\n                type: Actions.LIST_OPTIONS\n            })\n        }\n        else if(status === 500){\n            throw new Error('Option is being referenced, Unable to remove')\n        }\n    }\n    catch (err){\n        console.log(err)\n        alert(err.message)\n        yield put({\n            type: Actions.LIST_OPTIONS\n        })\n        yield put({\n            type: Actions.REMOVE_OPTION_ERROR,\n            error: err.message\n        })\n    }\n}\n\nexport default function* optionSaga(){\n    yield takeEvery(Actions.ADD_OPTION, addOptionSaga)\n    yield takeEvery(Actions.LIST_OPTIONS, listOptionSaga)\n    yield takeEvery(Actions.UPDATE_OPTION, updateOptionSaga)\n    yield takeEvery(Actions.DETAIL_OPTION, detailOptionSaga)\n    yield takeEvery(Actions.REMOVE_OPTION, deleteOptionSaga)\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/saga.js",["269"],"import {takeEvery, put, call} from 'redux-saga/effects'\nimport * as Actions from './constants'\nimport {isEmpty} from 'lodash'\nimport {\n    listGroups,\n    addGroup,\n    deleteGroup,\n    updateGroup,\n    detailGroup\n} from './service'\nimport {createBrowserHistory} from 'history'\nconst history = createBrowserHistory()\nfunction* listGroupSaga(){\n    try {\n    const response = yield call(listGroups)\n    const {status, data} = response\n    if(status === 200) {\n        yield put({\n            type: Actions.LIST_GROUPS_SUCCESS,\n            payload:data \n        })\n    }\n    else throw new Error(\"Unable to fetch modifiers\")\n    }\n    catch(err){\n        console.log(err)\n        yield ({\n            type: Actions.LIST_GROUPS_ERROR,\n            error: err.message\n        })\n    }\n}\n\nfunction* addGroupSaga({payload}){\n    try{\n        const addReq = yield call(addGroup, payload)\n        if(addReq.status === 201){\n            yield put({\n                type: Actions.ADD_GROUP_SUCCESS,\n                payload: addReq.data\n            })\n        yield put({\n            type: Actions.LIST_GROUPS\n        }) \n        }\n        else throw new Error(\"Unable to add modifiers\")\n    }\n    catch (err){\n        console.log(err)\n        alert(err.message)\n        yield put({\n            type: Actions.ADD_GROUP_ERROR,\n            error: err.message\n        })\n    }\n}\n\nfunction* updateGroupSaga({payload}){\n    try{\n        const updateReq = yield call(updateGroup, payload)\n        const {status} = updateReq\n        if(status === 200) {\n            yield put({\n                type: Actions.UPDATE_GROUP_SUCCESS,\n                payload: 'success'\n            })\n        yield put({\n            type: Actions.LIST_GROUPS\n        })\n        history.go(-1)\n        }\n        else throw new Error(\"Unable to update modifier\")\n    }\n    catch(err){\n        console.log(err)\n        yield put({\n            type: Actions.LIST_GROUPS\n        })\n        yield put({\n            type: Actions.UPDATE_GROUP_SUCCESS,\n            error: err.message \n        })\n    }\n}\n/**\n * \n * @param {modifierId} modifier \n * Usually we dont user this function\n * as fetching a single item or option with id is not practical\n */\nfunction* detailGroupSaga({payload}){\n    try {\n        const req = yield call(detailGroup, payload.id)\n        const {status, data} = req\n        if(status === 200) {\n            yield put({\n                type: Actions.DETAIL_GROUP_SUCCESS,\n                payload: data\n            })\n        }\n        else throw new Error(\"Unable to fetch group\")\n    }\n    catch(err){\n        console.log(err)\n        yield put({\n            type: Actions.DETAIL_GROUP_ERROR,\n            error: err.message\n        })\n    }\n}\n\nfunction* deleteGroupSaga({payload}){\n    try {\n        const req = yield call(deleteGroup, payload)\n        const {status} = req\n        if(status === 204){\n            yield put({\n                type: Actions.DELETE_GROUP_SUCCESS\n            })\n            yield put({\n                type: Actions.LIST_GROUPS\n            })\n        }\n    }\n    catch (err){\n        console.log(err)\n        alert(err.message)\n            yield put({\n                type: Actions.LIST_GROUPS\n            })\n        yield put({\n            type: Actions.DELETE_GROUP_ERROR,\n            error: err.message\n        })\n    }\n}\n\nexport default function* optionSaga(){\n    yield takeEvery(Actions.ADD_GROUP, addGroupSaga)\n    yield takeEvery(Actions.LIST_GROUPS, listGroupSaga)\n    yield takeEvery(Actions.UPDATE_GROUP, updateGroupSaga)\n    yield takeEvery(Actions.DETAIL_GROUP, detailGroupSaga)\n    yield takeEvery(Actions.DELETE_GROUP, deleteGroupSaga)\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/utils/normalize.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/addItem.js",["270","271","272","273","274","275","276","277","278","279","280","281"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/selector.js",["282","283"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/orderTable/index.js",["284","285","286","287","288"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/index.js",["289","290","291","292","293","294","295"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/App.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/sagas.js",[],["296","297"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/selector.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/reducer.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/reducer.js",["298"],"import {fromJS, List, Map} from 'immutable';\nimport * as Actions from './constants';\nimport {isEmpty} from 'lodash'\nconst initState = fromJS({\n    loading: false,\n    error: '',\n    options: List(),\n    selected: List(),\n    optionToEdit: '',\n    sortedOptions: List(),\n    nowOption: Map(),\n    message: ''\n})\n\nexport default function optionReducer(state=initState, action) {\n    const {type, payload, error} = action\n    switch (type) {\n        case Actions.STATE_LOADING:\n            return state.set('loading', !state.get('loading'))\n        //add\n        case Actions.ADD_OPTION:\n            return state.set('loading', true).set('error', initState.get('error'))\n        case Actions.ADD_OPTION_SUCCESS:\n            return state.set('loading', false).set('error', initState.get('error')) \n        case Actions.ADD_OPTION_SUCCESS:\n            return state.set('loading', false).set('error', fromJS(error))\n        //remove\n        case Actions.REMOVE_OPTION:\n            return state.set('loading', true).set('error', initState.get('error'));\n        case Actions.REMOVE_OPTION_SUCCESS:\n            return state.set('loading', false)\n        case Actions.REMOVE_OPTION_ERROR:\n            return state.set('loading', false).set('error', fromJS(error))\n        //update\n        case Actions.UPDATE_OPTION:\n            return state.set('loading', true).set('error', initState.get('error'));\n        case Actions.UPDATE_OPTION_SUCCESS:\n            return state.set('loading', false)\n        case Actions.UPDATE_OPTION_ERROR:\n            return state.set('loading', false).set('error', fromJS(error))\n        //list\n        case Actions.LIST_OPTIONS:\n            return state.set('loading', true).set('error', initState.get('error'));\n        case Actions.LIST_OPTIONS_SUCCESS:\n             {\n\t\t     if(isEmpty(payload)) {\n\t\t\t     return state.set('loading', false).set('error', '').set('message', 'Add options to view')\n\t\t     }\n\t\t     else return state.set('loading', false).set('options', fromJS(payload)).set('message', '')\n\t     }\n        case Actions.LIST_OPTIONS_ERROR:\n            return state.set('loading', false).set('error', fromJS(error))\n        // set and remove option\n        case Actions.SET_SELECTED:\n            return state.set('selected', fromJS(payload))\n        case Actions.REMOVE_SELECTED:\n            return state.set('selected', initState.get('selected'))\n        default:\n            return state\n    } \n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/selector.js",["299"],"import {createSelector} from 'reselect'\nimport {isImmutable} from 'immutable'\nimport _ from 'lodash';\n\nconst options = state => state.options;\n\nexport const loadingSelector = createSelector(\n    options, \n    data => data.get('loading')\n)\n\nexport const errorSelector = createSelector(\n    options, \n    data => {\n        var error = data.get('error')\n        if(isImmutable(error)) {\n            return error.toJS()\n        }\n        else return error ? error : ''\n    }\n)\n\n export const optionsSelector= createSelector(\n     options,\n     data => {\n         var list = data.get('options')\n         if (isImmutable(list)) {\n             return list.toJS()\n         }\n         else return [] \n     }\n )\n\n export const selectedOptionsSelector = createSelector(\n     options, \n     data => {\n         var list = data.get('selected')\n         if(isImmutable(list)){\n             return list.toJS()\n         }\n         return []\n     }\n )\n\n export const nowOptionSelector = createSelector(\n     options,\n     data => {\n         var option = data.get('optionToEdit')\n         if(isImmutable(option)){\n             return option.toJS()\n         }\n         return {}\n     }\n )\n\n export const nowSortedArray = createSelector(\n     options, \n     data => {\n         var sorted = data.get('sortedOptions');\n         if (sorted.size > 0) {\n             return sorted.toJS();\n         }\n         else return []\n     }\n )\n\nexport const messageSelector = createSelector(\n\toptions,\n\tdata => data.get('message')\n)\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/selectors.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/addOption.js",["300","301","302","303"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classname from \"classnames\";\nimport styles from \"./Options.module.sass\";\nimport { isEmpty, merge, map, assign } from \"lodash\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport Table from \"components/table\";\nimport OrderTable from \"components/orderTable\";\nimport { normalizeText as normalize } from \"utils/normalize\";\nimport {\n  addOption,\n  updateOption,\n  removeSelected,\n} from \"modules/options/actions\";\nimport {\n  loadingSelector,\n  selectedOptionsSelector,\n} from \"modules/options/selector\";\nimport {\n  listSelector,\n  loadingSelector as modLoad,\n  errorSelector as modErr,\n  messageSelector as modifierMessageSelector,\n} from \"modules/modifiers/selectors\";\nimport { listModfiers } from \"modules/modifiers/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nconst initialValues = {\n  name: \"\",\n  description: \"\",\n  image_url: \"\",\n  price: \"\",\n  type: \"\",\n  modifiers: [],\n};\nconst validationSchema = yup.object({\n  name: yup.string().required(\"A valid option must have name\"),\n  description: yup.string().optional(),\n  price: yup.number().required(\"A valid option must have price\"),\n  type: yup.string().optional(),\n});\nconst columns = [\n  {\n    Header: \"Modifier\",\n    accessor: (d) => normalize(d.name),\n  },\n  {\n    Header: \"Options\",\n    accessor: \"options\",\n    Cell: (row) => {\n      return map(row.value, (r) => (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <div style={{ display: \"grid\", gridTemplateColumns: \"100px 100px\" }}>\n            <div style={{ padding: \"0 5px\" }}>{normalize(r.name)}</div>\n            <div>{parseFloat(r.price).toFixed(2)}</div>\n          </div>\n        </div>\n      ));\n    },\n  },\n];\nexport default function AddOption(props) {\n  const dispatch = useDispatch();\n  const modifiers = useSelector(listSelector);\n  const modifierMessage = useSelector(modifierMessageSelector);\n  const mod_loading = useSelector(modLoad);\n  const nowOption = useSelector(selectedOptionsSelector);\n  const [step1, setStep1] = React.useState(false);\n  const [selected, setSelected] = React.useState(nowOption.modifiers || []);\n  const [formValues, setForm] = React.useState();\n  const [nowArray, setNowArray] = React.useState([]);\n  const [showSelected, setShow] = React.useState(false);\n  const history = useHistory();\n  const handleSaveItem = () => {\n    if (props.setOpen) {\n      props.setOpen(false);\n    }\n    setStep1(false);\n    const option = assign({}, formValues, {\n      modifiers: nowArray.map((_) => _.original.id),\n    });\n    if (!isEmpty(nowOption)) {\n      delete nowOption.modifiers;\n      dispatch(updateOption(option));\n    } else {\n      dispatch(addOption(option));\n    }\n    setForm(\"\");\n    setSelected([]);\n    setNowArray([]);\n  };\n  React.useEffect(() => {\n    if (isEmpty(modifierMessage) && isEmpty(modifiers)) {\n      dispatch(listModfiers());\n    }\n    return () => dispatch(removeSelected());\n  }, [nowOption, dispatch]);\n  return (\n    <div className={classname(styles.container)}>\n      {!step1 && (\n        <>\n          <div style={{ dispay: \"flex\", justifyContent: \"center\" }}>\n            <p style={{ fontSize: \"1.5rem\", color: \"red\" }}>\n              {!isEmpty(nowOption) ? \"Update Option\" : \"Add Option\"}\n            </p>\n          </div>\n          <Formik\n            initialValues={\n              !isEmpty(nowOption)\n                ? !isEmpty(formValues)\n                  ? formValues\n                  : nowOption\n                : merge(initialValues, formValues)\n            }\n            validationSchema={validationSchema}\n            onSubmit={(values) => {\n              setForm(values);\n              setStep1(true);\n              setShow(true);\n            }}\n            enableReinitialize\n          >\n            {({ values, isValid }) => (\n              <Form>\n                <div>\n                  <div className={classname(styles.formControl)}>\n                    <div className={classname(styles.labelContainer)}>\n                      <label\n                        htmlFor=\"name\"\n                        className={classname(\n                          styles.formLabel,\n                          styles.labelContainer\n                        )}\n                      >\n                        Option\n                      </label>\n                    </div>\n                    <div>\n                      <Field\n                        name=\"name\"\n                        type=\"text\"\n                        className={classname(styles.formInput)}\n                        autoFocus={true}\n                      />\n                      <ErrorMessage\n                        style={{ color: \"red\" }}\n                        name={\"name\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                  </div>\n                  <div className={classname(styles.formControl)}>\n                    <div className={classname(styles.labelContainer)}>\n                      <label\n                        htmlFor=\"price\"\n                        className={classname(\n                          styles.formLabel,\n                          styles.labelContainer\n                        )}\n                      >\n                        Price\n                      </label>\n                    </div>\n                    <div>\n                      <Field\n                        name=\"price\"\n                        type=\"number\"\n                        className={classname(styles.formInput)}\n                        min={0}\n                        step={0.01}\n                      />\n                      <ErrorMessage\n                        name={\"price\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                        style={{ color: \"red\" }}\n                      />\n                    </div>\n                  </div>\n                  <div className={classname(styles.formControl)}>\n                    <div className={classname(styles.labelContainer)}>\n                      <label\n                        htmlFor=\"type\"\n                        className={classname(\n                          styles.formLabel,\n                          styles.labelContainer\n                        )}\n                      >\n                        Type\n                      </label>\n                    </div>\n                    <div>\n                      <Field\n                        name=\"type\"\n                        type=\"text\"\n                        className={classname(styles.formInput)}\n                      />\n                    </div>\n                    <ErrorMessage\n                      name={\"type\"}\n                      component=\"div\"\n                      className=\"field-error\"\n                    />\n                  </div>\n                  <div\n                    className={classname(styles.imageField, styles.formControl)}\n                  >\n                    <div className={classname(styles.labelContainer)}>\n                      <label\n                        htmlFor=\"image_url\"\n                        className={classname(\n                          styles.formLabel,\n                          styles.labelContainer\n                        )}\n                      >\n                        Image\n                      </label>\n                    </div>\n                    <div>\n                      <input\n                        type=\"file\"\n                        name=\"image_url\"\n                        max={1}\n                        className={classname(styles.formInput)}\n                      />\n                    </div>\n                  </div>\n                  <div className={classname(styles.titleWithNoBox)}>\n                    <h4>Description</h4>\n                  </div>\n                  <div className={classname(styles.descriptionBox)}>\n                    <div>\n                      <Field\n                        as=\"textarea\"\n                        name=\"description\"\n                        type=\"text\"\n                        className={classname(styles.descriptionContainer)}\n                      />\n                    </div>\n                    <ErrorMessage\n                      name={\"description\"}\n                      component=\"div\"\n                      className=\"field-error\"\n                    />\n                  </div>\n                  <div className=\"flex-around\">\n                    <div className={classname(styles.saveButtonContainer)}>\n                      <button\n                        type=\"button\"\n                        disabled={!isValid}\n                        className={classname(styles.ctaButton)}\n                      >\n                        {!isEmpty(selected)\n                          ? \"Edit Modifiers\"\n                          : \"Select Modifers\"}\n                      </button>\n                    </div>\n                    <div className={classname(styles.saveButtonContainer)}>\n                      <button className={classname(styles.ctaButton, \"addButton\")} type=\"submit\">\n                        {!isEmpty(nowOption) ? \"Save Option\" : \"Add Option\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </>\n      )}\n      {step1 && (\n        <div className={classname(styles.tableContainer)}>\n          <div className={classname(styles.tableFlex)}>\n            <Table\n              title={\"Modifiers\"}\n              columns={columns}\n              data={modifiers}\n              updateSelectItems={setSelected}\n              withCheckBox={true}\n              noAction={true}\n              preSelected={selected}\n            />\n          </div>\n          <div>\n            <div className={classname(styles.margin5)}>\n              <button\n                className={classname(styles.button200)}\n                onClick={() => history.push(\"/addModifier\")}\n              >\n                Add Modifier\n              </button>\n            </div>\n          </div>\n          <div className={classname(styles.between)}>\n            <div>\n              <button\n                onClick={() => setStep1(false)}\n                className={classname(styles.ctaButton)}\n              >\n                Back\n              </button>\n            </div>\n            <div>\n              <button\n                disabled={!selected.length}\n                className={classname(styles.ctaButton)}\n                onClick={() => (selected.length ? setStep1(false) : null)}\n              >\n                Save\n              </button>\n              <div style={{ fontSize: \"10px\" }}>\n                {!selected.length && (\n                  <p>\n                    <span style={{ color: \"red\" }}>*</span> Select alteast 1\n                    modifier\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {selected.length && !step1 && showSelected ? (\n        <div style={{ flex: 1 }}>\n          <div>\n            <OrderTable\n              columns={columns}\n              data={selected}\n              updateCurrentRows={setNowArray}\n            />\n          </div>\n          <div\n            style={{\n              margin: \"10px auto\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <button\n              className={styles.ctaButton}\n              onClick={() => {\n                handleSaveItem();\n              }}\n            >\n              {!isEmpty(nowOption) ? \"Update Option\" : \"Add Option\"}\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Pizza/index.js",["304","305"],"import React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport styles from './Pizza.module.sass'\nimport classname from 'classnames';\nimport routes from 'routes';\nimport Group from 'views/Groups'\nexport default function Pizza(props){\n    const {component} = props;\n    const getRoutes = (routes) => {\n        return routes.map((prop, key) => {\n          if (prop.children) {\n            return getRoutes(prop.children);\n          }\n          if (prop.layout === \"/pizza\") {\n              let _routes = <Route\n                path={prop.path}\n                component={prop.component}\n                key={key}\n              />\n              return _routes\n          } else {\n            return null;\n          }\n        });\n      };\n    return (\n        <div className={classname(styles.pizza)}>\n          {/* <div className={classname(styles.topBar)}>\n\n          </div> */}\n           <Switch>\n               {getRoutes(routes())}\n               <Route path=\"/groups\" component={Group}/>\n           </Switch> \n        </div>\n    )\n}",["306","307"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/reducer.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/actions.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/Layouts/index.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/createStore.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/api.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/actions.js",[],{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","severity":1,"message":"313","line":74,"column":9,"nodeType":"314","messageId":"315","endLine":74,"endColumn":16},{"ruleId":"312","severity":1,"message":"316","line":75,"column":9,"nodeType":"314","messageId":"315","endLine":75,"endColumn":14},{"ruleId":"312","severity":1,"message":"317","line":76,"column":9,"nodeType":"314","messageId":"315","endLine":76,"endColumn":24},{"ruleId":"312","severity":1,"message":"318","line":77,"column":9,"nodeType":"314","messageId":"315","endLine":77,"endColumn":21},{"ruleId":"312","severity":1,"message":"319","line":78,"column":9,"nodeType":"314","messageId":"315","endLine":78,"endColumn":24},{"ruleId":"320","severity":1,"message":"321","line":87,"column":6,"nodeType":"322","endLine":87,"endColumn":24,"suggestions":"323"},{"ruleId":"320","severity":1,"message":"324","line":92,"column":6,"nodeType":"322","endLine":92,"endColumn":24,"suggestions":"325"},{"ruleId":"308","replacedBy":"326"},{"ruleId":"310","replacedBy":"327"},{"ruleId":"312","severity":1,"message":"328","line":5,"column":8,"nodeType":"314","messageId":"315","endLine":5,"endColumn":13},{"ruleId":"312","severity":1,"message":"329","line":21,"column":3,"nodeType":"314","messageId":"315","endLine":21,"endColumn":16},{"ruleId":"312","severity":1,"message":"330","line":24,"column":10,"nodeType":"314","messageId":"315","endLine":24,"endColumn":19},{"ruleId":"312","severity":1,"message":"331","line":25,"column":26,"nodeType":"314","messageId":"315","endLine":25,"endColumn":40},{"ruleId":"312","severity":1,"message":"332","line":26,"column":10,"nodeType":"314","messageId":"315","endLine":26,"endColumn":21},{"ruleId":"312","severity":1,"message":"333","line":27,"column":10,"nodeType":"314","messageId":"315","endLine":27,"endColumn":25},{"ruleId":"312","severity":1,"message":"313","line":45,"column":9,"nodeType":"314","messageId":"315","endLine":45,"endColumn":16},{"ruleId":"312","severity":1,"message":"334","line":47,"column":10,"nodeType":"314","messageId":"315","endLine":47,"endColumn":18},{"ruleId":"312","severity":1,"message":"335","line":49,"column":10,"nodeType":"314","messageId":"315","endLine":49,"endColumn":17},{"ruleId":"320","severity":1,"message":"336","line":55,"column":6,"nodeType":"322","endLine":55,"endColumn":23,"suggestions":"337"},{"ruleId":"312","severity":1,"message":"316","line":64,"column":9,"nodeType":"314","messageId":"315","endLine":64,"endColumn":14},{"ruleId":"312","severity":1,"message":"338","line":65,"column":9,"nodeType":"314","messageId":"315","endLine":65,"endColumn":22},{"ruleId":"312","severity":1,"message":"318","line":66,"column":9,"nodeType":"314","messageId":"315","endLine":66,"endColumn":21},{"ruleId":"312","severity":1,"message":"339","line":75,"column":9,"nodeType":"314","messageId":"315","endLine":75,"endColumn":21},{"ruleId":"320","severity":1,"message":"340","line":106,"column":6,"nodeType":"322","endLine":106,"endColumn":16,"suggestions":"341"},{"ruleId":"342","severity":1,"message":"343","line":137,"column":17,"nodeType":"344","endLine":137,"endColumn":35},{"ruleId":"308","replacedBy":"345"},{"ruleId":"310","replacedBy":"346"},{"ruleId":"347","severity":1,"message":"348","line":62,"column":9,"nodeType":"349","messageId":"350","endLine":63,"endColumn":58},{"ruleId":"347","severity":1,"message":"348","line":64,"column":9,"nodeType":"349","messageId":"350","endLine":65,"endColumn":68},{"ruleId":"320","severity":1,"message":"321","line":30,"column":5,"nodeType":"322","endLine":30,"endColumn":26,"suggestions":"351"},{"ruleId":"312","severity":1,"message":"334","line":31,"column":10,"nodeType":"314","messageId":"315","endLine":31,"endColumn":18},{"ruleId":"312","severity":1,"message":"316","line":32,"column":11,"nodeType":"314","messageId":"315","endLine":32,"endColumn":16},{"ruleId":"312","severity":1,"message":"352","line":33,"column":12,"nodeType":"314","messageId":"315","endLine":33,"endColumn":16},{"ruleId":"312","severity":1,"message":"353","line":22,"column":7,"nodeType":"314","messageId":"315","endLine":22,"endColumn":12},{"ruleId":"312","severity":1,"message":"354","line":34,"column":7,"nodeType":"314","messageId":"315","endLine":34,"endColumn":16},{"ruleId":"312","severity":1,"message":"355","line":66,"column":9,"nodeType":"314","messageId":"315","endLine":66,"endColumn":14},{"ruleId":"320","severity":1,"message":"356","line":132,"column":6,"nodeType":"322","endLine":132,"endColumn":16,"suggestions":"357"},{"ruleId":"320","severity":1,"message":"358","line":133,"column":21,"nodeType":"359","endLine":133,"endColumn":34},{"ruleId":"312","severity":1,"message":"360","line":176,"column":5,"nodeType":"314","messageId":"315","endLine":176,"endColumn":19},{"ruleId":"320","severity":1,"message":"361","line":224,"column":6,"nodeType":"322","endLine":224,"endColumn":41,"suggestions":"362"},{"ruleId":"363","severity":1,"message":"364","line":18,"column":25,"nodeType":"365","endLine":18,"endColumn":102},{"ruleId":"308","replacedBy":"366"},{"ruleId":"310","replacedBy":"367"},{"ruleId":"312","severity":1,"message":"368","line":7,"column":9,"nodeType":"314","messageId":"315","endLine":7,"endColumn":22},{"ruleId":"312","severity":1,"message":"369","line":7,"column":24,"nodeType":"314","messageId":"315","endLine":7,"endColumn":33},{"ruleId":"312","severity":1,"message":"370","line":7,"column":35,"nodeType":"314","messageId":"315","endLine":7,"endColumn":47},{"ruleId":"312","severity":1,"message":"371","line":7,"column":49,"nodeType":"314","messageId":"315","endLine":7,"endColumn":57},{"ruleId":"320","severity":1,"message":"372","line":20,"column":5,"nodeType":"322","endLine":20,"endColumn":18,"suggestions":"373"},{"ruleId":"308","replacedBy":"374"},{"ruleId":"310","replacedBy":"375"},{"ruleId":"376","severity":1,"message":"377","line":10,"column":1,"nodeType":"378","endLine":73,"endColumn":2},{"ruleId":"308","replacedBy":"379"},{"ruleId":"310","replacedBy":"380"},{"ruleId":"312","severity":1,"message":"381","line":5,"column":7,"nodeType":"314","messageId":"315","endLine":5,"endColumn":14},{"ruleId":"312","severity":1,"message":"382","line":3,"column":9,"nodeType":"314","messageId":"315","endLine":3,"endColumn":16},{"ruleId":"312","severity":1,"message":"383","line":5,"column":45,"nodeType":"314","messageId":"315","endLine":5,"endColumn":57},{"ruleId":"312","severity":1,"message":"330","line":12,"column":10,"nodeType":"314","messageId":"315","endLine":12,"endColumn":19},{"ruleId":"312","severity":1,"message":"332","line":13,"column":10,"nodeType":"314","messageId":"315","endLine":13,"endColumn":21},{"ruleId":"312","severity":1,"message":"381","line":88,"column":9,"nodeType":"314","messageId":"315","endLine":88,"endColumn":16},{"ruleId":"312","severity":1,"message":"384","line":89,"column":9,"nodeType":"314","messageId":"315","endLine":89,"endColumn":15},{"ruleId":"312","severity":1,"message":"385","line":90,"column":9,"nodeType":"314","messageId":"315","endLine":90,"endColumn":16},{"ruleId":"312","severity":1,"message":"313","line":93,"column":9,"nodeType":"314","messageId":"315","endLine":93,"endColumn":16},{"ruleId":"312","severity":1,"message":"386","line":94,"column":9,"nodeType":"314","messageId":"315","endLine":94,"endColumn":21},{"ruleId":"312","severity":1,"message":"387","line":95,"column":9,"nodeType":"314","messageId":"315","endLine":95,"endColumn":22},{"ruleId":"312","severity":1,"message":"388","line":96,"column":9,"nodeType":"314","messageId":"315","endLine":96,"endColumn":18},{"ruleId":"312","severity":1,"message":"389","line":102,"column":10,"nodeType":"314","messageId":"315","endLine":102,"endColumn":21},{"ruleId":"312","severity":1,"message":"390","line":102,"column":23,"nodeType":"314","messageId":"315","endLine":102,"endColumn":37},{"ruleId":"312","severity":1,"message":"391","line":3,"column":8,"nodeType":"314","messageId":"315","endLine":3,"endColumn":9},{"ruleId":"312","severity":1,"message":"392","line":3,"column":13,"nodeType":"314","messageId":"315","endLine":3,"endColumn":19},{"ruleId":"312","severity":1,"message":"393","line":12,"column":9,"nodeType":"314","messageId":"315","endLine":12,"endColumn":22},{"ruleId":"312","severity":1,"message":"394","line":13,"column":9,"nodeType":"314","messageId":"315","endLine":13,"endColumn":23},{"ruleId":"312","severity":1,"message":"395","line":14,"column":9,"nodeType":"314","messageId":"315","endLine":14,"endColumn":20},{"ruleId":"312","severity":1,"message":"396","line":14,"column":22,"nodeType":"314","messageId":"315","endLine":14,"endColumn":33},{"ruleId":"320","severity":1,"message":"397","line":32,"column":52,"nodeType":"322","endLine":32,"endColumn":58,"suggestions":"398"},{"ruleId":"312","severity":1,"message":"399","line":13,"column":75,"nodeType":"314","messageId":"315","endLine":13,"endColumn":92},{"ruleId":"312","severity":1,"message":"313","line":17,"column":9,"nodeType":"314","messageId":"315","endLine":17,"endColumn":16},{"ruleId":"312","severity":1,"message":"318","line":18,"column":9,"nodeType":"314","messageId":"315","endLine":18,"endColumn":21},{"ruleId":"320","severity":1,"message":"321","line":24,"column":7,"nodeType":"322","endLine":24,"endColumn":26,"suggestions":"400"},{"ruleId":"312","severity":1,"message":"334","line":25,"column":10,"nodeType":"314","messageId":"315","endLine":25,"endColumn":18},{"ruleId":"312","severity":1,"message":"401","line":27,"column":10,"nodeType":"314","messageId":"315","endLine":27,"endColumn":14},{"ruleId":"312","severity":1,"message":"402","line":27,"column":16,"nodeType":"314","messageId":"315","endLine":27,"endColumn":23},{"ruleId":"308","replacedBy":"403"},{"ruleId":"310","replacedBy":"404"},{"ruleId":"347","severity":1,"message":"348","line":25,"column":9,"nodeType":"349","messageId":"350","endLine":26,"endColumn":75},{"ruleId":"312","severity":1,"message":"391","line":3,"column":8,"nodeType":"314","messageId":"315","endLine":3,"endColumn":9},{"ruleId":"312","severity":1,"message":"405","line":17,"column":3,"nodeType":"314","messageId":"315","endLine":17,"endColumn":18},{"ruleId":"312","severity":1,"message":"406","line":23,"column":20,"nodeType":"314","messageId":"315","endLine":23,"endColumn":26},{"ruleId":"312","severity":1,"message":"407","line":66,"column":9,"nodeType":"314","messageId":"315","endLine":66,"endColumn":20},{"ruleId":"320","severity":1,"message":"408","line":97,"column":6,"nodeType":"322","endLine":97,"endColumn":27,"suggestions":"409"},{"ruleId":"312","severity":1,"message":"410","line":2,"column":25,"nodeType":"314","messageId":"315","endLine":2,"endColumn":33},{"ruleId":"312","severity":1,"message":"411","line":8,"column":12,"nodeType":"314","messageId":"315","endLine":8,"endColumn":21},{"ruleId":"308","replacedBy":"412"},{"ruleId":"310","replacedBy":"413"},"no-native-reassign",["414"],"no-negated-in-lhs",["415"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'options_loading' is assigned a value but never used.","'option_error' is assigned a value but never used.","'options_message' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.","ArrayExpression",["416"],"React Hook React.useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["417"],["414"],["415"],"'items' is defined but never used.","'errorSelector' is defined but never used.","'listGroup' is defined but never used.","'groupsSelector' is defined but never used.","'listOptions' is defined but never used.","'optionsSelector' is defined but never used.","'selected' is assigned a value but never used.","'newItem' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'itemInfo'. Either include it or remove the dependency array.",["418"],"'option_loding' is assigned a value but never used.","'customStyles' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["419"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["414"],["415"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected",["420"],"'form' is assigned a value but never used.","'style' is assigned a value but never used.","'newStyles' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook React.useMemo has a missing dependency: 'columns'. Either include it or remove the dependency array.",["421"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'visibleColumns' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'selectedFlatRows'. Either include it or remove the dependency array.",["422"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["414"],["415"],"'FaObjectGroup' is defined but never used.","'FaSitemap' is defined but never used.","'FaPizzaSlice' is defined but never used.","'FaDiceD6' is defined but never used.","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["423"],["414"],["415"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["414"],["415"],"'history' is assigned a value but never used.","'isEmpty' is defined but never used.","'isEmptyArray' is defined but never used.","'groups' is assigned a value but never used.","'options' is assigned a value but never used.","'groupLoading' is assigned a value but never used.","'optionLoading' is assigned a value but never used.","'groupInfo' is assigned a value but never used.","'optionArray' is assigned a value but never used.","'setOptionArray' is assigned a value but never used.","'_' is defined but never used.","'create' is defined but never used.","'sortedOptions' is defined but never used.","'nowSortedArray' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","React Hook React.useEffect has a missing dependency: 'updateCurrentRows'. Either include it or remove the dependency array. If 'updateCurrentRows' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["424"],"'nowOptionSelector' is defined but never used.",["425"],"'list' is assigned a value but never used.","'setList' is assigned a value but never used.",["414"],["415"],"'loadingSelector' is defined but never used.","'modErr' is defined but never used.","'mod_loading' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'modifierMessage' and 'modifiers'. Either include them or remove the dependency array.",["426"],"'Redirect' is defined but never used.","'component' is assigned a value but never used.",["414"],["415"],"no-global-assign","no-unsafe-negation",{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},"Update the dependencies array to be: [dispatch, groups, message]",{"range":"449","text":"450"},"Update the dependencies array to be: [dispatch, groups, options]",{"range":"451","text":"452"},"Update the dependencies array to be: [dispatch, itemInfo, items]",{"range":"453","text":"454"},"Update the dependencies array to be: [dispatch, nowGroup]",{"range":"455","text":"456"},"Update the dependencies array to be: [dispatch, message, modifiers]",{"range":"457","text":"458"},"Update the dependencies array to be: [columns, noAction]",{"range":"459","text":"460"},"Update the dependencies array to be: [updateSelectItems, selectedRowIds, selectedFlatRows]",{"range":"461","text":"462"},"Update the dependencies array to be: [activeRoute, history]",{"range":"463","text":"464"},"Update the dependencies array to be: [rows, updateCurrentRows]",{"range":"465","text":"466"},"Update the dependencies array to be: [dispatch, message, options]",{"range":"467","text":"468"},"Update the dependencies array to be: [nowOption, dispatch, modifierMessage, modifiers]",{"range":"469","text":"470"},[2513,2531],"[dispatch, groups, message]",[2651,2669],"[dispatch, groups, options]",[1717,1734],"[dispatch, itemInfo, items]",[3016,3026],"[dispatch, nowGroup]",[1086,1107],"[dispatch, message, modifiers]",[3282,3292],"[columns, noAction]",[5552,5587],"[updateSelectItems, selectedRowIds, selectedFlatRows]",[702,715],"[activeRoute, history]",[1075,1081],"[rows, updateCurrentRows]",[1069,1088],"[dispatch, message, options]",[3022,3043],"[nowOption, dispatch, modifierMessage, modifiers]"]