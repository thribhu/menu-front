[{"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/index.js":"1","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/saga.js":"2","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/index.js":"3","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/service.js":"4","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/index.js":"5","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/addGroup.js":"6","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/constants.js":"7","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/utils.js":"8","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/actions.js":"9","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/reducer.js":"10","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/index.js":"11","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/actions.js":"12","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/constants.js":"13","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/saga.js":"14","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/addModifier.js":"15","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/table/index.js":"16","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/index.js":"17","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/sidebarRoutes.js":"18","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/routes.js":"19","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reportWebVitals.js":"20","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reducers.js":"21","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/saga.js":"22","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/saga.js":"23","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/service.js":"24","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/constants.js":"25","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/utils/normalize.js":"26","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/addItem.js":"27","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/selector.js":"28","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/orderTable/index.js":"29","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/index.js":"30","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/App.js":"31","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/sagas.js":"32","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/service.js":"33","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/selector.js":"34","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/reducer.js":"35","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/reducer.js":"36","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/selector.js":"37","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/selectors.js":"38","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/addOption.js":"39","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Pizza/index.js":"40","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/reducer.js":"41","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/actions.js":"42","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/Layouts/index.js":"43","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/createStore.js":"44","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/constants.js":"45","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/api.js":"46","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/service.js":"47"},{"size":501,"mtime":1617371187943,"results":"48","hashOfConfig":"49"},{"size":3630,"mtime":1617936716359,"results":"50","hashOfConfig":"49"},{"size":6139,"mtime":1618501504787,"results":"51","hashOfConfig":"49"},{"size":897,"mtime":1617371188023,"results":"52","hashOfConfig":"49"},{"size":4623,"mtime":1618502740081,"results":"53","hashOfConfig":"49"},{"size":13314,"mtime":1617371188067,"results":"54","hashOfConfig":"49"},{"size":1463,"mtime":1617371188011,"results":"55","hashOfConfig":"56"},{"size":335,"mtime":1617371188103,"results":"57","hashOfConfig":"49"},{"size":817,"mtime":1617371187963,"results":"58","hashOfConfig":"49"},{"size":2769,"mtime":1617494937575,"results":"59","hashOfConfig":"49"},{"size":5342,"mtime":1618502142490,"results":"60","hashOfConfig":"49"},{"size":878,"mtime":1617371208896,"results":"61","hashOfConfig":"49"},{"size":1194,"mtime":1617371226520,"results":"62","hashOfConfig":"56"},{"size":3903,"mtime":1617936706471,"results":"63","hashOfConfig":"49"},{"size":10135,"mtime":1617372063099,"results":"64","hashOfConfig":"49"},{"size":8098,"mtime":1618501172516,"results":"65","hashOfConfig":"49"},{"size":1184,"mtime":1617373145952,"results":"66","hashOfConfig":"56"},{"size":1636,"mtime":1617819223786,"results":"67","hashOfConfig":"56"},{"size":1968,"mtime":1617819217226,"results":"68","hashOfConfig":"49"},{"size":362,"mtime":1613558109347,"results":"69","hashOfConfig":"49"},{"size":422,"mtime":1616526875451,"results":"70","hashOfConfig":"49"},{"size":3637,"mtime":1617937070247,"results":"71","hashOfConfig":"49"},{"size":3554,"mtime":1618407671210,"results":"72","hashOfConfig":"49"},{"size":821,"mtime":1616526875447,"results":"73","hashOfConfig":"49"},{"size":1562,"mtime":1616526875447,"results":"74","hashOfConfig":"49"},{"size":136,"mtime":1613558109347,"results":"75","hashOfConfig":"56"},{"size":14928,"mtime":1617819533798,"results":"76","hashOfConfig":"49"},{"size":1012,"mtime":1617371188007,"results":"77","hashOfConfig":"49"},{"size":4596,"mtime":1613727067867,"results":"78","hashOfConfig":"49"},{"size":4008,"mtime":1618502796429,"results":"79","hashOfConfig":"49"},{"size":976,"mtime":1617371187931,"results":"80","hashOfConfig":"49"},{"size":334,"mtime":1616526875451,"results":"81","hashOfConfig":"49"},{"size":846,"mtime":1616526875451,"results":"82","hashOfConfig":"49"},{"size":1254,"mtime":1617371188011,"results":"83","hashOfConfig":"49"},{"size":2775,"mtime":1617520224082,"results":"84","hashOfConfig":"56"},{"size":2434,"mtime":1617531714733,"results":"85","hashOfConfig":"49"},{"size":1497,"mtime":1617490945074,"results":"86","hashOfConfig":"56"},{"size":1011,"mtime":1617494684933,"results":"87","hashOfConfig":"49"},{"size":11849,"mtime":1618513652139,"results":"88","hashOfConfig":"49"},{"size":1064,"mtime":1613558109343,"results":"89","hashOfConfig":"56"},{"size":2444,"mtime":1617818195640,"results":"90","hashOfConfig":"56"},{"size":812,"mtime":1616526875447,"results":"91","hashOfConfig":"49"},{"size":367,"mtime":1615192430968,"results":"92","hashOfConfig":"56"},{"size":1135,"mtime":1616526875447,"results":"93","hashOfConfig":"56"},{"size":1306,"mtime":1616526875447,"results":"94","hashOfConfig":"56"},{"size":72,"mtime":1616526875415,"results":"95","hashOfConfig":"56"},{"size":930,"mtime":1617371188011,"results":"96","hashOfConfig":"49"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ds2j73",{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"104"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},"sy1zlp",{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"140"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"118"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"118"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"140"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"115"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/index.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/saga.js",["208"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/index.js",["209","210","211","212","213","214","215"],"import React from \"react\";\nimport classname from \"classnames\";\nimport styles from \"./Groups.module.sass\";\nimport Modal from \"react-modal\";\nimport Table from \"components/table\";\nimport AddGroup from \"views/Groups/addGroup\";\nimport  { isEmpty, map, assign } from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport { FaTrash, FaEdit, FaWindowClose } from \"react-icons/fa\";\nimport { normalizeText } from \"utils/normalize\";\nimport {listGroup, removeGroup, selectGroup} from 'modules/groups/actions'\nimport { loadingSelector, errorSelector, listSelector, messageSelector } from 'modules/groups/selector'\nimport {listOptions} from 'modules/options/actions'\nimport {loadingSelector as optionLoading, optionsSelector, errorSelector as optionError, messageSelector as optionsInfo} from 'modules/options/selector'\nimport {useDispatch, useSelector} from 'react-redux'\nconst groupColumns = [\n  {\n    Header: \"Group\",\n    accessor: d => normalizeText(d.name) || \"-\",\n    width: 50,\n  },\n  {\n    Header: \"Display Order\",\n    accessor: d => d.order || \"-\",\n  },\n  {\n    Header: \"Price\",\n    accessor: d => d.price || 0,\n  },\n  {\n    Header: \"Max Allowed\",\n    accessor: d => d.max_allowed || 0,\n  },\n  {\n    Header: \"Min Required\",\n    accessor: d => d.min_required || 0,\n  },\n  {\n    Header: \"Options\",\n    accessor: d => {\n      let names = map(d.options, _ => normalizeText(_.name))\n      return names.join(\", \") || \"-\"\n    }\n  },\n  {\n    Header: \"Actions\",\n    accessor: \"actions\",\n  },\n];\nconst columns = [\n  {\n    Header: \"Image\",\n    accessor: \"image\",\n  },\n  {\n    Header: \"Name\",\n    accessor: \"name\",\n  },\n  {\n    Header: \"Price\",\n    accessor: \"price\",\n  },\n  {\n    Header: \"Type\",\n    accessor: \"type\",\n  },\n];\nexport default function GroupsTable() {\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const groups = useSelector(listSelector)\n  const message = useSelector(messageSelector)\n  const options = useSelector(optionsSelector)\n  const loading = useSelector(loadingSelector)\n  const error = useSelector(errorSelector)\n  const options_loading = useSelector(optionLoading)\n  const option_error = useSelector(optionError)\n  const options_message = useSelector(optionsInfo)\n  const [selected, setSelected] = React.useState([]);\n  const [form, setForm] = React.useState();\n  const [open, setOpen] = React.useState(false);\n  const [step1, setSetp1] = React.useState(false);\n  React.useEffect(() => {\n    if(isEmpty(message) && isEmpty(groups)) {\n      dispatch(listGroup())\n    }\n  }, [dispatch, groups])\n  React.useEffect(() => {\n    if(isEmpty(optionsInfo) && isEmpty(options)) {\n      dispatch(listOptions())\n    }\n  }, [dispatch, groups])\n  const customStyles = {\n    content: {\n      margin: \"auto\",\n      height: \"80%\",\n      width: \"100%\",\n      maxWidth: \"600px\",\n      overflow: \"auto\",\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      bottom: \"auto\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n  const handleEdit = group => {\n    delete group.actions\n    dispatch(selectGroup(group))\n    history.push(\"/addGroup\")\n  }\n  const handleRemove = group => {\n    const confirm = window.confirm(`You are about to remove ${group.name}. This is not reversable`)\n    if(confirm) {\n      dispatch(removeGroup(group.id))\n    }\n  }\n  map(groups, (option, i) =>\n    assign(option, {\n      actions: (\n        <div style={{ display: \"flex\" }} key={i}>\n          <div style={{ padding: \"0 5px\" }}>\n            <button onClick={() => handleEdit(option)} className=\"transparentButton\">\n              <FaEdit />\n            </button>\n          </div>\n          <div>\n            <button onClick={() => handleRemove(option)} className=\"transparentButton\">\n              <FaTrash />\n            </button>\n          </div>\n        </div>\n      ),\n    })\n  );\n  return (\n    <div className={classname(styles.tableContainer)}>\n      <Modal\n        isOpen={open}\n        onRequestClose={() => {\n          setOpen(false);\n          setSetp1(false);\n        }}\n        style={customStyles}\n      >\n        <div>\n\n                    <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                        <button onClick={() => setOpen(false)} style={{ cursor: 'pointer' }} className={classname(styles.transparent)}>\n                            <FaWindowClose />\n                        </button>\n                    </div>\n        {step1 && (\n          <div>\n            <button onClick={() => setSetp1(false)}>Back</button>\n          </div>\n        )}\n        {!step1 ? (\n          <AddGroup\n            next={setSetp1}\n            formMethod={setForm}\n            currentForm={form}\n            setOpen={setOpen}\n          />\n        ) : (\n          <div>\n            <Table\n              updateSelectItems={setSelected}\n              columns={columns}\n              data={options}\n            />\n            <div className={classname(styles.buttonGroup)}>\n              <div>\n                <button className={classname(styles.ctaButton)}>\n                  New Option\n                </button>\n              </div>\n              <div>\n                <button\n                  className={classname(styles.ctaButton)}\n                  style={{ width: \"150px\" }}\n                  onClick={() =>\n                    history.push(\"/addGroup\", { currentForm: form, selected })\n                  }\n                >\n                  Add options to group\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n        </div>\n      </Modal>\n      <div>\n        <Table\n          updateSelectItems={setSelected}\n          columns={groupColumns}\n          data={groups}\n        />\n        {\n          !isEmpty(message) && \n          <div className=\"UcenterWithMargin IamInfo\">\n           * Add Groups to view in this table \n          </div>\n        }\n      </div>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", margin: \"20px\" }}\n      >\n        <button\n          onClick={() => setOpen(true)}\n          className={classname(styles.ctaButton)}\n        >\n          Add Group\n        </button>\n      </div>\n    </div>\n  );\n}\n",["216","217"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/index.js",["218","219","220","221","222","223","224","225","226","227"],"import React from \"react\";\nimport classname from \"classnames\";\nimport styles from \"./Items.module.sass\";\nimport { useHistory } from \"react-router-dom\";\nimport items from \"./items.json\";\nimport Table from \"components/table\";\nimport { normalizeText } from \"utils/normalize\";\nimport { FaEdit, FaTrash, FaWindowClose } from \"react-icons/fa\";\nimport _, { isEmpty } from \"lodash\";\nimport Modal from \"react-modal\";\nimport AddItem from \"./addItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  listItems,\n  removeItem,\n  setSelected as selectItem,\n} from \"modules/items/actions\";\nimport {\n  listSelector,\n  loadingSelector,\n  errorSelector,\n  itemInfoSelector,\n} from \"modules/items/selector\";\nimport { listGroup } from \"modules/groups/actions\";\nimport { listSelector as groupsSelector } from \"modules/groups/selector\";\nimport { listOptions } from \"modules/options/actions\";\nimport { optionsSelector } from \"modules/options/selector\";\nconst customStyles = {\n  content: {\n    margin: \"auto\",\n    height: \"80%\",\n    width: \"100%\",\n    maxWidth: \"600px\",\n    overflow: \"auto\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    bottom: \"auto\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nexport default function Items() {\n  const dispatch = useDispatch();\n  const items = useSelector(listSelector);\n  const loading = useSelector(loadingSelector);\n  const itemInfo = useSelector(itemInfoSelector);\n  const [selected, setSelected] = React.useState();\n  const [open, setOpen] = React.useState(false);\n  const [newItem, setItem] = React.useState();\n  const history = useHistory();\n  React.useEffect(() => {\n    if (isEmpty(itemInfo) && isEmpty(items)) {\n      dispatch(listItems());\n    }\n  }, [dispatch, items]);\n  const handleEdit = (item) => {\n    delete item.actions;\n    dispatch(selectItem(item));\n    history.push(\"/addItem\");\n  };\n  const handleDelete = (item) => {\n    const confirm = window.confirm(\n      \"You are about to remove an item. This is permanant\"\n    );\n    if (!!confirm) {\n      dispatch(removeItem(item.id));\n    }\n  };\n  const columns = [\n    {\n      Header: \"Name\",\n      accessor: (d) => normalizeText(d.name),\n    },\n    {\n      Header: \"Type\",\n      accessor: (d) => normalizeText(d.type) || \"-\",\n    },\n    {\n      Header: \"Price\",\n      accessor: (d) => d.price || \"-\",\n    },\n    {\n      Header: \"Active\",\n      accessor: (d) => (d.active === 1 ? \"True\" : \"False\"),\n    },\n    {\n      Header: \"Stock\",\n      accessor: (d) => d.stock || \"-\",\n    },\n    {\n      Header: \"Options\",\n      accessor: (d) => {\n        let names = _.map(d.options, (_) => normalizeText(_.name));\n        return names.join(\", \") || \"-\";\n      },\n    },\n    {\n      Header: \"Groups\",\n      accessor: (d) => {\n        let names = _.map(d.option_groups, (_) => normalizeText(_.name));\n        return names.join(\", \") || \"-\";\n      },\n    },\n    {\n      Header: \"Actions\",\n      accessor: \"actions\",\n    },\n  ];\n  _.map(items, (item) =>\n    _.assign(item, {\n      actions: (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <div style={{ padding: \"0 5px\" }}>\n            <button\n              className=\"transparentButton\"\n              onClick={() => handleEdit(item)}\n            >\n              <FaEdit />\n            </button>\n          </div>\n          <div>\n            <button\n              className=\"transparentButton\"\n              onClick={() => handleDelete(item)}\n            >\n              <FaTrash />\n            </button>\n          </div>\n        </div>\n      ),\n    })\n  );\n  return (\n    <div className={classname(styles.tableContainer)}>\n      <Modal isOpen={open} style={customStyles}>\n        <div>\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <button\n              onClick={() => setOpen(false)}\n              style={{ cursor: \"pointer\" }}\n              className=\"transparentButton\"\n            >\n              <FaWindowClose />\n            </button>\n          </div>\n          <AddItem setOpen={setOpen} setItem={setItem} />\n        </div>\n      </Modal>\n      <div>\n        <Table columns={columns} data={items} updateSelectItems={setSelected} />\n        {!isEmpty(itemInfo) && (\n          <div className=\"UcenterWithMargin IamInfo\">\n            * Add Items to view in this table\n          </div>\n        )}\n      </div>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", margin: \"20px\" }}\n      >\n        <button\n          onClick={() => setOpen(true)}\n          className={classname(styles.ctaButton)}\n        >\n          Add Item\n        </button>\n      </div>\n    </div>\n  );\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/addGroup.js",["228","229","230","231","232","233"],"import React from \"react\";\nimport classname from \"classnames\";\nimport styles from \"./Groups.module.sass\";\nimport _, { isEmpty } from \"lodash\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport { normalizeText as normalize } from \"utils/normalize\";\nimport OrderTable from \"components/orderTable\";\nimport Table from \"components/table\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addGroup, updateGroup, removeSelected } from \"modules/groups/actions\";\nimport {\n  loadingSelector,\n  errorSelector,\n  selectedSelector,\n} from \"modules/groups/selector\";\nimport { listOptions } from \"modules/options/actions\";\nimport {\n  loadingSelector as optionLoading,\n  optionsSelector,\n  errorSelector as optionError,\n} from \"modules/options/selector\";\nimport { ClockLoader } from \"react-spinners\";\nconst columns = [\n  {\n    Header: \"Image\",\n    accessor: \"image\",\n  },\n  {\n    Header: \"Name\",\n    accessor: (d) => normalize(d.name),\n  },\n  {\n    Header: \"Price\",\n    accessor: (d) => d.price || 0,\n  },\n  {\n    Header: \"Type\",\n    accessor: (d) => normalize(d.type),\n  },\n];\nconst initialValues = {\n  name: \"\",\n  description: \"\",\n  price: 2,\n  options: [],\n  min_required: 1,\n  max_allowed: 1,\n  order: 100,\n};\nconst validationSchema = yup.object({\n  name: yup.string().required(\"A valid option must have name\"),\n  description: yup.string().optional(),\n  image_url: yup.string().optional(),\n  price: yup.number().required(\"A valid option must have price\"),\n  type: yup.string().optional(),\n});\nexport default function AddGroup(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const options = useSelector(optionsSelector);\n  const loading = useSelector(loadingSelector);\n  const error = useSelector(errorSelector);\n  const option_loding = useSelector(optionLoading);\n  const option_error = useSelector(optionError);\n  const nowGroup = useSelector(selectedSelector);\n  const [step1, setStep1] = React.useState(false);\n  const [selected, setSelected] = React.useState(\n    !isEmpty(nowGroup) ? nowGroup.options : []\n  );\n  const [formValues, setForm] = React.useState();\n  const [nowArray, setNowArray] = React.useState();\n  const [showOrder, setShowOrder] = React.useState(false);\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n  if (isEmpty(options)) {\n    dispatch(listOptions());\n  }\n  const handleSaveItem = () => {\n    const group = _.assign({}, formValues, {\n      options: nowArray.map((i) => i.original.id),\n    });\n    if (!isEmpty(nowGroup)) {\n      dispatch(updateGroup(group));\n    } else {\n      dispatch(addGroup(group));\n    }\n    setForm(\"\");\n    setNowArray([]);\n    setSelected([]);\n    if (props.setOpen) {\n      props.setOpen(false);\n    }\n  };\n  React.useEffect(() => {\n    return () => dispatch(removeSelected());\n  }, [nowGroup]);\n  return (\n    <div>\n      {loading ? (\n        <div className=\"centerMe\">\n          <ClockLoader className=\"IamLoader\" />\n        </div>\n      ) : (\n        <div className={classname(styles.container)} style={{ flex: 1 }}>\n          {!step1 && (\n            <div>\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <p style={{ fontSize: \"1.5rem\", color: \"red\" }}>\n                  {!isEmpty(nowGroup) ? \"Update Group\" : \"Add Group\"}\n                </p>\n              </div>\n              <Formik\n                initialValues={\n                  !isEmpty(nowGroup)\n                    ? !isEmpty(formValues)\n                      ? formValues\n                      : nowGroup\n                    : _.merge(initialValues, formValues)\n                }\n                enableReinitialize\n                validationSchema={validationSchema}\n                onSubmit={async (values) => {\n                  setForm(values);\n                  setStep1(true);\n                  setShowOrder(true);\n                }}\n                enableReinitialize\n              >\n                {({ values }) => (\n                  <Form>\n                    <div>\n                      <div className={classname(styles.formControl)}>\n                        <div className={classname(styles.labelContainer)}>\n                          <label\n                            htmlFor=\"name\"\n                            className={classname(\n                              styles.formLabel,\n                              styles.labelContainer\n                            )}\n                          >\n                            Group\n                          </label>\n                        </div>\n                        <div>\n                          <Field\n                            name=\"name\"\n                            type=\"text\"\n                            className={classname(styles.formInput)}\n                          />\n                          <ErrorMessage\n                            name={\"name\"}\n                            component=\"div\"\n                            style={{ color: \"red\" }}\n                          />\n                        </div>\n                      </div>\n                      <div className={classname(styles.formControl)}>\n                        <div className={classname(styles.labelContainer)}>\n                          <label\n                            htmlFor=\"price\"\n                            className={classname(\n                              styles.formLabel,\n                              styles.labelContainer\n                            )}\n                          >\n                            Price\n                          </label>\n                        </div>\n                        <div>\n                          <Field\n                            name=\"price\"\n                            type=\"number\"\n                            className={classname(styles.formInput)}\n                            min={0}\n                            step={0.01}\n                          />\n                          <ErrorMessage\n                            name={\"price\"}\n                            component=\"div\"\n                            style={{ color: \"red\" }}\n                          />\n                        </div>\n                      </div>\n                      <div className={classname(styles.formControl)}>\n                        <div className={classname(styles.labelContainer)}>\n                          <label\n                            htmlFor=\"min_requied\"\n                            className={classname(\n                              styles.formLabel,\n                              styles.labelContainer\n                            )}\n                          >\n                            Min Required\n                          </label>\n                        </div>\n                        <div>\n                          <Field\n                            name=\"min_required\"\n                            type=\"number\"\n                            className={classname(styles.formInput)}\n                          />\n                        </div>\n                        <ErrorMessage\n                          name={\"min_required\"}\n                          component=\"div\"\n                          className=\"field-error\"\n                        />\n                      </div>\n                      <div className={classname(styles.formControl)}>\n                        <div className={classname(styles.labelContainer)}>\n                          <label\n                            htmlFor=\"max_allowed\"\n                            className={classname(\n                              styles.formLabel,\n                              styles.labelContainer\n                            )}\n                          >\n                            Max Allowed\n                          </label>\n                        </div>\n                        <div>\n                          <Field\n                            name=\"max_allowed\"\n                            type=\"number\"\n                            className={classname(styles.formInput)}\n                          />\n                        </div>\n                        <ErrorMessage\n                          name={\"max_allowed\"}\n                          component=\"div\"\n                          className=\"field-error\"\n                        />\n                      </div>\n                      <div className={classname(styles.formControl)}>\n                        <div className={classname(styles.labelContainer)}>\n                          <label\n                            htmlFor=\"order\"\n                            className={classname(\n                              styles.formLabel,\n                              styles.labelContainer\n                            )}\n                          >\n                            Display order\n                          </label>\n                        </div>\n                        <div>\n                          <Field\n                            name=\"order\"\n                            type=\"number\"\n                            className={classname(styles.formInput)}\n                          />\n                        </div>\n                        <ErrorMessage\n                          name={\"order\"}\n                          component=\"div\"\n                          className=\"field-error\"\n                        />\n                      </div>\n                      <div className={classname(styles.titleWithNoBox)}>\n                        <h4>Description</h4>\n                      </div>\n                      <div className={classname(styles.descriptionBox)}>\n                        <div>\n                          <Field\n                            as=\"textarea\"\n                            name=\"description\"\n                            type=\"text\"\n                            className={classname(styles.descriptionContainer)}\n                          />\n                        </div>\n                        <ErrorMessage\n                          name={\"description\"}\n                          component=\"div\"\n                          className=\"field-error\"\n                        />\n                      </div>\n                      <div className={classname(styles.saveButtonContainer)}>\n                        <button\n                          type=\"submit\"\n                          className={classname(styles.ctaButton)}\n                        >\n                          Choose Options\n                        </button>\n                      </div>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n            </div>\n          )}\n          {step1 && (\n            <div className={classname(styles.tableContainer)}>\n              <div className={classname(styles.tableFlex)}>\n                <Table\n                  title={\"Options\"}\n                  columns={columns}\n                  data={options}\n                  updateSelectItems={setSelected}\n                  withCheckBox={true}\n                  noAction={true}\n                  preSelected={selected}\n                />\n              </div>\n              <div>\n                <div>\n                  <button\n                    className={classname(styles.button200)}\n                    onClick={() => history.push(\"/addOption\")}\n                  >\n                    Add Option\n                  </button>\n                </div>\n              </div>\n              <div className={classname(styles.between)}>\n                <div>\n                  <button\n                    onClick={() => setStep1(false)}\n                    className={classname(styles.ctaButton)}\n                  >\n                    Back\n                  </button>\n                </div>\n                <div>\n                  <button\n                    disabled={!selected.length}\n                    className={classname(styles.ctaButton)}\n                    onClick={() => (selected.length ? setStep1(false) : null)}\n                  >\n                    Save\n                  </button>\n                  <div style={{ fontSize: \"10px\" }}>\n                    {!selected.length && (\n                      <p>\n                        <span style={{ color: \"red\" }}>*</span> Select alteast 1\n                        option\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n      {selected.length && !step1 && showOrder ? (\n        <div style={{ flex: 1 }}>\n          <div>\n            <OrderTable\n              columns={columns}\n              data={selected}\n              updateCurrentRows={setNowArray}\n            />\n          </div>\n          <div\n            style={{\n              margin: \"10px auto\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <button\n              className={styles.ctaButton}\n              onClick={() => {\n                handleSaveItem();\n              }}\n            >\n              Save Group\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/constants.js",[],["234","235"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/utils.js",[],["236","237"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/actions.js",[],["238","239"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/reducer.js",["240","241"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/index.js",["242","243"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/actions.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/addModifier.js",["244","245"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/table/index.js",["246","247","248","249","250","251","252"],"import React from \"react\";\nimport {\n  useTable,\n  useFilters,\n  useAsyncDebounce,\n  useSortBy,\n  usePagination,\n  useRowSelect,\n  useGlobalFilter,\n} from \"react-table\";\nimport _ from \"lodash\";\nimport classnames from \"classnames\";\nimport { matchSorter } from \"match-sorter\";\nimport styles from \"./table.module.css\";\n\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { map } from \"lodash\";\nconst style = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\nconst newStyles = {\n  formControlMargins: {\n    margin: \"3px 0 !important\",\n  },\n  gridContainer: {\n    justifyContent: \"center\",\n  },\n};\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n      <input\n        onChange={(e) => {\n          setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n        }}\n        placeholder={`Search ${count} records...`}\n        className={classnames(styles.rt_header_search)}\n      />\n    </div>\n  );\n}\n// global filter\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return (\n    <div style={{display: 'flex' }}>\n      <div style={{display: 'flex', alignItems:'center'}}>\n        Search\n      </div>\n      <input\n        value={value || \"\"}\n        onChange={(e) => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        }}\n        style={{\n          margin: '10px',\n          width: '100%',\n          fontSize: \"1rem\",\n          border: \"solid 1px\",\n          borderRadius: '5px',\n          padding: \"10px\",\n        }}\n      />\n    </div>\n  );\n}\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = (val) => !val;\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n      </>\n    );\n  }\n);\n\n// Our table component\nfunction Table({\n  columns,\n  data,\n  updateSelectItems,\n  withCheckBox,\n  noAction,\n  preSelected,\n  title,\n}) {\n  const memo_columns = React.useMemo(() => {\n    if (noAction) {\n      _.remove(columns, { Header: \"Actions\" });\n      return columns;\n    } else return columns;\n  }, [noAction]);\n  const memo_data = React.useMemo(() => data);\n  const filterTypes = React.useMemo(\n    () => ({\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: (rows, id, filterValue) => {\n        return rows.filter((row) => {\n          const rowValue = row.values[id];\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true;\n        });\n      },\n    }),\n    []\n  );\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n  const preSelectIndex = _.map(preSelected, (s) =>\n    _.indexOf(\n      memo_data.map((m) => m.id),\n      s.id\n    )\n  );\n  const selected = {};\n  preSelectIndex.map((i) => (selected[i] = true));\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    visibleColumns,\n    state: {selectedRowIds },\n    selectedFlatRows,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns: memo_columns,\n      data: memo_data,\n      defaultColumn, // Be sure to pass the defaultColumn option\n      filterTypes,\n      initialState: { selectedRowIds: selected },\n    },\n    useFilters, // useFilters!\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    (hooks) => {\n      if (withCheckBox) {\n        hooks.visibleColumns.push((columns) => [\n          {\n            id: \"selection\",\n            Header: ({ getToggleAllPageRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox\n                  {...getToggleAllPageRowsSelectedProps()}\n                />\n              </div>\n            ),\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ]);\n      } else return null;\n    }\n  );\n\n  React.useEffect(() => {\n    updateSelectItems(\n      map(selectedFlatRows, (d) => {\n        return d.original;\n      })\n    );\n  }, [updateSelectItems, selectedRowIds]);\n  return (\n    <div className={classnames(styles.ReactTable)}>\n      {title && <div className={classnames(styles.tableTile)}>{title}</div>}\n      <div>\n        <GlobalFilter\n          preGlobalFilteredRows={preGlobalFilteredRows}\n          globalFilter={state.globalFilter}\n          setGlobalFilter={setGlobalFilter}\n        />\n      </div>\n      <MaUTable {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()} className=\"rt-tr\">\n              {headerGroup.headers.map((column, key) => (\n                <TableCell\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                >\n                  <div\n                    className=\"rt-resizable-header-content table-header\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {column.render(\"Header\")}\n                    <span>\n                      {\n                        column.isSorted ? column.isSortedDesc ? ' 🔽':' 🔼': ''\n                      }\n                    </span>\n                  </div>\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n          {/*\n          <TableRow>\n            <TableCell\n              colSpan={visibleColumns.length}\n              style={{ textAlign: \"left\" }}\n            ></TableCell>\n          </TableRow>\n          */}\n        </TableHead>\n        <TableBody\n          // style={{ textAlign: \"center\" }}\n          {...getTableBodyProps()}\n          className=\"rt-tbody\"\n        >\n          {rows.map((row, i) => {\n            prepareRow(row);\n\n            return (\n              <TableRow\n                {...row.getRowProps()}\n                className={classnames(\n                  \"rt-tr\",\n                  { \" -odd\": i % 2 === 0 },\n                  { \" -even\": i % 2 === 1 }\n                )}\n                //   onClick={() => handleClickOpen(row.original)}\n              >\n                {row.cells.map((cell) => {\n                  return (\n                    <TableCell\n                      {...cell.getCellProps()}\n                      className=\"rt-td\"\n                      style={{ textAlign: \"center\" }}\n                    >\n                      {cell.render(\"Cell\")}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </MaUTable>\n    </div>\n  );\n}\nexport default Table;\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/index.js",["253"],"import React from 'react';\nimport styles from './Sidebar.module.sass';\nimport classname from 'classnames';\nimport default_img from './default.jpg';\nimport { normalizeText } from 'utils/normalize'\nimport SidebarRoutes from './sidebarRoutes'\nexport default function Sidebar(props) {\n    const [activeRoute, setActive] = React.useState('/items')\n    const {\n        title,\n        img\n    } = props;\n    return (\n        <div className={classname(styles.main)}>\n            <div className={classname(styles.sidebar_header)}>\n                <div class={classname(styles.titleBox)}>\n                    <div className={classname(styles.avatar)}>\n                        <img src={img ? img : default_img} className={classname(styles.avatarImg)} />\n                    </div>\n                    <div className={classname(styles.title)}>\n                        <h1>{title ? normalizeText(title) : normalizeText('echola pizza')}</h1>\n                    </div>\n                </div>\n            </div>\n            <div className={classname(styles.sidebar_content)}>\n                <SidebarRoutes activeRoute={activeRoute} setActive={setActive}/>\n            </div>\n        </div>\n    )\n}",["254","255"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/sidebarRoutes.js",["256","257","258","259","260"],"import routes from 'routes';\nimport { map, sortBy } from 'lodash'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport classname from 'classnames';\nimport styles from './Sidebar.module.sass'\nimport React from 'react'\nimport {FaObjectGroup, FaSitemap, FaPizzaSlice, FaDiceD6 } from 'react-icons/fa'\nexport default function SidebarRoutes(props) {\n    const {activeRoute, setActive} = props\n    const history = useHistory();\n    const location = useLocation()\n    const sortedRoutes = sortBy(routes(), [\"num\"]);\n    const handleClick = (route) => {\n        if (!route) return null;\n        setActive(route.path)\n    }\n    React.useEffect(() => {\n        history.push(activeRoute)\n    }, \n    [activeRoute])\n    return (\n        <div className={classname(styles.nav_links)}>\n            {map(sortedRoutes, route =>\n                {\n                    if(!route.icon) return null\n                return (\n                <div \n                    className={classname(styles.link_container, styles.isALinkContainer, {[styles.isActive]: \"/\" + route.name.toLowerCase() === location.pathname ? true : false})}\n                    key={route.name} \n                    onClick={() => handleClick(route)}\n                >\n                    <div className={classname(styles.avatar_container)}>\n                        {route.icon}\n                    </div>\n                    <div className={classname(styles.link_text)}>\n                        <p>\n                            {route.name}\n                        </p>\n                    </div>\n                </div>\n                )}\n            )}\n        </div>\n    )\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/routes.js",["261"],"import AddOptions from 'views/Options/addOption'\nimport OptionsList from 'views/Options'\nimport Groups from 'views/Groups';\nimport AddGroup from 'views/Groups/addGroup'\nimport ListItems from 'views/Items';\nimport AddItem from 'views/Items/addItem';\nimport Modifiers from 'views/Modifiers'\nimport AddModifier from 'views/Modifiers/addModifier';\nimport { FaObjectGroup, FaSitemap, FaPizzaSlice, FaDiceD6 } from 'react-icons/fa'\nexport default function () {\n    return [\n        {\n            path: \"/options\",\n            name: \"Options\",\n            icon: (<div><FaSitemap/></div>),\n            component: OptionsList,\n            layout: \"/pizza\",\n\t    num: 2\n        },\n        {\n            path: \"/addOption\",\n            name: \"Add option\",\n            icon: \"\",\n            component: AddOptions,\n            layout: \"/pizza\",\n        },\n        {\n            path: '/modifiers',\n            name: 'Modifiers',\n            icon: (<div><FaDiceD6/></div>),\n            component: Modifiers,\n            layout: \"/pizza\",\n\t    num: 1\n        },\n        {\n            path: \"/addModifier\",\n            name: \"Add Modifier\",\n            icon: \"\",\n            component: AddModifier,\n            layout: \"/pizza\"\n        },\n        {\n            path: '/items',\n            name: 'Items',\n            icon: (<div><FaPizzaSlice/></div>),\n            component: ListItems,\n            layout: \"/pizza\",\n\t    num: 4\n        },\n        {\n            path: \"/addItem\",\n            name: \"Add Item\",\n            icon: \"\",\n            component: AddItem,\n            layout: \"/pizza\"\n        }\n        ,{\n            path: '/groups',\n            name: 'Groups',\n            icon: (<div><FaObjectGroup/></div>),\n            component: Groups,\n            layout: \"/pizza\",\n\t    num: 3\n        },\n        {\n            path: \"/addgroup\",\n            name: \"add option group\",\n            icon: \"\",\n            component: AddGroup,\n            layout: \"/pizza\"\n        }\n    ]\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reportWebVitals.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reducers.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/saga.js",["262"],"import {takeEvery, put, call} from 'redux-saga/effects'\nimport * as Actions from './constants'\nimport {isEmpty} from 'lodash'\nimport {\n    listGroups,\n    addGroup,\n    deleteGroup,\n    updateGroup,\n    detailGroup\n} from './service'\n\nfunction* listGroupSaga(){\n    try {\n    const response = yield call(listGroups)\n    const {status, data} = response\n    if(status === 200) {\n        yield put({\n            type: Actions.LIST_GROUPS_SUCCESS,\n            payload:data \n        })\n    }\n    else throw new Error(\"Unable to fetch modifiers\")\n    }\n    catch(err){\n        console.log(err)\n        yield ({\n            type: Actions.LIST_GROUPS_ERROR,\n            error: err.message\n        })\n    }\n}\n\nfunction* addGroupSaga({payload}){\n    try{\n        const addReq = yield call(addGroup, payload)\n        if(addReq.status === 201){\n            yield put({\n                type: Actions.ADD_GROUP_SUCCESS,\n                payload: addReq.data\n            })\n        yield put({\n            type: Actions.LIST_GROUPS\n        }) \n        }\n        else throw new Error(\"Unable to add modifiers\")\n    }\n    catch (err){\n        console.log(err)\n        alert(err.message)\n        yield put({\n            type: Actions.ADD_GROUP_ERROR,\n            error: err.message\n        })\n    }\n}\n\nfunction* updateGroupSaga({payload}){\n    try{\n        const updateReq = yield call(updateGroup, payload)\n        const {status} = updateReq\n        if(status === 200) {\n            yield put({\n                type: Actions.UPDATE_GROUP_SUCCESS,\n                payload: 'success'\n            })\n        yield put({\n            type: Actions.LIST_GROUPS\n        })\n        }\n        else throw new Error(\"Unable to update modifier\")\n    }\n    catch(err){\n        console.log(err)\n        yield put({\n            type: Actions.LIST_GROUPS\n        })\n        yield put({\n            type: Actions.UPDATE_GROUP_SUCCESS,\n            error: err.message \n        })\n    }\n}\n/**\n * \n * @param {modifierId} modifier \n * Usually we dont user this function\n * as fetching a single item or option with id is not practical\n */\nfunction* detailGroupSaga({payload}){\n    try {\n        const req = yield call(detailGroup, payload.id)\n        const {status, data} = req\n        if(status === 200) {\n            yield put({\n                type: Actions.DETAIL_GROUP_SUCCESS,\n                payload: data\n            })\n        }\n        else throw new Error(\"Unable to fetch group\")\n    }\n    catch(err){\n        console.log(err)\n        yield put({\n            type: Actions.DETAIL_GROUP_ERROR,\n            error: err.message\n        })\n    }\n}\n\nfunction* deleteGroupSaga({payload}){\n    try {\n        const req = yield call(deleteGroup, payload)\n        const {status} = req\n        if(status === 204){\n            yield put({\n                type: Actions.DELETE_GROUP_SUCCESS\n            })\n            yield put({\n                type: Actions.LIST_GROUPS\n            })\n        }\n    }\n    catch (err){\n        console.log(err)\n        alert(err.message)\n            yield put({\n                type: Actions.LIST_GROUPS\n            })\n        yield put({\n            type: Actions.DELETE_GROUP_ERROR,\n            error: err.message\n        })\n    }\n}\n\nexport default function* optionSaga(){\n    yield takeEvery(Actions.ADD_GROUP, addGroupSaga)\n    yield takeEvery(Actions.LIST_GROUPS, listGroupSaga)\n    yield takeEvery(Actions.UPDATE_GROUP, updateGroupSaga)\n    yield takeEvery(Actions.DETAIL_GROUP, detailGroupSaga)\n    yield takeEvery(Actions.DELETE_GROUP, deleteGroupSaga)\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/utils/normalize.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/addItem.js",["263","264","265","266","267","268","269","270","271","272","273","274"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/selector.js",["275","276"],"import {createSelector} from 'reselect'\nimport {isImmutable} from 'immutable'\nimport _, { create } from 'lodash'\n\nconst groups = state => state.groups\n\nexport const messageSelector = createSelector(\n    groups,\n    data => data.get('message')\n)\nexport const loadingSelector = createSelector(\n    groups, \n    data => data.get('loading')\n)\n\nexport const errorSelector = createSelector(\n    groups,\n    data => {\n        let error = data.get('error')\n        if (isImmutable(error)){\n            return error.toJS()\n        }\n        return error\n    }\n)\n\nexport const listSelector = createSelector(\n    groups,\n    data => {\n        let groups = data.get('groups')\n        if(isImmutable(groups)){\n            return groups.toJS()\n        }\n        return []\n    }\n)\n\nexport const selectedSelector = createSelector(\n    groups, \n    data => {\n        let selected = data.get('selected')\n        if(selected.size > 0 && isImmutable(selected)){\n            return selected.toJS()\n        }\n        return []\n    }\n)","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/orderTable/index.js",["277","278","279","280","281"],"import React from 'react'\nimport { useTable } from 'react-table'\nimport { DndProvider, useDrag, useDrop } from 'react-dnd'\nimport {HTML5Backend} from 'react-dnd-html5-backend'\nimport update from 'immutability-helper'\nimport MaUTable from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport {FaHandPaper} from 'react-icons/fa'\nimport {sortedOptions} from 'modules/options/actions'\nimport {nowSortedArray} from 'modules/options/selector';\nimport {useDispatch, useSelector} from 'react-redux'\nfunction Table({ columns, data, updateCurrentRows }){\n  const [records, setRecords] = React.useState(data)\n  const getRowId = React.useCallback(row => {\n    return row.name\n  }, [])\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    data: records,\n    columns,\n    getRowId,\n  })\n  React.useEffect(() => {updateCurrentRows(rows)}, [rows])\n  const moveRow = (dragIndex, hoverIndex) => {\n    const dragRecord = records[dragIndex]\n    setRecords(\n      update(records, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, dragRecord],\n        ],\n      })\n    )\n  }\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <MaUTable {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map(headerGroup => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n              <TableHead/>\n              {headerGroup.headers.map(column => (\n                <TableCell {...column.getHeaderProps()}>{column.render('Header')}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map(\n            (row, index) =>\n            {\n            return   prepareRow(row) || (\n                <Row\n                  index={index}\n                  row={row}\n                  moveRow={moveRow}\n                  {...row.getRowProps()}\n                />\n              )\n            }\n          )}\n        </TableBody>\n      </MaUTable>\n    </DndProvider>\n  )\n}\n\nconst DND_ITEM_TYPE = 'row'\n\nconst Row = ({ row, index, moveRow }) => {\n  const dropRef = React.useRef(null)\n  const dragRef = React.useRef(null)\n\n  const [, drop] = useDrop({\n    accept: DND_ITEM_TYPE,\n    hover(item, monitor) {\n      if (!dropRef.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = dropRef.current.getBoundingClientRect()\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      // Time to actually perform the action\n      moveRow(dragIndex, hoverIndex)\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex\n    },\n  })\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    item: { type: DND_ITEM_TYPE, index },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n\n  const opacity = isDragging ? 0 : 1\n\n  preview(drop(dropRef))\n  drag(dragRef)\n\n  return (\n    <TableRow ref={dropRef} style={{ opacity }}>\n      <TableCell ref={dragRef}><FaHandPaper/></TableCell>\n      {row.cells.map(cell => {\n        return <TableCell {...cell.getCellProps()}>{cell.render('Cell')}</TableCell>\n      })}\n    </TableRow>\n  )\n}\n\nconst OrderTable = ({columns, data, updateCurrentRows}) => {\n  return (\n      <Table columns={columns} data={data} updateCurrentRows={updateCurrentRows}/>\n  )\n}\n\nexport default OrderTable","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/index.js",["282","283","284","285","286","287","288"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/App.js",["289"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/sagas.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/selector.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/reducer.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/reducer.js",["290"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/selector.js",["291"],"import {createSelector} from 'reselect'\nimport {isImmutable} from 'immutable'\nimport _ from 'lodash';\n\nconst options = state => state.options;\n\nexport const loadingSelector = createSelector(\n    options, \n    data => data.get('loading')\n)\n\nexport const errorSelector = createSelector(\n    options, \n    data => {\n        var error = data.get('error')\n        if(isImmutable(error)) {\n            return error.toJS()\n        }\n        else return error ? error : ''\n    }\n)\n\n export const optionsSelector= createSelector(\n     options,\n     data => {\n         var list = data.get('options')\n         if (isImmutable(list)) {\n             return list.toJS()\n         }\n         else return [] \n     }\n )\n\n export const selectedOptionsSelector = createSelector(\n     options, \n     data => {\n         var list = data.get('selected')\n         if(isImmutable(list)){\n             return list.toJS()\n         }\n         return []\n     }\n )\n\n export const nowOptionSelector = createSelector(\n     options,\n     data => {\n         var option = data.get('optionToEdit')\n         if(isImmutable(option)){\n             return option.toJS()\n         }\n         return {}\n     }\n )\n\n export const nowSortedArray = createSelector(\n     options, \n     data => {\n         var sorted = data.get('sortedOptions');\n         if (sorted.size > 0) {\n             return sorted.toJS();\n         }\n         else return []\n     }\n )\n\nexport const messageSelector = createSelector(\n\toptions,\n\tdata => data.get('message')\n)\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/selectors.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/addOption.js",["292","293","294","295"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Pizza/index.js",["296","297"],"import React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport styles from './Pizza.module.sass'\nimport classname from 'classnames';\nimport routes from 'routes';\nimport Group from 'views/Groups'\nexport default function Pizza(props){\n    const {component} = props;\n    const getRoutes = (routes) => {\n        return routes.map((prop, key) => {\n          if (prop.children) {\n            return getRoutes(prop.children);\n          }\n          if (prop.layout === \"/pizza\") {\n              let _routes = <Route\n                path={prop.path}\n                component={prop.component}\n                key={key}\n              />\n              return _routes\n          } else {\n            return null;\n          }\n        });\n      };\n    return (\n        <div className={classname(styles.pizza)}>\n          {/* <div className={classname(styles.topBar)}>\n\n          </div> */}\n           <Switch>\n               {getRoutes(routes())}\n               <Route path=\"/groups\" component={Group}/>\n           </Switch> \n        </div>\n    )\n}","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/reducer.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/actions.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/Layouts/index.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/createStore.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/api.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/service.js",[],{"ruleId":"298","severity":1,"message":"299","line":11,"column":10,"nodeType":"300","messageId":"301","endLine":11,"endColumn":17},{"ruleId":"298","severity":1,"message":"302","line":74,"column":9,"nodeType":"300","messageId":"301","endLine":74,"endColumn":16},{"ruleId":"298","severity":1,"message":"303","line":75,"column":9,"nodeType":"300","messageId":"301","endLine":75,"endColumn":14},{"ruleId":"298","severity":1,"message":"304","line":76,"column":9,"nodeType":"300","messageId":"301","endLine":76,"endColumn":24},{"ruleId":"298","severity":1,"message":"305","line":77,"column":9,"nodeType":"300","messageId":"301","endLine":77,"endColumn":21},{"ruleId":"298","severity":1,"message":"306","line":78,"column":9,"nodeType":"300","messageId":"301","endLine":78,"endColumn":24},{"ruleId":"307","severity":1,"message":"308","line":87,"column":6,"nodeType":"309","endLine":87,"endColumn":24,"suggestions":"310"},{"ruleId":"307","severity":1,"message":"311","line":92,"column":6,"nodeType":"309","endLine":92,"endColumn":24,"suggestions":"312"},{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","replacedBy":"316"},{"ruleId":"298","severity":1,"message":"317","line":5,"column":8,"nodeType":"300","messageId":"301","endLine":5,"endColumn":13},{"ruleId":"298","severity":1,"message":"318","line":21,"column":3,"nodeType":"300","messageId":"301","endLine":21,"endColumn":16},{"ruleId":"298","severity":1,"message":"319","line":24,"column":10,"nodeType":"300","messageId":"301","endLine":24,"endColumn":19},{"ruleId":"298","severity":1,"message":"320","line":25,"column":26,"nodeType":"300","messageId":"301","endLine":25,"endColumn":40},{"ruleId":"298","severity":1,"message":"321","line":26,"column":10,"nodeType":"300","messageId":"301","endLine":26,"endColumn":21},{"ruleId":"298","severity":1,"message":"322","line":27,"column":10,"nodeType":"300","messageId":"301","endLine":27,"endColumn":25},{"ruleId":"298","severity":1,"message":"302","line":45,"column":9,"nodeType":"300","messageId":"301","endLine":45,"endColumn":16},{"ruleId":"298","severity":1,"message":"323","line":47,"column":10,"nodeType":"300","messageId":"301","endLine":47,"endColumn":18},{"ruleId":"298","severity":1,"message":"324","line":49,"column":10,"nodeType":"300","messageId":"301","endLine":49,"endColumn":17},{"ruleId":"307","severity":1,"message":"325","line":55,"column":6,"nodeType":"309","endLine":55,"endColumn":23,"suggestions":"326"},{"ruleId":"298","severity":1,"message":"303","line":64,"column":9,"nodeType":"300","messageId":"301","endLine":64,"endColumn":14},{"ruleId":"298","severity":1,"message":"327","line":65,"column":9,"nodeType":"300","messageId":"301","endLine":65,"endColumn":22},{"ruleId":"298","severity":1,"message":"305","line":66,"column":9,"nodeType":"300","messageId":"301","endLine":66,"endColumn":21},{"ruleId":"298","severity":1,"message":"328","line":75,"column":9,"nodeType":"300","messageId":"301","endLine":75,"endColumn":21},{"ruleId":"307","severity":1,"message":"329","line":106,"column":6,"nodeType":"309","endLine":106,"endColumn":16,"suggestions":"330"},{"ruleId":"331","severity":1,"message":"332","line":137,"column":17,"nodeType":"333","endLine":137,"endColumn":35},{"ruleId":"313","replacedBy":"334"},{"ruleId":"315","replacedBy":"335"},{"ruleId":"313","replacedBy":"336"},{"ruleId":"315","replacedBy":"337"},{"ruleId":"313","replacedBy":"338"},{"ruleId":"315","replacedBy":"339"},{"ruleId":"340","severity":1,"message":"341","line":62,"column":9,"nodeType":"342","messageId":"343","endLine":63,"endColumn":58},{"ruleId":"340","severity":1,"message":"341","line":64,"column":9,"nodeType":"342","messageId":"343","endLine":65,"endColumn":68},{"ruleId":"307","severity":1,"message":"308","line":30,"column":5,"nodeType":"309","endLine":30,"endColumn":26,"suggestions":"344"},{"ruleId":"298","severity":1,"message":"323","line":31,"column":10,"nodeType":"300","messageId":"301","endLine":31,"endColumn":18},{"ruleId":"298","severity":1,"message":"303","line":32,"column":11,"nodeType":"300","messageId":"301","endLine":32,"endColumn":16},{"ruleId":"298","severity":1,"message":"345","line":33,"column":12,"nodeType":"300","messageId":"301","endLine":33,"endColumn":16},{"ruleId":"298","severity":1,"message":"346","line":22,"column":7,"nodeType":"300","messageId":"301","endLine":22,"endColumn":12},{"ruleId":"298","severity":1,"message":"347","line":34,"column":7,"nodeType":"300","messageId":"301","endLine":34,"endColumn":16},{"ruleId":"298","severity":1,"message":"348","line":66,"column":9,"nodeType":"300","messageId":"301","endLine":66,"endColumn":14},{"ruleId":"307","severity":1,"message":"349","line":132,"column":6,"nodeType":"309","endLine":132,"endColumn":16,"suggestions":"350"},{"ruleId":"307","severity":1,"message":"351","line":133,"column":21,"nodeType":"352","endLine":133,"endColumn":34},{"ruleId":"298","severity":1,"message":"353","line":176,"column":5,"nodeType":"300","messageId":"301","endLine":176,"endColumn":19},{"ruleId":"307","severity":1,"message":"354","line":224,"column":6,"nodeType":"309","endLine":224,"endColumn":41,"suggestions":"355"},{"ruleId":"356","severity":1,"message":"357","line":18,"column":25,"nodeType":"358","endLine":18,"endColumn":102},{"ruleId":"313","replacedBy":"359"},{"ruleId":"315","replacedBy":"360"},{"ruleId":"298","severity":1,"message":"361","line":7,"column":9,"nodeType":"300","messageId":"301","endLine":7,"endColumn":22},{"ruleId":"298","severity":1,"message":"362","line":7,"column":24,"nodeType":"300","messageId":"301","endLine":7,"endColumn":33},{"ruleId":"298","severity":1,"message":"363","line":7,"column":35,"nodeType":"300","messageId":"301","endLine":7,"endColumn":47},{"ruleId":"298","severity":1,"message":"364","line":7,"column":49,"nodeType":"300","messageId":"301","endLine":7,"endColumn":57},{"ruleId":"307","severity":1,"message":"365","line":20,"column":5,"nodeType":"309","endLine":20,"endColumn":18,"suggestions":"366"},{"ruleId":"367","severity":1,"message":"368","line":10,"column":1,"nodeType":"369","endLine":73,"endColumn":2},{"ruleId":"298","severity":1,"message":"299","line":3,"column":9,"nodeType":"300","messageId":"301","endLine":3,"endColumn":16},{"ruleId":"298","severity":1,"message":"370","line":5,"column":45,"nodeType":"300","messageId":"301","endLine":5,"endColumn":57},{"ruleId":"298","severity":1,"message":"319","line":12,"column":10,"nodeType":"300","messageId":"301","endLine":12,"endColumn":19},{"ruleId":"298","severity":1,"message":"321","line":13,"column":10,"nodeType":"300","messageId":"301","endLine":13,"endColumn":21},{"ruleId":"298","severity":1,"message":"371","line":88,"column":9,"nodeType":"300","messageId":"301","endLine":88,"endColumn":16},{"ruleId":"298","severity":1,"message":"372","line":89,"column":9,"nodeType":"300","messageId":"301","endLine":89,"endColumn":15},{"ruleId":"298","severity":1,"message":"373","line":90,"column":9,"nodeType":"300","messageId":"301","endLine":90,"endColumn":16},{"ruleId":"298","severity":1,"message":"302","line":93,"column":9,"nodeType":"300","messageId":"301","endLine":93,"endColumn":16},{"ruleId":"298","severity":1,"message":"374","line":94,"column":9,"nodeType":"300","messageId":"301","endLine":94,"endColumn":21},{"ruleId":"298","severity":1,"message":"375","line":95,"column":9,"nodeType":"300","messageId":"301","endLine":95,"endColumn":22},{"ruleId":"298","severity":1,"message":"376","line":96,"column":9,"nodeType":"300","messageId":"301","endLine":96,"endColumn":18},{"ruleId":"298","severity":1,"message":"377","line":102,"column":10,"nodeType":"300","messageId":"301","endLine":102,"endColumn":21},{"ruleId":"298","severity":1,"message":"378","line":102,"column":23,"nodeType":"300","messageId":"301","endLine":102,"endColumn":37},{"ruleId":"298","severity":1,"message":"379","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":9},{"ruleId":"298","severity":1,"message":"380","line":3,"column":13,"nodeType":"300","messageId":"301","endLine":3,"endColumn":19},{"ruleId":"298","severity":1,"message":"381","line":12,"column":9,"nodeType":"300","messageId":"301","endLine":12,"endColumn":22},{"ruleId":"298","severity":1,"message":"382","line":13,"column":9,"nodeType":"300","messageId":"301","endLine":13,"endColumn":23},{"ruleId":"298","severity":1,"message":"383","line":14,"column":9,"nodeType":"300","messageId":"301","endLine":14,"endColumn":20},{"ruleId":"298","severity":1,"message":"384","line":14,"column":22,"nodeType":"300","messageId":"301","endLine":14,"endColumn":33},{"ruleId":"307","severity":1,"message":"385","line":32,"column":52,"nodeType":"309","endLine":32,"endColumn":58,"suggestions":"386"},{"ruleId":"298","severity":1,"message":"387","line":13,"column":75,"nodeType":"300","messageId":"301","endLine":13,"endColumn":92},{"ruleId":"298","severity":1,"message":"302","line":17,"column":9,"nodeType":"300","messageId":"301","endLine":17,"endColumn":16},{"ruleId":"298","severity":1,"message":"305","line":18,"column":9,"nodeType":"300","messageId":"301","endLine":18,"endColumn":21},{"ruleId":"307","severity":1,"message":"308","line":24,"column":7,"nodeType":"309","endLine":24,"endColumn":26,"suggestions":"388"},{"ruleId":"298","severity":1,"message":"323","line":25,"column":10,"nodeType":"300","messageId":"301","endLine":25,"endColumn":18},{"ruleId":"298","severity":1,"message":"389","line":27,"column":10,"nodeType":"300","messageId":"301","endLine":27,"endColumn":14},{"ruleId":"298","severity":1,"message":"390","line":27,"column":16,"nodeType":"300","messageId":"301","endLine":27,"endColumn":23},{"ruleId":"298","severity":1,"message":"391","line":7,"column":3,"nodeType":"300","messageId":"301","endLine":7,"endColumn":11},{"ruleId":"340","severity":1,"message":"341","line":25,"column":9,"nodeType":"342","messageId":"343","endLine":26,"endColumn":75},{"ruleId":"298","severity":1,"message":"379","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":9},{"ruleId":"298","severity":1,"message":"392","line":17,"column":3,"nodeType":"300","messageId":"301","endLine":17,"endColumn":18},{"ruleId":"298","severity":1,"message":"393","line":23,"column":20,"nodeType":"300","messageId":"301","endLine":23,"endColumn":26},{"ruleId":"298","severity":1,"message":"394","line":66,"column":9,"nodeType":"300","messageId":"301","endLine":66,"endColumn":20},{"ruleId":"307","severity":1,"message":"395","line":97,"column":6,"nodeType":"309","endLine":97,"endColumn":27,"suggestions":"396"},{"ruleId":"298","severity":1,"message":"391","line":2,"column":25,"nodeType":"300","messageId":"301","endLine":2,"endColumn":33},{"ruleId":"298","severity":1,"message":"397","line":8,"column":12,"nodeType":"300","messageId":"301","endLine":8,"endColumn":21},"no-unused-vars","'isEmpty' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'options_loading' is assigned a value but never used.","'option_error' is assigned a value but never used.","'options_message' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.","ArrayExpression",["398"],"React Hook React.useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["399"],"no-native-reassign",["400"],"no-negated-in-lhs",["401"],"'items' is defined but never used.","'errorSelector' is defined but never used.","'listGroup' is defined but never used.","'groupsSelector' is defined but never used.","'listOptions' is defined but never used.","'optionsSelector' is defined but never used.","'selected' is assigned a value but never used.","'newItem' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'itemInfo'. Either include it or remove the dependency array.",["402"],"'option_loding' is assigned a value but never used.","'customStyles' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["403"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["400"],["401"],["400"],["401"],["400"],["401"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected",["404"],"'form' is assigned a value but never used.","'style' is assigned a value but never used.","'newStyles' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook React.useMemo has a missing dependency: 'columns'. Either include it or remove the dependency array.",["405"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'visibleColumns' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'selectedFlatRows'. Either include it or remove the dependency array.",["406"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["400"],["401"],"'FaObjectGroup' is defined but never used.","'FaSitemap' is defined but never used.","'FaPizzaSlice' is defined but never used.","'FaDiceD6' is defined but never used.","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["407"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'isEmptyArray' is defined but never used.","'history' is assigned a value but never used.","'groups' is assigned a value but never used.","'options' is assigned a value but never used.","'groupLoading' is assigned a value but never used.","'optionLoading' is assigned a value but never used.","'groupInfo' is assigned a value but never used.","'optionArray' is assigned a value but never used.","'setOptionArray' is assigned a value but never used.","'_' is defined but never used.","'create' is defined but never used.","'sortedOptions' is defined but never used.","'nowSortedArray' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","React Hook React.useEffect has a missing dependency: 'updateCurrentRows'. Either include it or remove the dependency array. If 'updateCurrentRows' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["408"],"'nowOptionSelector' is defined but never used.",["409"],"'list' is assigned a value but never used.","'setList' is assigned a value but never used.","'Redirect' is defined but never used.","'loadingSelector' is defined but never used.","'modErr' is defined but never used.","'mod_loading' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'modifierMessage' and 'modifiers'. Either include them or remove the dependency array.",["410"],"'component' is assigned a value but never used.",{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},"no-global-assign","no-unsafe-negation",{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},"Update the dependencies array to be: [dispatch, groups, message]",{"range":"433","text":"434"},"Update the dependencies array to be: [dispatch, groups, options]",{"range":"435","text":"436"},"Update the dependencies array to be: [dispatch, itemInfo, items]",{"range":"437","text":"438"},"Update the dependencies array to be: [dispatch, nowGroup]",{"range":"439","text":"440"},"Update the dependencies array to be: [dispatch, message, modifiers]",{"range":"441","text":"442"},"Update the dependencies array to be: [columns, noAction]",{"range":"443","text":"444"},"Update the dependencies array to be: [updateSelectItems, selectedRowIds, selectedFlatRows]",{"range":"445","text":"446"},"Update the dependencies array to be: [activeRoute, history]",{"range":"447","text":"448"},"Update the dependencies array to be: [rows, updateCurrentRows]",{"range":"449","text":"450"},"Update the dependencies array to be: [dispatch, message, options]",{"range":"451","text":"452"},"Update the dependencies array to be: [nowOption, dispatch, modifierMessage, modifiers]",{"range":"453","text":"454"},[2513,2531],"[dispatch, groups, message]",[2651,2669],"[dispatch, groups, options]",[1717,1734],"[dispatch, itemInfo, items]",[3016,3026],"[dispatch, nowGroup]",[1086,1107],"[dispatch, message, modifiers]",[3282,3292],"[columns, noAction]",[5552,5587],"[updateSelectItems, selectedRowIds, selectedFlatRows]",[702,715],"[activeRoute, history]",[1075,1081],"[rows, updateCurrentRows]",[1069,1088],"[dispatch, message, options]",[3022,3043],"[nowOption, dispatch, modifierMessage, modifiers]"]