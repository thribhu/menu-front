[{"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/index.js":"1","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/Layouts/index.js":"2","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/utils/normalize.js":"3","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Sidebar/index.js":"4","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/reportWebVitals.js":"5","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Pizza/index.js":"6","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/App.js":"7","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/createStore.js":"8","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/modules/options/reducer.js":"9","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/routes.js":"10","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Options/addOption.js":"11","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Items/index.js":"12","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/utils/isValidImage.js":"13","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Groups/addGroup.js":"14","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Sidebar/sidebarRoutes.js":"15","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Modifiers/addModifier.js":"16","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Options/index.js":"17","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Modifiers/index.js":"18","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/modules/options/constants.js":"19","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Groups/index.js":"20","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Items/addItem.js":"21","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/reducers.js":"22","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/modals/Groups/index.js":"23"},{"size":500,"mtime":1611552944563,"results":"24","hashOfConfig":"25"},{"size":367,"mtime":1612337528682,"results":"26","hashOfConfig":"25"},{"size":136,"mtime":1612337528712,"results":"27","hashOfConfig":"25"},{"size":1075,"mtime":1612337528698,"results":"28","hashOfConfig":"25"},{"size":362,"mtime":1611552944567,"results":"29","hashOfConfig":"25"},{"size":1064,"mtime":1612337528690,"results":"30","hashOfConfig":"25"},{"size":529,"mtime":1612338734514,"results":"31","hashOfConfig":"25"},{"size":1130,"mtime":1612337528700,"results":"32","hashOfConfig":"25"},{"size":1928,"mtime":1611679635817,"results":"33","hashOfConfig":"25"},{"size":1857,"mtime":1612337528707,"results":"34","hashOfConfig":"25"},{"size":6808,"mtime":1612338191364,"results":"35","hashOfConfig":"25"},{"size":507,"mtime":1612337528721,"results":"36","hashOfConfig":"25"},{"size":179,"mtime":1612337528711,"results":"37","hashOfConfig":"25"},{"size":8992,"mtime":1612338167864,"results":"38","hashOfConfig":"25"},{"size":1457,"mtime":1612337528699,"results":"39","hashOfConfig":"25"},{"size":8646,"mtime":1612338211267,"results":"40","hashOfConfig":"25"},{"size":556,"mtime":1612337528729,"results":"41","hashOfConfig":"25"},{"size":524,"mtime":1612337528724,"results":"42","hashOfConfig":"25"},{"size":857,"mtime":1612337528704,"results":"43","hashOfConfig":"25"},{"size":510,"mtime":1612337528718,"results":"44","hashOfConfig":"25"},{"size":11948,"mtime":1612465276218,"results":"45","hashOfConfig":"25"},{"size":172,"mtime":1612337528706,"results":"46","hashOfConfig":"25"},{"size":2108,"mtime":1612465178136,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"15bsurr",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/index.js",[],["106","107"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/Layouts/index.js",[],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/utils/normalize.js",[],["108","109"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Sidebar/index.js",["110"],"import React from 'react';\nimport styles from './Sidebar.module.sass';\nimport classname from 'classnames';\nimport default_img from './default.jpg';\nimport { normalizeText } from 'utils/normalize'\nimport SidebarRoutes from './sidebarRoutes'\nexport default function Sidebar(props) {\n    const {\n        title,\n        img\n    } = props;\n    return (\n        <div className={classname(styles.main)}>\n            <div className={classname(styles.sidebar_header)}>\n                <div class={classname(styles.titleBox)}>\n                    <div className={classname(styles.avatar)}>\n                        <img src={img ? img : default_img} className={classname(styles.avatarImg)} />\n                    </div>\n                    <div className={classname(styles.title)}>\n                        <h1>{title ? normalizeText(title) : normalizeText('echola pizza')}</h1>\n                    </div>\n                </div>\n            </div>\n            <div className={classname(styles.sidebar_content)}>\n                <SidebarRoutes />\n            </div>\n        </div>\n    )\n}","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/reportWebVitals.js",[],["111","112"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Pizza/index.js",["113","114"],"import React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport styles from './Pizza.module.sass'\nimport classname from 'classnames';\nimport routes from 'routes';\nimport Group from 'views/Groups'\nexport default function Pizza(props){\n    const {component} = props;\n    const getRoutes = (routes) => {\n        return routes.map((prop, key) => {\n          if (prop.children) {\n            return getRoutes(prop.children);\n          }\n          if (prop.layout === \"/pizza\") {\n              let _routes = <Route\n                path={prop.path}\n                component={prop.component}\n                key={key}\n              />\n              return _routes\n          } else {\n            return null;\n          }\n        });\n      };\n    return (\n        <div className={classname(styles.pizza)}>\n          {/* <div className={classname(styles.topBar)}>\n\n          </div> */}\n           <Switch>\n               {getRoutes(routes())}\n               <Route path=\"/groups\" component={Group}/>\n           </Switch> \n        </div>\n    )\n}",["115","116"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/App.js",[],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/createStore.js",["117","118"],"import { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { persistReducer, persistStore} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from 'reducers';\n//import rootSaga from './sagas';\nimport immutableTransform from 'redux-persist-transform-immutable';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    transforms: [immutableTransform()],\n    whitelist:  [\"\"]\n}\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? composeWithDevTools({ realtime: true }) : compose;\n// persisting the reducer and creating a reference to saga instance \nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst sagaMiddleware = createSagaMiddleware();\n\n\nexport default () => {\n    const enhancer = composeEnhancers(applyMiddleware());\n\n    const store =  createStore(persistedReducer, enhancer);\n    const  persistor = persistStore(store);\n    \n    //run saga middleware\n//    sagaMiddleware.run(rootSaga);\n    return {store, persistor};\n}\n","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/modules/options/reducer.js",["119"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/routes.js",["120"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Options/addOption.js",["121","122","123"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Items/index.js",[],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/utils/isValidImage.js",[],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Groups/addGroup.js",["124","125"],"import React from 'react';\nimport classname from 'classnames';\nimport styles from './Groups.module.sass'\nimport _ from 'lodash';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport options from '../Options/options.json'\nimport { normalizeText as normalize } from 'utils/normalize'\nconst initialValues = {\n    name: '',\n    description: '',\n    price: '',\n    price_default: 2,\n    options: [],\n    min_required: 1,\n    max_allowed: 1,\n    display_order: 100\n}\nconst validationSchema = yup.object({\n    name: yup.string().required('A valid option must have name'),\n    description: yup.string().optional(),\n    image_url: yup.string().optional(),\n    price: yup.number().required('A valid option must have price'),\n    type: yup.string().optional(),\n})\nexport default function AddGroup(props) {\n    return (\n        <div className={classname(styles.container)}>\n            <div className={classname(styles.formTitle)}>\n                <h4>\n                    Add Group\n                </h4>\n            </div>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={async (values) => {\n                    await new Promise((r) => setTimeout(r, 500));\n                    alert(JSON.stringify(values, null, 2));\n                }}\n            >\n                {({ values }) => (\n                    <Form>\n                        <div>\n                            <div className={classname(styles.formControl)}>\n                                <div className={classname(styles.labelContainer)}>\n                                    <label htmlFor=\"name\" className={classname(styles.formLabel, styles.labelContainer)}>Name</label>\n                                </div>\n                                <div>\n                                    <Field\n                                        name=\"name\"\n                                        type=\"text\"\n                                        className={classname(styles.formInput)}\n                                        autoFocus={true}\n                                        required\n                                    />\n                                </div>\n                                <ErrorMessage\n                                    name={\"name\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                />\n                            </div>\n                            <div className={classname(styles.formControl)}>\n                                <div className={classname(styles.labelContainer)}>\n                                    <label htmlFor=\"min_required\" className={classname(styles.formLabel, styles.labelContainer)}>Min Required</label>\n                                </div>\n                                <div>\n                                    <Field\n                                        name=\"min_required\"\n                                        value={values.min_required}\n                                        type=\"number\"\n                                        min={1}\n                                        className={classname(styles.formInput)}\n                                    />\n                                </div>\n                                <ErrorMessage\n                                    name={\"min_required\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                />\n                            </div>\n                            <div className={classname(styles.formControl)}>\n                                <div className={classname(styles.labelContainer)}>\n                                    <label htmlFor=\"max_allowed\" className={classname(styles.formLabel, styles.labelContainer)}>Max Allowed</label>\n                                </div>\n                                <div>\n                                    <Field\n                                        name=\"max_allowed\"\n                                        value={values.max_allowed}\n                                        type=\"number\"\n                                        min={1}\n                                        className={classname(styles.formInput)}\n                                    />\n                                </div>\n                                <ErrorMessage\n                                    name={\"max_allowed\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                />\n                            </div>\n                            <div className={classname(styles.formControl)}>\n                                <div className={classname(styles.labelContainer)}>\n                                    <label htmlFor=\"price_default\" className={classname(styles.formLabel, styles.labelContainer)}>Price Default</label>\n                                </div>\n                                <div>\n                                    <Field\n                                        name=\"price_default\"\n                                        value={values.price_default}\n                                        type=\"number\"\n                                        min={1}\n                                        className={classname(styles.formInput)}\n                                    />\n                                </div>\n                                <ErrorMessage\n                                    name={\"max_allowed\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                />\n                            </div>\n                            <div className={classname(styles.formControl)}>\n                                <div className={classname(styles.labelContainer)}>\n                                    <label htmlFor=\"display_order\" className={classname(styles.formLabel, styles.labelContainer)}>Display order</label>\n                                </div>\n                                <div>\n                                    <Field\n                                        name=\"display_order\"\n                                        value={values.display_order}\n                                        type=\"number\"\n                                        min={0}\n                                        className={classname(styles.formInput)}\n                                    />\n                                </div>\n                                <ErrorMessage\n                                    name={\"max_allowed\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                />\n                            </div>\n                            <div className={classname(styles.titleWithNoBox)}>\n                                <h4>Description</h4>\n                            </div>\n                            <div className={classname(styles.formControl)}>\n                                <div>\n                                    <Field\n                                        as=\"textarea\"\n                                        name=\"description\"\n                                        type=\"text\"\n                                        className={classname(styles.descriptionContainer)}\n                                    />\n                                </div>\n                                <ErrorMessage\n                                    name={\"name\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                />\n                            </div>\n\n                            <div>\n                                <h4 className={classname(styles.titleWithNoBox)}>\n                                    Select Options\n                            </h4>\n                                <div role=\"group\" className={classname(styles.checkboxContainer)}>\n                                    {options.map((m, i) => (\n                                        <label className={classname(styles.checkBoxLabel)}>\n                                            <Field type=\"checkbox\" name=\"options\" value={m.name + i} key={i} />\n                                            {normalize(m.name)}\n                                        </label>\n                                    ))}\n                                </div>\n                            </div>\n                            <div className={classname(styles.saveButtonContainer)}>\n                                <button type=\"submit\" className={classname(styles.ctaButton)}>Save Option</button>\n                            </div>\n                        </div>\n                    </Form>\n                )\n                }\n            </Formik >\n        </div>\n    )\n}","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/components/Sidebar/sidebarRoutes.js",["126","127","128"],"import routes from 'routes';\nimport { map, sortBy } from 'lodash'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport classname from 'classnames';\nimport styles from './Sidebar.module.sass'\nexport default function SidebarRoutes() {\n    const location = useLocation();\n    const history = useHistory();\n    const currentPath = location.pathname;\n    const sortedRoutes = sortBy(routes(), [\"name\"]);\n    const handleClick = (route) => {\n        debugger\n        if (!route) return null;\n        let { component } = route\n        history.push(route.path)\n    }\n\n    return (\n        <div className={classname(styles.nav_links)}>\n            {map(sortedRoutes, route =>\n                {\n                    if(!route.icon) return null\n                return (\n                <div \n                    className={classname([styles.link_container, styles.isALinkContainer])}\n                    key={route.name} \n                    onClick={() => handleClick(route)}\n                >\n                    <div className={classname(styles.avatar_container)}>\n                        <img src={route.icon} className={classname(styles.link_avatar)} />\n                    </div>\n                    <div className={classname(styles.link_text)}>\n                        <p>\n                            {route.name}\n                        </p>\n                    </div>\n                </div>\n                )}\n            )}\n        </div>\n    )\n}","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Modifiers/addModifier.js",["129","130","131","132","133","134"],"import React from 'react';\nimport classname from 'classnames'\nimport styles from './Modifiers.module.sass';\nimport { Formik, ErrorMessage, Field, Form, FieldArray } from 'formik';\nimport * as Yup from 'yup';\nimport _ from 'lodash';\nconst initialValues = {\n    name: '',\n    options: [\n        {\n            name: '',\n            price: '',\n        },\n    ],\n};\nexport default function AddModifier() {\n    return (\n        <div className={classname(styles.container)}>\n            <div className={classname(styles.formTitle)}>\n                Add Modifier\n            </div>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={async (values) => {\n                    await new Promise((r) => setTimeout(r, 500));\n                    if((values.options[0].name || values.options[0].price) === ''){\n                        values.options.splice(0,1)\n                    }\n                    alert(JSON.stringify(values, null, 2));\n                }}\n            >\n                {({ values }) => (\n                    <Form>\n                        <div>\n                            <div className={classname(styles.formControl)}>\n                                <div>\n                                    <label htmlFor=\"name\" className={classname(styles.formLable)}>Modifier</label>\n                                </div>\n                                <div>\n                                    <Field\n                                        name=\"name\"\n                                        type=\"text\"\n                                        className={classname(styles.formInput)}\n                                    />\n                                </div>\n                                <ErrorMessage\n                                    name={\"name\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                />\n                            </div>\n                            <div>\n                                <div>\n                                    <h4>\n                                        Options\n                                    </h4>\n                                </div>\n                                <FieldArray name=\"options\">\n                                    {({ insert, remove, push, form }) => (\n                                        <div>\n                                            {values.options.length > 0 &&\n                                                values.options.map((option, index) => (\n                                                    <div className={classname(styles.horizontalContent)} key={index}>\n                                                        <div className={classname(styles.formControl)}>\n                                                            <div>\n                                                                <label className={classname(styles.formLable)} htmlFor={`options.${index}.name`}>Name</label>\n                                                            </div>\n                                                            <div>\n                                                                <Field\n                                                                    name={`options.${index}.name`}\n                                                                    type=\"text\"\n                                                                    className={classname(styles.formInput)}\n                                                                />\n                                                            </div>\n                                                            <ErrorMessage\n                                                                name={`options.${index}.name`}\n                                                                component=\"div\"\n                                                                className=\"field-error\"\n                                                            />\n                                                        </div>\n                                                        <div className={classname(styles.formControl)}>\n                                                            <div>\n                                                                <label className={classname(styles.formLable)} htmlFor={`options.${index}.price`}>Price</label>\n                                                            </div>\n                                                            <div>\n                                                                <Field\n                                                                    name={`options.${index}.price`}\n                                                                    type=\"number\"\n                                                                    step=\"0.01\"\n                                                                    className={classname(styles.formInput)}\n                                                                />\n                                                            </div>\n                                                            <ErrorMessage\n                                                                name={`options.${index}.price`}\n                                                                component=\"div\"\n                                                                className=\"field-error\"\n                                                            />\n                                                        </div>\n                                                        <div className={classname(styles.button_container)}>\n                                                            {index === 0 ? null :\n                                                                <div>\n                                                                    <button\n                                                                        type=\"button\"\n                                                                        className=\"secondary\"\n                                                                        onClick={() => remove(index)}\n                                                                        className={classname(styles.common_button)}\n                                                                    >\n                                                                        <img src=\"/assets/remove.svg\" height=\"20px\" width=\"20px\"/>\n                                                                    </button>\n                                                                </div>\n                                                            }\n                                                            {\n                                                                index !== 0 ? null :\n                                                                    <div className={classname(styles.buttonContainer)}>\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"secondary\"\n                                                                            onClick={() => insert(0, { name: '', price: '' })}\n                                                                            className={classname(styles.common_button)}\n                                                                        >\n                                                                            <img src=\"/assets/plus.svg\" height=\"20px\" width=\"20px\" />\n                                                                        </button>\n                                                                    </div>\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                        </div>\n                                    )}\n                                </FieldArray>\n                            </div>\n                        </div>\n                        <div className={classname(styles.saveButtonContainer)}>\n                            <button type=\"submit\" className={classname(styles.ctaButton)}>Save Option</button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Options/index.js",["135"],"import React from 'react'\nimport classname from 'classnames';\nimport styles from './Options.module.sass'\nimport isValid from 'utils/isValidImage';\nimport {useHistory} from 'react-router-dom'\nexport default function Options (){\n    const history = useHistory()\n    return (\n        <div>\n            <div className={classname(styles.home_top_bar)}>\n                <button onClick={() => history.push('/addOption')} className={classname(styles.home_button)}>\n                    Add Option\n                </button>\n            </div>\n        </div>\n    )\n}","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Modifiers/index.js",[],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/modules/options/constants.js",[],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Groups/index.js",[],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/views/Items/addItem.js",["136","137","138","139","140"],"/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/reducers.js",["141","142"],"import {combineReducers} from 'redux'\nimport optionReducer from 'modules/options/reducer';\n\nexport default function () {\n    return {\n        options: optionReducer\n    }\n}","/Users/manisharanga/dev/clients/upwork/echola/echola_menu_builder/src/modals/Groups/index.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"143","replacedBy":"147"},{"ruleId":"145","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":17,"column":25,"nodeType":"151","endLine":17,"endColumn":102},{"ruleId":"143","replacedBy":"152"},{"ruleId":"145","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":2,"column":25,"nodeType":"156","messageId":"157","endLine":2,"endColumn":33},{"ruleId":"154","severity":1,"message":"158","line":8,"column":12,"nodeType":"156","messageId":"157","endLine":8,"endColumn":21},{"ruleId":"143","replacedBy":"159"},{"ruleId":"145","replacedBy":"160"},{"ruleId":"154","severity":1,"message":"161","line":19,"column":7,"nodeType":"156","messageId":"157","endLine":19,"endColumn":21},{"ruleId":"162","severity":1,"message":"163","line":22,"column":1,"nodeType":"164","endLine":31,"endColumn":2},{"ruleId":"165","severity":1,"message":"166","line":22,"column":9,"nodeType":"167","messageId":"168","endLine":23,"endColumn":75},{"ruleId":"162","severity":1,"message":"169","line":9,"column":1,"nodeType":"164","endLine":70,"endColumn":2},{"ruleId":"154","severity":1,"message":"170","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":9},{"ruleId":"154","severity":1,"message":"171","line":17,"column":7,"nodeType":"156","messageId":"157","endLine":17,"endColumn":23},{"ruleId":"154","severity":1,"message":"172","line":25,"column":11,"nodeType":"156","messageId":"157","endLine":25,"endColumn":23},{"ruleId":"154","severity":1,"message":"170","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":9},{"ruleId":"154","severity":1,"message":"171","line":19,"column":7,"nodeType":"156","messageId":"157","endLine":19,"endColumn":23},{"ruleId":"154","severity":1,"message":"173","line":9,"column":11,"nodeType":"156","messageId":"157","endLine":9,"endColumn":22},{"ruleId":"154","severity":1,"message":"158","line":14,"column":15,"nodeType":"156","messageId":"157","endLine":14,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":30,"column":25,"nodeType":"151","endLine":30,"endColumn":91},{"ruleId":"154","severity":1,"message":"174","line":5,"column":13,"nodeType":"156","messageId":"157","endLine":5,"endColumn":16},{"ruleId":"154","severity":1,"message":"170","line":6,"column":8,"nodeType":"156","messageId":"157","endLine":6,"endColumn":9},{"ruleId":"175","severity":1,"message":"176","line":106,"column":73,"nodeType":"177","endLine":106,"endColumn":116},{"ruleId":"149","severity":1,"message":"150","line":108,"column":73,"nodeType":"151","endLine":108,"endColumn":131},{"ruleId":"175","severity":1,"message":"176","line":119,"column":77,"nodeType":"177","endLine":119,"endColumn":120},{"ruleId":"149","severity":1,"message":"150","line":121,"column":77,"nodeType":"151","endLine":121,"endColumn":134},{"ruleId":"154","severity":1,"message":"178","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":15},{"ruleId":"154","severity":1,"message":"171","line":26,"column":7,"nodeType":"156","messageId":"157","endLine":26,"endColumn":23},{"ruleId":"154","severity":1,"message":"179","line":39,"column":12,"nodeType":"156","messageId":"157","endLine":39,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":50,"column":25,"nodeType":"151","endLine":50,"endColumn":82},{"ruleId":"154","severity":1,"message":"180","line":60,"column":17,"nodeType":"156","messageId":"157","endLine":60,"endColumn":30},{"ruleId":"149","severity":1,"message":"150","line":67,"column":25,"nodeType":"151","endLine":67,"endColumn":82},{"ruleId":"154","severity":1,"message":"181","line":1,"column":9,"nodeType":"156","messageId":"157","endLine":1,"endColumn":24},{"ruleId":"162","severity":1,"message":"169","line":4,"column":1,"nodeType":"164","endLine":8,"endColumn":2},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],["182"],["183"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["182"],["183"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'component' is assigned a value but never used.",["182"],["183"],"'sagaMiddleware' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","Unexpected default export of anonymous function","'_' is defined but never used.","'validationSchema' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'currentPath' is assigned a value but never used.","'Yup' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'isValid' is defined but never used.","'nowOption' is assigned a value but never used.","'optionsToShow' is assigned a value but never used.","'combineReducers' is defined but never used.","no-global-assign","no-unsafe-negation"]