[{"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/index.js":"1","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/saga.js":"2","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/index.js":"3","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/service.js":"4","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/index.js":"5","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/addGroup.js":"6","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/constants.js":"7","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/utils.js":"8","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/actions.js":"9","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/reducer.js":"10","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/index.js":"11","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/actions.js":"12","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/constants.js":"13","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/saga.js":"14","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/addModifier.js":"15","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/table/index.js":"16","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/index.js":"17","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/sidebarRoutes.js":"18","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/routes.js":"19","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reportWebVitals.js":"20","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reducers.js":"21","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/saga.js":"22","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/saga.js":"23","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/service.js":"24","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/constants.js":"25","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/utils/normalize.js":"26","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/addItem.js":"27","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/selector.js":"28","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/orderTable/index.js":"29","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/index.js":"30","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/App.js":"31","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/sagas.js":"32","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/service.js":"33","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/selector.js":"34","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/reducer.js":"35","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/reducer.js":"36","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/selector.js":"37","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/selectors.js":"38","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/addOption.js":"39","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Pizza/index.js":"40","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/reducer.js":"41","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/actions.js":"42","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/Layouts/index.js":"43","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/createStore.js":"44","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/constants.js":"45","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/api.js":"46","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/service.js":"47","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/actions.js":"48"},{"size":501,"mtime":1617371187943,"results":"49","hashOfConfig":"50"},{"size":3701,"mtime":1618599920506,"results":"51","hashOfConfig":"50"},{"size":6139,"mtime":1618501504787,"results":"52","hashOfConfig":"53"},{"size":897,"mtime":1617371188023,"results":"54","hashOfConfig":"53"},{"size":4623,"mtime":1618502740081,"results":"55","hashOfConfig":"50"},{"size":13314,"mtime":1617371188067,"results":"56","hashOfConfig":"53"},{"size":1463,"mtime":1617371188011,"results":"57","hashOfConfig":"50"},{"size":335,"mtime":1617371188103,"results":"58","hashOfConfig":"50"},{"size":817,"mtime":1617371187963,"results":"59","hashOfConfig":"53"},{"size":2769,"mtime":1617494937575,"results":"60","hashOfConfig":"50"},{"size":5342,"mtime":1618502142490,"results":"61","hashOfConfig":"53"},{"size":878,"mtime":1617371208896,"results":"62","hashOfConfig":"53"},{"size":1194,"mtime":1617371226520,"results":"63","hashOfConfig":"50"},{"size":4011,"mtime":1618599818216,"results":"64","hashOfConfig":"50"},{"size":10135,"mtime":1617372063099,"results":"65","hashOfConfig":"53"},{"size":8098,"mtime":1618501172516,"results":"66","hashOfConfig":"50"},{"size":1184,"mtime":1617373145952,"results":"67","hashOfConfig":"53"},{"size":1636,"mtime":1617819223786,"results":"68","hashOfConfig":"50"},{"size":1968,"mtime":1617819217226,"results":"69","hashOfConfig":"53"},{"size":362,"mtime":1613558109347,"results":"70","hashOfConfig":"53"},{"size":423,"mtime":1618596741443,"results":"71","hashOfConfig":"50"},{"size":3738,"mtime":1618599548300,"results":"72","hashOfConfig":"50"},{"size":3660,"mtime":1618599957060,"results":"73","hashOfConfig":"50"},{"size":821,"mtime":1616526875447,"results":"74","hashOfConfig":"53"},{"size":1562,"mtime":1616526875447,"results":"75","hashOfConfig":"53"},{"size":136,"mtime":1613558109347,"results":"76","hashOfConfig":"50"},{"size":14928,"mtime":1617819533798,"results":"77","hashOfConfig":"50"},{"size":1012,"mtime":1617371188007,"results":"78","hashOfConfig":"53"},{"size":4596,"mtime":1613727067867,"results":"79","hashOfConfig":"53"},{"size":4008,"mtime":1618502796429,"results":"80","hashOfConfig":"53"},{"size":1082,"mtime":1618596719904,"results":"81","hashOfConfig":"50"},{"size":334,"mtime":1616526875451,"results":"82","hashOfConfig":"53"},{"size":846,"mtime":1616526875451,"results":"83","hashOfConfig":"53"},{"size":1254,"mtime":1617371188011,"results":"84","hashOfConfig":"53"},{"size":2775,"mtime":1617520224082,"results":"85","hashOfConfig":"53"},{"size":2434,"mtime":1617531714733,"results":"86","hashOfConfig":"53"},{"size":1497,"mtime":1617490945074,"results":"87","hashOfConfig":"53"},{"size":1011,"mtime":1617494684933,"results":"88","hashOfConfig":"50"},{"size":11849,"mtime":1618513652139,"results":"89","hashOfConfig":"53"},{"size":1064,"mtime":1613558109343,"results":"90","hashOfConfig":"50"},{"size":2444,"mtime":1617818195640,"results":"91","hashOfConfig":"53"},{"size":812,"mtime":1616526875447,"results":"92","hashOfConfig":"53"},{"size":367,"mtime":1615192430968,"results":"93","hashOfConfig":"53"},{"size":1135,"mtime":1618580959869,"results":"94","hashOfConfig":"50"},{"size":1306,"mtime":1616526875447,"results":"95","hashOfConfig":"53"},{"size":72,"mtime":1616526875415,"results":"96","hashOfConfig":"50"},{"size":930,"mtime":1617371188011,"results":"97","hashOfConfig":"53"},{"size":901,"mtime":1617371188011,"results":"98","hashOfConfig":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sy1zlp",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},"ds2j73",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"115"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/index.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/index.js",["213","214","215","216","217","218","219"],"import React from \"react\";\nimport classname from \"classnames\";\nimport styles from \"./Groups.module.sass\";\nimport Modal from \"react-modal\";\nimport Table from \"components/table\";\nimport AddGroup from \"views/Groups/addGroup\";\nimport  { isEmpty, map, assign } from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport { FaTrash, FaEdit, FaWindowClose } from \"react-icons/fa\";\nimport { normalizeText } from \"utils/normalize\";\nimport {listGroup, removeGroup, selectGroup} from 'modules/groups/actions'\nimport { loadingSelector, errorSelector, listSelector, messageSelector } from 'modules/groups/selector'\nimport {listOptions} from 'modules/options/actions'\nimport {loadingSelector as optionLoading, optionsSelector, errorSelector as optionError, messageSelector as optionsInfo} from 'modules/options/selector'\nimport {useDispatch, useSelector} from 'react-redux'\nconst groupColumns = [\n  {\n    Header: \"Group\",\n    accessor: d => normalizeText(d.name) || \"-\",\n    width: 50,\n  },\n  {\n    Header: \"Display Order\",\n    accessor: d => d.order || \"-\",\n  },\n  {\n    Header: \"Price\",\n    accessor: d => d.price || 0,\n  },\n  {\n    Header: \"Max Allowed\",\n    accessor: d => d.max_allowed || 0,\n  },\n  {\n    Header: \"Min Required\",\n    accessor: d => d.min_required || 0,\n  },\n  {\n    Header: \"Options\",\n    accessor: d => {\n      let names = map(d.options, _ => normalizeText(_.name))\n      return names.join(\", \") || \"-\"\n    }\n  },\n  {\n    Header: \"Actions\",\n    accessor: \"actions\",\n  },\n];\nconst columns = [\n  {\n    Header: \"Image\",\n    accessor: \"image\",\n  },\n  {\n    Header: \"Name\",\n    accessor: \"name\",\n  },\n  {\n    Header: \"Price\",\n    accessor: \"price\",\n  },\n  {\n    Header: \"Type\",\n    accessor: \"type\",\n  },\n];\nexport default function GroupsTable() {\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const groups = useSelector(listSelector)\n  const message = useSelector(messageSelector)\n  const options = useSelector(optionsSelector)\n  const loading = useSelector(loadingSelector)\n  const error = useSelector(errorSelector)\n  const options_loading = useSelector(optionLoading)\n  const option_error = useSelector(optionError)\n  const options_message = useSelector(optionsInfo)\n  const [selected, setSelected] = React.useState([]);\n  const [form, setForm] = React.useState();\n  const [open, setOpen] = React.useState(false);\n  const [step1, setSetp1] = React.useState(false);\n  React.useEffect(() => {\n    if(isEmpty(message) && isEmpty(groups)) {\n      dispatch(listGroup())\n    }\n  }, [dispatch, groups])\n  React.useEffect(() => {\n    if(isEmpty(optionsInfo) && isEmpty(options)) {\n      dispatch(listOptions())\n    }\n  }, [dispatch, groups])\n  const customStyles = {\n    content: {\n      margin: \"auto\",\n      height: \"80%\",\n      width: \"100%\",\n      maxWidth: \"600px\",\n      overflow: \"auto\",\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      bottom: \"auto\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n  const handleEdit = group => {\n    delete group.actions\n    dispatch(selectGroup(group))\n    history.push(\"/addGroup\")\n  }\n  const handleRemove = group => {\n    const confirm = window.confirm(`You are about to remove ${group.name}. This is not reversable`)\n    if(confirm) {\n      dispatch(removeGroup(group.id))\n    }\n  }\n  map(groups, (option, i) =>\n    assign(option, {\n      actions: (\n        <div style={{ display: \"flex\" }} key={i}>\n          <div style={{ padding: \"0 5px\" }}>\n            <button onClick={() => handleEdit(option)} className=\"transparentButton\">\n              <FaEdit />\n            </button>\n          </div>\n          <div>\n            <button onClick={() => handleRemove(option)} className=\"transparentButton\">\n              <FaTrash />\n            </button>\n          </div>\n        </div>\n      ),\n    })\n  );\n  return (\n    <div className={classname(styles.tableContainer)}>\n      <Modal\n        isOpen={open}\n        onRequestClose={() => {\n          setOpen(false);\n          setSetp1(false);\n        }}\n        style={customStyles}\n      >\n        <div>\n\n                    <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                        <button onClick={() => setOpen(false)} style={{ cursor: 'pointer' }} className={classname(styles.transparent)}>\n                            <FaWindowClose />\n                        </button>\n                    </div>\n        {step1 && (\n          <div>\n            <button onClick={() => setSetp1(false)}>Back</button>\n          </div>\n        )}\n        {!step1 ? (\n          <AddGroup\n            next={setSetp1}\n            formMethod={setForm}\n            currentForm={form}\n            setOpen={setOpen}\n          />\n        ) : (\n          <div>\n            <Table\n              updateSelectItems={setSelected}\n              columns={columns}\n              data={options}\n            />\n            <div className={classname(styles.buttonGroup)}>\n              <div>\n                <button className={classname(styles.ctaButton)}>\n                  New Option\n                </button>\n              </div>\n              <div>\n                <button\n                  className={classname(styles.ctaButton)}\n                  style={{ width: \"150px\" }}\n                  onClick={() =>\n                    history.push(\"/addGroup\", { currentForm: form, selected })\n                  }\n                >\n                  Add options to group\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n        </div>\n      </Modal>\n      <div>\n        <Table\n          updateSelectItems={setSelected}\n          columns={groupColumns}\n          data={groups}\n        />\n        {\n          !isEmpty(message) && \n          <div className=\"UcenterWithMargin IamInfo\">\n           * Add Groups to view in this table \n          </div>\n        }\n      </div>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", margin: \"20px\" }}\n      >\n        <button\n          onClick={() => setOpen(true)}\n          className={classname(styles.ctaButton)}\n        >\n          Add Group\n        </button>\n      </div>\n    </div>\n  );\n}\n",["220","221"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/service.js",[],["222","223"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/index.js",["224","225","226","227","228","229","230","231","232","233"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/addGroup.js",["234","235","236","237","238","239"],"import React from \"react\";\nimport classname from \"classnames\";\nimport styles from \"./Groups.module.sass\";\nimport _, { isEmpty } from \"lodash\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport { normalizeText as normalize } from \"utils/normalize\";\nimport OrderTable from \"components/orderTable\";\nimport Table from \"components/table\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addGroup, updateGroup, removeSelected } from \"modules/groups/actions\";\nimport {\n  loadingSelector,\n  errorSelector,\n  selectedSelector,\n} from \"modules/groups/selector\";\nimport { listOptions } from \"modules/options/actions\";\nimport {\n  loadingSelector as optionLoading,\n  optionsSelector,\n  errorSelector as optionError,\n} from \"modules/options/selector\";\nimport { ClockLoader } from \"react-spinners\";\nconst columns = [\n  {\n    Header: \"Image\",\n    accessor: \"image\",\n  },\n  {\n    Header: \"Name\",\n    accessor: (d) => normalize(d.name),\n  },\n  {\n    Header: \"Price\",\n    accessor: (d) => d.price || 0,\n  },\n  {\n    Header: \"Type\",\n    accessor: (d) => normalize(d.type),\n  },\n];\nconst initialValues = {\n  name: \"\",\n  description: \"\",\n  price: 2,\n  options: [],\n  min_required: 1,\n  max_allowed: 1,\n  order: 100,\n};\nconst validationSchema = yup.object({\n  name: yup.string().required(\"A valid option must have name\"),\n  description: yup.string().optional(),\n  image_url: yup.string().optional(),\n  price: yup.number().required(\"A valid option must have price\"),\n  type: yup.string().optional(),\n});\nexport default function AddGroup(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const options = useSelector(optionsSelector);\n  const loading = useSelector(loadingSelector);\n  const error = useSelector(errorSelector);\n  const option_loding = useSelector(optionLoading);\n  const option_error = useSelector(optionError);\n  const nowGroup = useSelector(selectedSelector);\n  const [step1, setStep1] = React.useState(false);\n  const [selected, setSelected] = React.useState(\n    !isEmpty(nowGroup) ? nowGroup.options : []\n  );\n  const [formValues, setForm] = React.useState();\n  const [nowArray, setNowArray] = React.useState();\n  const [showOrder, setShowOrder] = React.useState(false);\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n  if (isEmpty(options)) {\n    dispatch(listOptions());\n  }\n  const handleSaveItem = () => {\n    const group = _.assign({}, formValues, {\n      options: nowArray.map((i) => i.original.id),\n    });\n    if (!isEmpty(nowGroup)) {\n      dispatch(updateGroup(group));\n    } else {\n      dispatch(addGroup(group));\n    }\n    setForm(\"\");\n    setNowArray([]);\n    setSelected([]);\n    if (props.setOpen) {\n      props.setOpen(false);\n    }\n  };\n  React.useEffect(() => {\n    return () => dispatch(removeSelected());\n  }, [nowGroup]);\n  return (\n    <div>\n      {loading ? (\n        <div className=\"centerMe\">\n          <ClockLoader className=\"IamLoader\" />\n        </div>\n      ) : (\n        <div className={classname(styles.container)} style={{ flex: 1 }}>\n          {!step1 && (\n            <div>\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <p style={{ fontSize: \"1.5rem\", color: \"red\" }}>\n                  {!isEmpty(nowGroup) ? \"Update Group\" : \"Add Group\"}\n                </p>\n              </div>\n              <Formik\n                initialValues={\n                  !isEmpty(nowGroup)\n                    ? !isEmpty(formValues)\n                      ? formValues\n                      : nowGroup\n                    : _.merge(initialValues, formValues)\n                }\n                enableReinitialize\n                validationSchema={validationSchema}\n                onSubmit={async (values) => {\n                  setForm(values);\n                  setStep1(true);\n                  setShowOrder(true);\n                }}\n                enableReinitialize\n              >\n                {({ values }) => (\n                  <Form>\n                    <div>\n                      <div className={classname(styles.formControl)}>\n                        <div className={classname(styles.labelContainer)}>\n                          <label\n                            htmlFor=\"name\"\n                            className={classname(\n                              styles.formLabel,\n                              styles.labelContainer\n                            )}\n                          >\n                            Group\n                          </label>\n                        </div>\n                        <div>\n                          <Field\n                            name=\"name\"\n                            type=\"text\"\n                            className={classname(styles.formInput)}\n                          />\n                          <ErrorMessage\n                            name={\"name\"}\n                            component=\"div\"\n                            style={{ color: \"red\" }}\n                          />\n                        </div>\n                      </div>\n                      <div className={classname(styles.formControl)}>\n                        <div className={classname(styles.labelContainer)}>\n                          <label\n                            htmlFor=\"price\"\n                            className={classname(\n                              styles.formLabel,\n                              styles.labelContainer\n                            )}\n                          >\n                            Price\n                          </label>\n                        </div>\n                        <div>\n                          <Field\n                            name=\"price\"\n                            type=\"number\"\n                            className={classname(styles.formInput)}\n                            min={0}\n                            step={0.01}\n                          />\n                          <ErrorMessage\n                            name={\"price\"}\n                            component=\"div\"\n                            style={{ color: \"red\" }}\n                          />\n                        </div>\n                      </div>\n                      <div className={classname(styles.formControl)}>\n                        <div className={classname(styles.labelContainer)}>\n                          <label\n                            htmlFor=\"min_requied\"\n                            className={classname(\n                              styles.formLabel,\n                              styles.labelContainer\n                            )}\n                          >\n                            Min Required\n                          </label>\n                        </div>\n                        <div>\n                          <Field\n                            name=\"min_required\"\n                            type=\"number\"\n                            className={classname(styles.formInput)}\n                          />\n                        </div>\n                        <ErrorMessage\n                          name={\"min_required\"}\n                          component=\"div\"\n                          className=\"field-error\"\n                        />\n                      </div>\n                      <div className={classname(styles.formControl)}>\n                        <div className={classname(styles.labelContainer)}>\n                          <label\n                            htmlFor=\"max_allowed\"\n                            className={classname(\n                              styles.formLabel,\n                              styles.labelContainer\n                            )}\n                          >\n                            Max Allowed\n                          </label>\n                        </div>\n                        <div>\n                          <Field\n                            name=\"max_allowed\"\n                            type=\"number\"\n                            className={classname(styles.formInput)}\n                          />\n                        </div>\n                        <ErrorMessage\n                          name={\"max_allowed\"}\n                          component=\"div\"\n                          className=\"field-error\"\n                        />\n                      </div>\n                      <div className={classname(styles.formControl)}>\n                        <div className={classname(styles.labelContainer)}>\n                          <label\n                            htmlFor=\"order\"\n                            className={classname(\n                              styles.formLabel,\n                              styles.labelContainer\n                            )}\n                          >\n                            Display order\n                          </label>\n                        </div>\n                        <div>\n                          <Field\n                            name=\"order\"\n                            type=\"number\"\n                            className={classname(styles.formInput)}\n                          />\n                        </div>\n                        <ErrorMessage\n                          name={\"order\"}\n                          component=\"div\"\n                          className=\"field-error\"\n                        />\n                      </div>\n                      <div className={classname(styles.titleWithNoBox)}>\n                        <h4>Description</h4>\n                      </div>\n                      <div className={classname(styles.descriptionBox)}>\n                        <div>\n                          <Field\n                            as=\"textarea\"\n                            name=\"description\"\n                            type=\"text\"\n                            className={classname(styles.descriptionContainer)}\n                          />\n                        </div>\n                        <ErrorMessage\n                          name={\"description\"}\n                          component=\"div\"\n                          className=\"field-error\"\n                        />\n                      </div>\n                      <div className={classname(styles.saveButtonContainer)}>\n                        <button\n                          type=\"submit\"\n                          className={classname(styles.ctaButton)}\n                        >\n                          Choose Options\n                        </button>\n                      </div>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n            </div>\n          )}\n          {step1 && (\n            <div className={classname(styles.tableContainer)}>\n              <div className={classname(styles.tableFlex)}>\n                <Table\n                  title={\"Options\"}\n                  columns={columns}\n                  data={options}\n                  updateSelectItems={setSelected}\n                  withCheckBox={true}\n                  noAction={true}\n                  preSelected={selected}\n                />\n              </div>\n              <div>\n                <div>\n                  <button\n                    className={classname(styles.button200)}\n                    onClick={() => history.push(\"/addOption\")}\n                  >\n                    Add Option\n                  </button>\n                </div>\n              </div>\n              <div className={classname(styles.between)}>\n                <div>\n                  <button\n                    onClick={() => setStep1(false)}\n                    className={classname(styles.ctaButton)}\n                  >\n                    Back\n                  </button>\n                </div>\n                <div>\n                  <button\n                    disabled={!selected.length}\n                    className={classname(styles.ctaButton)}\n                    onClick={() => (selected.length ? setStep1(false) : null)}\n                  >\n                    Save\n                  </button>\n                  <div style={{ fontSize: \"10px\" }}>\n                    {!selected.length && (\n                      <p>\n                        <span style={{ color: \"red\" }}>*</span> Select alteast 1\n                        option\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n      {selected.length && !step1 && showOrder ? (\n        <div style={{ flex: 1 }}>\n          <div>\n            <OrderTable\n              columns={columns}\n              data={selected}\n              updateCurrentRows={setNowArray}\n            />\n          </div>\n          <div\n            style={{\n              margin: \"10px auto\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <button\n              className={styles.ctaButton}\n              onClick={() => {\n                handleSaveItem();\n              }}\n            >\n              Save Group\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n",["240","241"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/utils.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/actions.js",[],["242","243"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/reducer.js",["244","245"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/index.js",["246","247"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/actions.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/addModifier.js",["248","249"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/table/index.js",["250","251","252","253","254","255","256"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/index.js",["257"],"import React from 'react';\nimport styles from './Sidebar.module.sass';\nimport classname from 'classnames';\nimport default_img from './default.jpg';\nimport { normalizeText } from 'utils/normalize'\nimport SidebarRoutes from './sidebarRoutes'\nexport default function Sidebar(props) {\n    const [activeRoute, setActive] = React.useState('/items')\n    const {\n        title,\n        img\n    } = props;\n    return (\n        <div className={classname(styles.main)}>\n            <div className={classname(styles.sidebar_header)}>\n                <div class={classname(styles.titleBox)}>\n                    <div className={classname(styles.avatar)}>\n                        <img src={img ? img : default_img} className={classname(styles.avatarImg)} />\n                    </div>\n                    <div className={classname(styles.title)}>\n                        <h1>{title ? normalizeText(title) : normalizeText('echola pizza')}</h1>\n                    </div>\n                </div>\n            </div>\n            <div className={classname(styles.sidebar_content)}>\n                <SidebarRoutes activeRoute={activeRoute} setActive={setActive}/>\n            </div>\n        </div>\n    )\n}",["258","259"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/sidebarRoutes.js",["260","261","262","263","264"],"import routes from 'routes';\nimport { map, sortBy } from 'lodash'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport classname from 'classnames';\nimport styles from './Sidebar.module.sass'\nimport React from 'react'\nimport {FaObjectGroup, FaSitemap, FaPizzaSlice, FaDiceD6 } from 'react-icons/fa'\nexport default function SidebarRoutes(props) {\n    const {activeRoute, setActive} = props\n    const history = useHistory();\n    const location = useLocation()\n    const sortedRoutes = sortBy(routes(), [\"num\"]);\n    const handleClick = (route) => {\n        if (!route) return null;\n        setActive(route.path)\n    }\n    React.useEffect(() => {\n        history.push(activeRoute)\n    }, \n    [activeRoute])\n    return (\n        <div className={classname(styles.nav_links)}>\n            {map(sortedRoutes, route =>\n                {\n                    if(!route.icon) return null\n                return (\n                <div \n                    className={classname(styles.link_container, styles.isALinkContainer, {[styles.isActive]: \"/\" + route.name.toLowerCase() === location.pathname ? true : false})}\n                    key={route.name} \n                    onClick={() => handleClick(route)}\n                >\n                    <div className={classname(styles.avatar_container)}>\n                        {route.icon}\n                    </div>\n                    <div className={classname(styles.link_text)}>\n                        <p>\n                            {route.name}\n                        </p>\n                    </div>\n                </div>\n                )}\n            )}\n        </div>\n    )\n}\n",["265","266"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/routes.js",["267"],"import AddOptions from 'views/Options/addOption'\nimport OptionsList from 'views/Options'\nimport Groups from 'views/Groups';\nimport AddGroup from 'views/Groups/addGroup'\nimport ListItems from 'views/Items';\nimport AddItem from 'views/Items/addItem';\nimport Modifiers from 'views/Modifiers'\nimport AddModifier from 'views/Modifiers/addModifier';\nimport { FaObjectGroup, FaSitemap, FaPizzaSlice, FaDiceD6 } from 'react-icons/fa'\nexport default function () {\n    return [\n        {\n            path: \"/options\",\n            name: \"Options\",\n            icon: (<div><FaSitemap/></div>),\n            component: OptionsList,\n            layout: \"/pizza\",\n\t    num: 2\n        },\n        {\n            path: \"/addOption\",\n            name: \"Add option\",\n            icon: \"\",\n            component: AddOptions,\n            layout: \"/pizza\",\n        },\n        {\n            path: '/modifiers',\n            name: 'Modifiers',\n            icon: (<div><FaDiceD6/></div>),\n            component: Modifiers,\n            layout: \"/pizza\",\n\t    num: 1\n        },\n        {\n            path: \"/addModifier\",\n            name: \"Add Modifier\",\n            icon: \"\",\n            component: AddModifier,\n            layout: \"/pizza\"\n        },\n        {\n            path: '/items',\n            name: 'Items',\n            icon: (<div><FaPizzaSlice/></div>),\n            component: ListItems,\n            layout: \"/pizza\",\n\t    num: 4\n        },\n        {\n            path: \"/addItem\",\n            name: \"Add Item\",\n            icon: \"\",\n            component: AddItem,\n            layout: \"/pizza\"\n        }\n        ,{\n            path: '/groups',\n            name: 'Groups',\n            icon: (<div><FaObjectGroup/></div>),\n            component: Groups,\n            layout: \"/pizza\",\n\t    num: 3\n        },\n        {\n            path: \"/addgroup\",\n            name: \"add option group\",\n            icon: \"\",\n            component: AddGroup,\n            layout: \"/pizza\"\n        }\n    ]\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reportWebVitals.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reducers.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/saga.js",["268"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/saga.js",["269"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/utils/normalize.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/addItem.js",["270","271","272","273","274","275","276","277","278","279","280","281"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/selector.js",["282","283"],"import {createSelector} from 'reselect'\nimport {isImmutable} from 'immutable'\nimport _, { create } from 'lodash'\n\nconst groups = state => state.groups\n\nexport const messageSelector = createSelector(\n    groups,\n    data => data.get('message')\n)\nexport const loadingSelector = createSelector(\n    groups, \n    data => data.get('loading')\n)\n\nexport const errorSelector = createSelector(\n    groups,\n    data => {\n        let error = data.get('error')\n        if (isImmutable(error)){\n            return error.toJS()\n        }\n        return error\n    }\n)\n\nexport const listSelector = createSelector(\n    groups,\n    data => {\n        let groups = data.get('groups')\n        if(isImmutable(groups)){\n            return groups.toJS()\n        }\n        return []\n    }\n)\n\nexport const selectedSelector = createSelector(\n    groups, \n    data => {\n        let selected = data.get('selected')\n        if(selected.size > 0 && isImmutable(selected)){\n            return selected.toJS()\n        }\n        return []\n    }\n)","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/orderTable/index.js",["284","285","286","287","288"],"import React from 'react'\nimport { useTable } from 'react-table'\nimport { DndProvider, useDrag, useDrop } from 'react-dnd'\nimport {HTML5Backend} from 'react-dnd-html5-backend'\nimport update from 'immutability-helper'\nimport MaUTable from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport {FaHandPaper} from 'react-icons/fa'\nimport {sortedOptions} from 'modules/options/actions'\nimport {nowSortedArray} from 'modules/options/selector';\nimport {useDispatch, useSelector} from 'react-redux'\nfunction Table({ columns, data, updateCurrentRows }){\n  const [records, setRecords] = React.useState(data)\n  const getRowId = React.useCallback(row => {\n    return row.name\n  }, [])\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    data: records,\n    columns,\n    getRowId,\n  })\n  React.useEffect(() => {updateCurrentRows(rows)}, [rows])\n  const moveRow = (dragIndex, hoverIndex) => {\n    const dragRecord = records[dragIndex]\n    setRecords(\n      update(records, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, dragRecord],\n        ],\n      })\n    )\n  }\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <MaUTable {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map(headerGroup => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n              <TableHead/>\n              {headerGroup.headers.map(column => (\n                <TableCell {...column.getHeaderProps()}>{column.render('Header')}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map(\n            (row, index) =>\n            {\n            return   prepareRow(row) || (\n                <Row\n                  index={index}\n                  row={row}\n                  moveRow={moveRow}\n                  {...row.getRowProps()}\n                />\n              )\n            }\n          )}\n        </TableBody>\n      </MaUTable>\n    </DndProvider>\n  )\n}\n\nconst DND_ITEM_TYPE = 'row'\n\nconst Row = ({ row, index, moveRow }) => {\n  const dropRef = React.useRef(null)\n  const dragRef = React.useRef(null)\n\n  const [, drop] = useDrop({\n    accept: DND_ITEM_TYPE,\n    hover(item, monitor) {\n      if (!dropRef.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = dropRef.current.getBoundingClientRect()\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      // Time to actually perform the action\n      moveRow(dragIndex, hoverIndex)\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex\n    },\n  })\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    item: { type: DND_ITEM_TYPE, index },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n\n  const opacity = isDragging ? 0 : 1\n\n  preview(drop(dropRef))\n  drag(dragRef)\n\n  return (\n    <TableRow ref={dropRef} style={{ opacity }}>\n      <TableCell ref={dragRef}><FaHandPaper/></TableCell>\n      {row.cells.map(cell => {\n        return <TableCell {...cell.getCellProps()}>{cell.render('Cell')}</TableCell>\n      })}\n    </TableRow>\n  )\n}\n\nconst OrderTable = ({columns, data, updateCurrentRows}) => {\n  return (\n      <Table columns={columns} data={data} updateCurrentRows={updateCurrentRows}/>\n  )\n}\n\nexport default OrderTable","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/index.js",["289","290","291","292","293","294","295"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/App.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/sagas.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/selector.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/reducer.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/reducer.js",["296"],"import {fromJS, List, Map} from 'immutable';\nimport * as Actions from './constants';\nimport {isEmpty} from 'lodash'\nconst initState = fromJS({\n    loading: false,\n    error: '',\n    options: List(),\n    selected: List(),\n    optionToEdit: '',\n    sortedOptions: List(),\n    nowOption: Map(),\n    message: ''\n})\n\nexport default function optionReducer(state=initState, action) {\n    const {type, payload, error} = action\n    switch (type) {\n        case Actions.STATE_LOADING:\n            return state.set('loading', !state.get('loading'))\n        //add\n        case Actions.ADD_OPTION:\n            return state.set('loading', true).set('error', initState.get('error'))\n        case Actions.ADD_OPTION_SUCCESS:\n            return state.set('loading', false).set('error', initState.get('error')) \n        case Actions.ADD_OPTION_SUCCESS:\n            return state.set('loading', false).set('error', fromJS(error))\n        //remove\n        case Actions.REMOVE_OPTION:\n            return state.set('loading', true).set('error', initState.get('error'));\n        case Actions.REMOVE_OPTION_SUCCESS:\n            return state.set('loading', false)\n        case Actions.REMOVE_OPTION_ERROR:\n            return state.set('loading', false).set('error', fromJS(error))\n        //update\n        case Actions.UPDATE_OPTION:\n            return state.set('loading', true).set('error', initState.get('error'));\n        case Actions.UPDATE_OPTION_SUCCESS:\n            return state.set('loading', false)\n        case Actions.UPDATE_OPTION_ERROR:\n            return state.set('loading', false).set('error', fromJS(error))\n        //list\n        case Actions.LIST_OPTIONS:\n            return state.set('loading', true).set('error', initState.get('error'));\n        case Actions.LIST_OPTIONS_SUCCESS:\n             {\n\t\t     if(isEmpty(payload)) {\n\t\t\t     return state.set('loading', false).set('error', '').set('message', 'Add options to view')\n\t\t     }\n\t\t     else return state.set('loading', false).set('options', fromJS(payload)).set('message', '')\n\t     }\n        case Actions.LIST_OPTIONS_ERROR:\n            return state.set('loading', false).set('error', fromJS(error))\n        // set and remove option\n        case Actions.SET_SELECTED:\n            return state.set('selected', fromJS(payload))\n        case Actions.REMOVE_SELECTED:\n            return state.set('selected', initState.get('selected'))\n        default:\n            return state\n    } \n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/selector.js",["297"],"import {createSelector} from 'reselect'\nimport {isImmutable} from 'immutable'\nimport _ from 'lodash';\n\nconst options = state => state.options;\n\nexport const loadingSelector = createSelector(\n    options, \n    data => data.get('loading')\n)\n\nexport const errorSelector = createSelector(\n    options, \n    data => {\n        var error = data.get('error')\n        if(isImmutable(error)) {\n            return error.toJS()\n        }\n        else return error ? error : ''\n    }\n)\n\n export const optionsSelector= createSelector(\n     options,\n     data => {\n         var list = data.get('options')\n         if (isImmutable(list)) {\n             return list.toJS()\n         }\n         else return [] \n     }\n )\n\n export const selectedOptionsSelector = createSelector(\n     options, \n     data => {\n         var list = data.get('selected')\n         if(isImmutable(list)){\n             return list.toJS()\n         }\n         return []\n     }\n )\n\n export const nowOptionSelector = createSelector(\n     options,\n     data => {\n         var option = data.get('optionToEdit')\n         if(isImmutable(option)){\n             return option.toJS()\n         }\n         return {}\n     }\n )\n\n export const nowSortedArray = createSelector(\n     options, \n     data => {\n         var sorted = data.get('sortedOptions');\n         if (sorted.size > 0) {\n             return sorted.toJS();\n         }\n         else return []\n     }\n )\n\nexport const messageSelector = createSelector(\n\toptions,\n\tdata => data.get('message')\n)\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/selectors.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/addOption.js",["298","299","300","301"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classname from \"classnames\";\nimport styles from \"./Options.module.sass\";\nimport { isEmpty, merge, map, assign } from \"lodash\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport Table from \"components/table\";\nimport OrderTable from \"components/orderTable\";\nimport { normalizeText as normalize } from \"utils/normalize\";\nimport {\n  addOption,\n  updateOption,\n  removeSelected,\n} from \"modules/options/actions\";\nimport {\n  loadingSelector,\n  selectedOptionsSelector,\n} from \"modules/options/selector\";\nimport {\n  listSelector,\n  loadingSelector as modLoad,\n  errorSelector as modErr,\n  messageSelector as modifierMessageSelector,\n} from \"modules/modifiers/selectors\";\nimport { listModfiers } from \"modules/modifiers/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nconst initialValues = {\n  name: \"\",\n  description: \"\",\n  image_url: \"\",\n  price: \"\",\n  type: \"\",\n  modifiers: [],\n};\nconst validationSchema = yup.object({\n  name: yup.string().required(\"A valid option must have name\"),\n  description: yup.string().optional(),\n  price: yup.number().required(\"A valid option must have price\"),\n  type: yup.string().optional(),\n});\nconst columns = [\n  {\n    Header: \"Modifier\",\n    accessor: (d) => normalize(d.name),\n  },\n  {\n    Header: \"Options\",\n    accessor: \"options\",\n    Cell: (row) => {\n      return map(row.value, (r) => (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <div style={{ display: \"grid\", gridTemplateColumns: \"100px 100px\" }}>\n            <div style={{ padding: \"0 5px\" }}>{normalize(r.name)}</div>\n            <div>{parseFloat(r.price).toFixed(2)}</div>\n          </div>\n        </div>\n      ));\n    },\n  },\n];\nexport default function AddOption(props) {\n  const dispatch = useDispatch();\n  const modifiers = useSelector(listSelector);\n  const modifierMessage = useSelector(modifierMessageSelector);\n  const mod_loading = useSelector(modLoad);\n  const nowOption = useSelector(selectedOptionsSelector);\n  const [step1, setStep1] = React.useState(false);\n  const [selected, setSelected] = React.useState(nowOption.modifiers || []);\n  const [formValues, setForm] = React.useState();\n  const [nowArray, setNowArray] = React.useState([]);\n  const [showSelected, setShow] = React.useState(false);\n  const history = useHistory();\n  const handleSaveItem = () => {\n    if (props.setOpen) {\n      props.setOpen(false);\n    }\n    setStep1(false);\n    const option = assign({}, formValues, {\n      modifiers: nowArray.map((_) => _.original.id),\n    });\n    if (!isEmpty(nowOption)) {\n      delete nowOption.modifiers;\n      dispatch(updateOption(option));\n    } else {\n      dispatch(addOption(option));\n    }\n    setForm(\"\");\n    setSelected([]);\n    setNowArray([]);\n  };\n  React.useEffect(() => {\n    if (isEmpty(modifierMessage) && isEmpty(modifiers)) {\n      dispatch(listModfiers());\n    }\n    return () => dispatch(removeSelected());\n  }, [nowOption, dispatch]);\n  return (\n    <div className={classname(styles.container)}>\n      {!step1 && (\n        <>\n          <div style={{ dispay: \"flex\", justifyContent: \"center\" }}>\n            <p style={{ fontSize: \"1.5rem\", color: \"red\" }}>\n              {!isEmpty(nowOption) ? \"Update Option\" : \"Add Option\"}\n            </p>\n          </div>\n          <Formik\n            initialValues={\n              !isEmpty(nowOption)\n                ? !isEmpty(formValues)\n                  ? formValues\n                  : nowOption\n                : merge(initialValues, formValues)\n            }\n            validationSchema={validationSchema}\n            onSubmit={(values) => {\n              setForm(values);\n              setStep1(true);\n              setShow(true);\n            }}\n            enableReinitialize\n          >\n            {({ values, isValid }) => (\n              <Form>\n                <div>\n                  <div className={classname(styles.formControl)}>\n                    <div className={classname(styles.labelContainer)}>\n                      <label\n                        htmlFor=\"name\"\n                        className={classname(\n                          styles.formLabel,\n                          styles.labelContainer\n                        )}\n                      >\n                        Option\n                      </label>\n                    </div>\n                    <div>\n                      <Field\n                        name=\"name\"\n                        type=\"text\"\n                        className={classname(styles.formInput)}\n                        autoFocus={true}\n                      />\n                      <ErrorMessage\n                        style={{ color: \"red\" }}\n                        name={\"name\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                  </div>\n                  <div className={classname(styles.formControl)}>\n                    <div className={classname(styles.labelContainer)}>\n                      <label\n                        htmlFor=\"price\"\n                        className={classname(\n                          styles.formLabel,\n                          styles.labelContainer\n                        )}\n                      >\n                        Price\n                      </label>\n                    </div>\n                    <div>\n                      <Field\n                        name=\"price\"\n                        type=\"number\"\n                        className={classname(styles.formInput)}\n                        min={0}\n                        step={0.01}\n                      />\n                      <ErrorMessage\n                        name={\"price\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                        style={{ color: \"red\" }}\n                      />\n                    </div>\n                  </div>\n                  <div className={classname(styles.formControl)}>\n                    <div className={classname(styles.labelContainer)}>\n                      <label\n                        htmlFor=\"type\"\n                        className={classname(\n                          styles.formLabel,\n                          styles.labelContainer\n                        )}\n                      >\n                        Type\n                      </label>\n                    </div>\n                    <div>\n                      <Field\n                        name=\"type\"\n                        type=\"text\"\n                        className={classname(styles.formInput)}\n                      />\n                    </div>\n                    <ErrorMessage\n                      name={\"type\"}\n                      component=\"div\"\n                      className=\"field-error\"\n                    />\n                  </div>\n                  <div\n                    className={classname(styles.imageField, styles.formControl)}\n                  >\n                    <div className={classname(styles.labelContainer)}>\n                      <label\n                        htmlFor=\"image_url\"\n                        className={classname(\n                          styles.formLabel,\n                          styles.labelContainer\n                        )}\n                      >\n                        Image\n                      </label>\n                    </div>\n                    <div>\n                      <input\n                        type=\"file\"\n                        name=\"image_url\"\n                        max={1}\n                        className={classname(styles.formInput)}\n                      />\n                    </div>\n                  </div>\n                  <div className={classname(styles.titleWithNoBox)}>\n                    <h4>Description</h4>\n                  </div>\n                  <div className={classname(styles.descriptionBox)}>\n                    <div>\n                      <Field\n                        as=\"textarea\"\n                        name=\"description\"\n                        type=\"text\"\n                        className={classname(styles.descriptionContainer)}\n                      />\n                    </div>\n                    <ErrorMessage\n                      name={\"description\"}\n                      component=\"div\"\n                      className=\"field-error\"\n                    />\n                  </div>\n                  <div className=\"flex-around\">\n                    <div className={classname(styles.saveButtonContainer)}>\n                      <button\n                        type=\"button\"\n                        disabled={!isValid}\n                        className={classname(styles.ctaButton)}\n                      >\n                        {!isEmpty(selected)\n                          ? \"Edit Modifiers\"\n                          : \"Select Modifers\"}\n                      </button>\n                    </div>\n                    <div className={classname(styles.saveButtonContainer)}>\n                      <button className={classname(styles.ctaButton, \"addButton\")} type=\"submit\">\n                        {!isEmpty(nowOption) ? \"Save Option\" : \"Add Option\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </>\n      )}\n      {step1 && (\n        <div className={classname(styles.tableContainer)}>\n          <div className={classname(styles.tableFlex)}>\n            <Table\n              title={\"Modifiers\"}\n              columns={columns}\n              data={modifiers}\n              updateSelectItems={setSelected}\n              withCheckBox={true}\n              noAction={true}\n              preSelected={selected}\n            />\n          </div>\n          <div>\n            <div className={classname(styles.margin5)}>\n              <button\n                className={classname(styles.button200)}\n                onClick={() => history.push(\"/addModifier\")}\n              >\n                Add Modifier\n              </button>\n            </div>\n          </div>\n          <div className={classname(styles.between)}>\n            <div>\n              <button\n                onClick={() => setStep1(false)}\n                className={classname(styles.ctaButton)}\n              >\n                Back\n              </button>\n            </div>\n            <div>\n              <button\n                disabled={!selected.length}\n                className={classname(styles.ctaButton)}\n                onClick={() => (selected.length ? setStep1(false) : null)}\n              >\n                Save\n              </button>\n              <div style={{ fontSize: \"10px\" }}>\n                {!selected.length && (\n                  <p>\n                    <span style={{ color: \"red\" }}>*</span> Select alteast 1\n                    modifier\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {selected.length && !step1 && showSelected ? (\n        <div style={{ flex: 1 }}>\n          <div>\n            <OrderTable\n              columns={columns}\n              data={selected}\n              updateCurrentRows={setNowArray}\n            />\n          </div>\n          <div\n            style={{\n              margin: \"10px auto\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <button\n              className={styles.ctaButton}\n              onClick={() => {\n                handleSaveItem();\n              }}\n            >\n              {!isEmpty(nowOption) ? \"Update Option\" : \"Add Option\"}\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Pizza/index.js",["302","303"],"import React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport styles from './Pizza.module.sass'\nimport classname from 'classnames';\nimport routes from 'routes';\nimport Group from 'views/Groups'\nexport default function Pizza(props){\n    const {component} = props;\n    const getRoutes = (routes) => {\n        return routes.map((prop, key) => {\n          if (prop.children) {\n            return getRoutes(prop.children);\n          }\n          if (prop.layout === \"/pizza\") {\n              let _routes = <Route\n                path={prop.path}\n                component={prop.component}\n                key={key}\n              />\n              return _routes\n          } else {\n            return null;\n          }\n        });\n      };\n    return (\n        <div className={classname(styles.pizza)}>\n          {/* <div className={classname(styles.topBar)}>\n\n          </div> */}\n           <Switch>\n               {getRoutes(routes())}\n               <Route path=\"/groups\" component={Group}/>\n           </Switch> \n        </div>\n    )\n}",["304","305"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/reducer.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/actions.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/Layouts/index.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/createStore.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/api.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/actions.js",[],{"ruleId":"306","severity":1,"message":"307","line":74,"column":9,"nodeType":"308","messageId":"309","endLine":74,"endColumn":16},{"ruleId":"306","severity":1,"message":"310","line":75,"column":9,"nodeType":"308","messageId":"309","endLine":75,"endColumn":14},{"ruleId":"306","severity":1,"message":"311","line":76,"column":9,"nodeType":"308","messageId":"309","endLine":76,"endColumn":24},{"ruleId":"306","severity":1,"message":"312","line":77,"column":9,"nodeType":"308","messageId":"309","endLine":77,"endColumn":21},{"ruleId":"306","severity":1,"message":"313","line":78,"column":9,"nodeType":"308","messageId":"309","endLine":78,"endColumn":24},{"ruleId":"314","severity":1,"message":"315","line":87,"column":6,"nodeType":"316","endLine":87,"endColumn":24,"suggestions":"317"},{"ruleId":"314","severity":1,"message":"318","line":92,"column":6,"nodeType":"316","endLine":92,"endColumn":24,"suggestions":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","replacedBy":"323"},{"ruleId":"320","replacedBy":"324"},{"ruleId":"322","replacedBy":"325"},{"ruleId":"306","severity":1,"message":"326","line":5,"column":8,"nodeType":"308","messageId":"309","endLine":5,"endColumn":13},{"ruleId":"306","severity":1,"message":"327","line":21,"column":3,"nodeType":"308","messageId":"309","endLine":21,"endColumn":16},{"ruleId":"306","severity":1,"message":"328","line":24,"column":10,"nodeType":"308","messageId":"309","endLine":24,"endColumn":19},{"ruleId":"306","severity":1,"message":"329","line":25,"column":26,"nodeType":"308","messageId":"309","endLine":25,"endColumn":40},{"ruleId":"306","severity":1,"message":"330","line":26,"column":10,"nodeType":"308","messageId":"309","endLine":26,"endColumn":21},{"ruleId":"306","severity":1,"message":"331","line":27,"column":10,"nodeType":"308","messageId":"309","endLine":27,"endColumn":25},{"ruleId":"306","severity":1,"message":"307","line":45,"column":9,"nodeType":"308","messageId":"309","endLine":45,"endColumn":16},{"ruleId":"306","severity":1,"message":"332","line":47,"column":10,"nodeType":"308","messageId":"309","endLine":47,"endColumn":18},{"ruleId":"306","severity":1,"message":"333","line":49,"column":10,"nodeType":"308","messageId":"309","endLine":49,"endColumn":17},{"ruleId":"314","severity":1,"message":"334","line":55,"column":6,"nodeType":"316","endLine":55,"endColumn":23,"suggestions":"335"},{"ruleId":"306","severity":1,"message":"310","line":64,"column":9,"nodeType":"308","messageId":"309","endLine":64,"endColumn":14},{"ruleId":"306","severity":1,"message":"336","line":65,"column":9,"nodeType":"308","messageId":"309","endLine":65,"endColumn":22},{"ruleId":"306","severity":1,"message":"312","line":66,"column":9,"nodeType":"308","messageId":"309","endLine":66,"endColumn":21},{"ruleId":"306","severity":1,"message":"337","line":75,"column":9,"nodeType":"308","messageId":"309","endLine":75,"endColumn":21},{"ruleId":"314","severity":1,"message":"338","line":106,"column":6,"nodeType":"316","endLine":106,"endColumn":16,"suggestions":"339"},{"ruleId":"340","severity":1,"message":"341","line":137,"column":17,"nodeType":"342","endLine":137,"endColumn":35},{"ruleId":"320","replacedBy":"343"},{"ruleId":"322","replacedBy":"344"},{"ruleId":"320","replacedBy":"345"},{"ruleId":"322","replacedBy":"346"},{"ruleId":"347","severity":1,"message":"348","line":62,"column":9,"nodeType":"349","messageId":"350","endLine":63,"endColumn":58},{"ruleId":"347","severity":1,"message":"348","line":64,"column":9,"nodeType":"349","messageId":"350","endLine":65,"endColumn":68},{"ruleId":"314","severity":1,"message":"315","line":30,"column":5,"nodeType":"316","endLine":30,"endColumn":26,"suggestions":"351"},{"ruleId":"306","severity":1,"message":"332","line":31,"column":10,"nodeType":"308","messageId":"309","endLine":31,"endColumn":18},{"ruleId":"306","severity":1,"message":"310","line":32,"column":11,"nodeType":"308","messageId":"309","endLine":32,"endColumn":16},{"ruleId":"306","severity":1,"message":"352","line":33,"column":12,"nodeType":"308","messageId":"309","endLine":33,"endColumn":16},{"ruleId":"306","severity":1,"message":"353","line":22,"column":7,"nodeType":"308","messageId":"309","endLine":22,"endColumn":12},{"ruleId":"306","severity":1,"message":"354","line":34,"column":7,"nodeType":"308","messageId":"309","endLine":34,"endColumn":16},{"ruleId":"306","severity":1,"message":"355","line":66,"column":9,"nodeType":"308","messageId":"309","endLine":66,"endColumn":14},{"ruleId":"314","severity":1,"message":"356","line":132,"column":6,"nodeType":"316","endLine":132,"endColumn":16,"suggestions":"357"},{"ruleId":"314","severity":1,"message":"358","line":133,"column":21,"nodeType":"359","endLine":133,"endColumn":34},{"ruleId":"306","severity":1,"message":"360","line":176,"column":5,"nodeType":"308","messageId":"309","endLine":176,"endColumn":19},{"ruleId":"314","severity":1,"message":"361","line":224,"column":6,"nodeType":"316","endLine":224,"endColumn":41,"suggestions":"362"},{"ruleId":"363","severity":1,"message":"364","line":18,"column":25,"nodeType":"365","endLine":18,"endColumn":102},{"ruleId":"320","replacedBy":"366"},{"ruleId":"322","replacedBy":"367"},{"ruleId":"306","severity":1,"message":"368","line":7,"column":9,"nodeType":"308","messageId":"309","endLine":7,"endColumn":22},{"ruleId":"306","severity":1,"message":"369","line":7,"column":24,"nodeType":"308","messageId":"309","endLine":7,"endColumn":33},{"ruleId":"306","severity":1,"message":"370","line":7,"column":35,"nodeType":"308","messageId":"309","endLine":7,"endColumn":47},{"ruleId":"306","severity":1,"message":"371","line":7,"column":49,"nodeType":"308","messageId":"309","endLine":7,"endColumn":57},{"ruleId":"314","severity":1,"message":"372","line":20,"column":5,"nodeType":"316","endLine":20,"endColumn":18,"suggestions":"373"},{"ruleId":"320","replacedBy":"374"},{"ruleId":"322","replacedBy":"375"},{"ruleId":"376","severity":1,"message":"377","line":10,"column":1,"nodeType":"378","endLine":73,"endColumn":2},{"ruleId":"306","severity":1,"message":"379","line":5,"column":7,"nodeType":"308","messageId":"309","endLine":5,"endColumn":14},{"ruleId":"306","severity":1,"message":"380","line":3,"column":9,"nodeType":"308","messageId":"309","endLine":3,"endColumn":16},{"ruleId":"306","severity":1,"message":"381","line":5,"column":45,"nodeType":"308","messageId":"309","endLine":5,"endColumn":57},{"ruleId":"306","severity":1,"message":"328","line":12,"column":10,"nodeType":"308","messageId":"309","endLine":12,"endColumn":19},{"ruleId":"306","severity":1,"message":"330","line":13,"column":10,"nodeType":"308","messageId":"309","endLine":13,"endColumn":21},{"ruleId":"306","severity":1,"message":"379","line":88,"column":9,"nodeType":"308","messageId":"309","endLine":88,"endColumn":16},{"ruleId":"306","severity":1,"message":"382","line":89,"column":9,"nodeType":"308","messageId":"309","endLine":89,"endColumn":15},{"ruleId":"306","severity":1,"message":"383","line":90,"column":9,"nodeType":"308","messageId":"309","endLine":90,"endColumn":16},{"ruleId":"306","severity":1,"message":"307","line":93,"column":9,"nodeType":"308","messageId":"309","endLine":93,"endColumn":16},{"ruleId":"306","severity":1,"message":"384","line":94,"column":9,"nodeType":"308","messageId":"309","endLine":94,"endColumn":21},{"ruleId":"306","severity":1,"message":"385","line":95,"column":9,"nodeType":"308","messageId":"309","endLine":95,"endColumn":22},{"ruleId":"306","severity":1,"message":"386","line":96,"column":9,"nodeType":"308","messageId":"309","endLine":96,"endColumn":18},{"ruleId":"306","severity":1,"message":"387","line":102,"column":10,"nodeType":"308","messageId":"309","endLine":102,"endColumn":21},{"ruleId":"306","severity":1,"message":"388","line":102,"column":23,"nodeType":"308","messageId":"309","endLine":102,"endColumn":37},{"ruleId":"306","severity":1,"message":"389","line":3,"column":8,"nodeType":"308","messageId":"309","endLine":3,"endColumn":9},{"ruleId":"306","severity":1,"message":"390","line":3,"column":13,"nodeType":"308","messageId":"309","endLine":3,"endColumn":19},{"ruleId":"306","severity":1,"message":"391","line":12,"column":9,"nodeType":"308","messageId":"309","endLine":12,"endColumn":22},{"ruleId":"306","severity":1,"message":"392","line":13,"column":9,"nodeType":"308","messageId":"309","endLine":13,"endColumn":23},{"ruleId":"306","severity":1,"message":"393","line":14,"column":9,"nodeType":"308","messageId":"309","endLine":14,"endColumn":20},{"ruleId":"306","severity":1,"message":"394","line":14,"column":22,"nodeType":"308","messageId":"309","endLine":14,"endColumn":33},{"ruleId":"314","severity":1,"message":"395","line":32,"column":52,"nodeType":"316","endLine":32,"endColumn":58,"suggestions":"396"},{"ruleId":"306","severity":1,"message":"397","line":13,"column":75,"nodeType":"308","messageId":"309","endLine":13,"endColumn":92},{"ruleId":"306","severity":1,"message":"307","line":17,"column":9,"nodeType":"308","messageId":"309","endLine":17,"endColumn":16},{"ruleId":"306","severity":1,"message":"312","line":18,"column":9,"nodeType":"308","messageId":"309","endLine":18,"endColumn":21},{"ruleId":"314","severity":1,"message":"315","line":24,"column":7,"nodeType":"316","endLine":24,"endColumn":26,"suggestions":"398"},{"ruleId":"306","severity":1,"message":"332","line":25,"column":10,"nodeType":"308","messageId":"309","endLine":25,"endColumn":18},{"ruleId":"306","severity":1,"message":"399","line":27,"column":10,"nodeType":"308","messageId":"309","endLine":27,"endColumn":14},{"ruleId":"306","severity":1,"message":"400","line":27,"column":16,"nodeType":"308","messageId":"309","endLine":27,"endColumn":23},{"ruleId":"347","severity":1,"message":"348","line":25,"column":9,"nodeType":"349","messageId":"350","endLine":26,"endColumn":75},{"ruleId":"306","severity":1,"message":"389","line":3,"column":8,"nodeType":"308","messageId":"309","endLine":3,"endColumn":9},{"ruleId":"306","severity":1,"message":"401","line":17,"column":3,"nodeType":"308","messageId":"309","endLine":17,"endColumn":18},{"ruleId":"306","severity":1,"message":"402","line":23,"column":20,"nodeType":"308","messageId":"309","endLine":23,"endColumn":26},{"ruleId":"306","severity":1,"message":"403","line":66,"column":9,"nodeType":"308","messageId":"309","endLine":66,"endColumn":20},{"ruleId":"314","severity":1,"message":"404","line":97,"column":6,"nodeType":"316","endLine":97,"endColumn":27,"suggestions":"405"},{"ruleId":"306","severity":1,"message":"406","line":2,"column":25,"nodeType":"308","messageId":"309","endLine":2,"endColumn":33},{"ruleId":"306","severity":1,"message":"407","line":8,"column":12,"nodeType":"308","messageId":"309","endLine":8,"endColumn":21},{"ruleId":"320","replacedBy":"408"},{"ruleId":"322","replacedBy":"409"},"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'options_loading' is assigned a value but never used.","'option_error' is assigned a value but never used.","'options_message' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.","ArrayExpression",["410"],"React Hook React.useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["411"],"no-native-reassign",["412"],"no-negated-in-lhs",["413"],["412"],["413"],"'items' is defined but never used.","'errorSelector' is defined but never used.","'listGroup' is defined but never used.","'groupsSelector' is defined but never used.","'listOptions' is defined but never used.","'optionsSelector' is defined but never used.","'selected' is assigned a value but never used.","'newItem' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'itemInfo'. Either include it or remove the dependency array.",["414"],"'option_loding' is assigned a value but never used.","'customStyles' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["415"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["412"],["413"],["412"],["413"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected",["416"],"'form' is assigned a value but never used.","'style' is assigned a value but never used.","'newStyles' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook React.useMemo has a missing dependency: 'columns'. Either include it or remove the dependency array.",["417"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'visibleColumns' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'selectedFlatRows'. Either include it or remove the dependency array.",["418"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["412"],["413"],"'FaObjectGroup' is defined but never used.","'FaSitemap' is defined but never used.","'FaPizzaSlice' is defined but never used.","'FaDiceD6' is defined but never used.","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["419"],["412"],["413"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'history' is assigned a value but never used.","'isEmpty' is defined but never used.","'isEmptyArray' is defined but never used.","'groups' is assigned a value but never used.","'options' is assigned a value but never used.","'groupLoading' is assigned a value but never used.","'optionLoading' is assigned a value but never used.","'groupInfo' is assigned a value but never used.","'optionArray' is assigned a value but never used.","'setOptionArray' is assigned a value but never used.","'_' is defined but never used.","'create' is defined but never used.","'sortedOptions' is defined but never used.","'nowSortedArray' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","React Hook React.useEffect has a missing dependency: 'updateCurrentRows'. Either include it or remove the dependency array. If 'updateCurrentRows' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["420"],"'nowOptionSelector' is defined but never used.",["421"],"'list' is assigned a value but never used.","'setList' is assigned a value but never used.","'loadingSelector' is defined but never used.","'modErr' is defined but never used.","'mod_loading' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'modifierMessage' and 'modifiers'. Either include them or remove the dependency array.",["422"],"'Redirect' is defined but never used.","'component' is assigned a value but never used.",["412"],["413"],{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},"no-global-assign","no-unsafe-negation",{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},"Update the dependencies array to be: [dispatch, groups, message]",{"range":"445","text":"446"},"Update the dependencies array to be: [dispatch, groups, options]",{"range":"447","text":"448"},"Update the dependencies array to be: [dispatch, itemInfo, items]",{"range":"449","text":"450"},"Update the dependencies array to be: [dispatch, nowGroup]",{"range":"451","text":"452"},"Update the dependencies array to be: [dispatch, message, modifiers]",{"range":"453","text":"454"},"Update the dependencies array to be: [columns, noAction]",{"range":"455","text":"456"},"Update the dependencies array to be: [updateSelectItems, selectedRowIds, selectedFlatRows]",{"range":"457","text":"458"},"Update the dependencies array to be: [activeRoute, history]",{"range":"459","text":"460"},"Update the dependencies array to be: [rows, updateCurrentRows]",{"range":"461","text":"462"},"Update the dependencies array to be: [dispatch, message, options]",{"range":"463","text":"464"},"Update the dependencies array to be: [nowOption, dispatch, modifierMessage, modifiers]",{"range":"465","text":"466"},[2513,2531],"[dispatch, groups, message]",[2651,2669],"[dispatch, groups, options]",[1717,1734],"[dispatch, itemInfo, items]",[3016,3026],"[dispatch, nowGroup]",[1086,1107],"[dispatch, message, modifiers]",[3282,3292],"[columns, noAction]",[5552,5587],"[updateSelectItems, selectedRowIds, selectedFlatRows]",[702,715],"[activeRoute, history]",[1075,1081],"[rows, updateCurrentRows]",[1069,1088],"[dispatch, message, options]",[3022,3043],"[nowOption, dispatch, modifierMessage, modifiers]"]