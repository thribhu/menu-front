[{"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/index.js":"1","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/saga.js":"2","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/index.js":"3","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/service.js":"4","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/index.js":"5","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/addGroup.js":"6","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/constants.js":"7","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/utils.js":"8","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/actions.js":"9","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/reducer.js":"10","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/index.js":"11","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/actions.js":"12","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/constants.js":"13","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/saga.js":"14","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/addModifier.js":"15","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/table/index.js":"16","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/index.js":"17","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/sidebarRoutes.js":"18","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/routes.js":"19","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reportWebVitals.js":"20","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reducers.js":"21","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/saga.js":"22","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/saga.js":"23","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/service.js":"24","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/constants.js":"25","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/utils/normalize.js":"26","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/addItem.js":"27","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/selector.js":"28","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/orderTable/index.js":"29","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/index.js":"30","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/App.js":"31","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/sagas.js":"32","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/service.js":"33","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/selector.js":"34","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/reducer.js":"35","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/reducer.js":"36","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/selector.js":"37","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/selectors.js":"38","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/addOption.js":"39","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Pizza/index.js":"40","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/reducer.js":"41","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/actions.js":"42","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/Layouts/index.js":"43","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/createStore.js":"44","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/constants.js":"45","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/api.js":"46","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/service.js":"47","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/actions.js":"48"},{"size":529,"mtime":1618641719097,"results":"49","hashOfConfig":"50"},{"size":3701,"mtime":1618599920506,"results":"51","hashOfConfig":"50"},{"size":6154,"mtime":1618648552113,"results":"52","hashOfConfig":"50"},{"size":897,"mtime":1617371188023,"results":"53","hashOfConfig":"50"},{"size":4638,"mtime":1618649030531,"results":"54","hashOfConfig":"50"},{"size":13763,"mtime":1618727049251,"results":"55","hashOfConfig":"50"},{"size":1463,"mtime":1617371188011,"results":"56","hashOfConfig":"57"},{"size":335,"mtime":1617371188103,"results":"58","hashOfConfig":"50"},{"size":817,"mtime":1617371187963,"results":"59","hashOfConfig":"50"},{"size":2769,"mtime":1617494937575,"results":"60","hashOfConfig":"50"},{"size":5242,"mtime":1618642737665,"results":"61","hashOfConfig":"50"},{"size":878,"mtime":1617371208896,"results":"62","hashOfConfig":"50"},{"size":1194,"mtime":1617371226520,"results":"63","hashOfConfig":"50"},{"size":4011,"mtime":1618599818216,"results":"64","hashOfConfig":"57"},{"size":10396,"mtime":1618655274116,"results":"65","hashOfConfig":"50"},{"size":8098,"mtime":1618648494079,"results":"66","hashOfConfig":"50"},{"size":1198,"mtime":1618646083412,"results":"67","hashOfConfig":"50"},{"size":1636,"mtime":1617819223786,"results":"68","hashOfConfig":"50"},{"size":1968,"mtime":1617819217226,"results":"69","hashOfConfig":"50"},{"size":362,"mtime":1613558109347,"results":"70","hashOfConfig":"50"},{"size":423,"mtime":1618596741443,"results":"71","hashOfConfig":"50"},{"size":3751,"mtime":1618726036517,"results":"72","hashOfConfig":"50"},{"size":3660,"mtime":1618599957060,"results":"73","hashOfConfig":"50"},{"size":821,"mtime":1616526875447,"results":"74","hashOfConfig":"50"},{"size":1562,"mtime":1616526875447,"results":"75","hashOfConfig":"50"},{"size":136,"mtime":1613558109347,"results":"76","hashOfConfig":"50"},{"size":14844,"mtime":1618727340753,"results":"77","hashOfConfig":"50"},{"size":1012,"mtime":1617371188007,"results":"78","hashOfConfig":"57"},{"size":4596,"mtime":1613727067867,"results":"79","hashOfConfig":"50"},{"size":4023,"mtime":1618646849975,"results":"80","hashOfConfig":"50"},{"size":1065,"mtime":1618646220737,"results":"81","hashOfConfig":"50"},{"size":334,"mtime":1616526875451,"results":"82","hashOfConfig":"50"},{"size":846,"mtime":1616526875451,"results":"83","hashOfConfig":"50"},{"size":1254,"mtime":1617371188011,"results":"84","hashOfConfig":"50"},{"size":2775,"mtime":1617520224082,"results":"85","hashOfConfig":"50"},{"size":2434,"mtime":1617531714733,"results":"86","hashOfConfig":"50"},{"size":1497,"mtime":1617490945074,"results":"87","hashOfConfig":"50"},{"size":1011,"mtime":1617494684933,"results":"88","hashOfConfig":"57"},{"size":11816,"mtime":1618722410931,"results":"89","hashOfConfig":"50"},{"size":1064,"mtime":1613558109343,"results":"90","hashOfConfig":"50"},{"size":2444,"mtime":1617818195640,"results":"91","hashOfConfig":"50"},{"size":812,"mtime":1616526875447,"results":"92","hashOfConfig":"50"},{"size":367,"mtime":1615192430968,"results":"93","hashOfConfig":"50"},{"size":1135,"mtime":1618580959869,"results":"94","hashOfConfig":"57"},{"size":1306,"mtime":1616526875447,"results":"95","hashOfConfig":"50"},{"size":72,"mtime":1616526875415,"results":"96","hashOfConfig":"57"},{"size":930,"mtime":1617371188011,"results":"97","hashOfConfig":"50"},{"size":901,"mtime":1617371188011,"results":"98","hashOfConfig":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ds2j73",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sy1zlp",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"109"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"109"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"109"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"109"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/index.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/index.js",["210","211","212","213","214","215","216"],"import React from \"react\";\nimport classname from \"classnames\";\nimport styles from \"./Groups.module.sass\";\nimport Modal from \"react-modal\";\nimport Table from \"components/table\";\nimport AddGroup from \"views/Groups/addGroup\";\nimport  { isEmpty, map, assign } from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport { FaTrash, FaEdit, FaWindowClose } from \"react-icons/fa\";\nimport { normalizeText } from \"utils/normalize\";\nimport {listGroup, removeGroup, selectGroup} from 'modules/groups/actions'\nimport { loadingSelector, errorSelector, listSelector, messageSelector } from 'modules/groups/selector'\nimport {listOptions} from 'modules/options/actions'\nimport {loadingSelector as optionLoading, optionsSelector, errorSelector as optionError, messageSelector as optionsInfo} from 'modules/options/selector'\nimport {useDispatch, useSelector} from 'react-redux'\nconst groupColumns = [\n  {\n    Header: \"Group\",\n    accessor: d => normalizeText(d.name) || \"-\",\n    width: 50,\n  },\n  {\n    Header: \"Display Order\",\n    accessor: d => d.order || \"-\",\n  },\n  {\n    Header: \"Price\",\n    accessor: d => d.price || 0,\n  },\n  {\n    Header: \"Max Allowed\",\n    accessor: d => d.max_allowed || 0,\n  },\n  {\n    Header: \"Min Required\",\n    accessor: d => d.min_required || 0,\n  },\n  {\n    Header: \"Options\",\n    accessor: d => {\n      let names = map(d.options, _ => normalizeText(_.name))\n      return names.join(\", \") || \"-\"\n    }\n  },\n  {\n    Header: \"Actions\",\n    accessor: \"actions\",\n  },\n];\nconst columns = [\n  {\n    Header: \"Image\",\n    accessor: \"image\",\n  },\n  {\n    Header: \"Name\",\n    accessor: \"name\",\n  },\n  {\n    Header: \"Price\",\n    accessor: \"price\",\n  },\n  {\n    Header: \"Type\",\n    accessor: \"type\",\n  },\n];\nexport default function GroupsTable() {\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const groups = useSelector(listSelector)\n  const message = useSelector(messageSelector)\n  const options = useSelector(optionsSelector)\n  const loading = useSelector(loadingSelector)\n  const error = useSelector(errorSelector)\n  const options_loading = useSelector(optionLoading)\n  const option_error = useSelector(optionError)\n  const options_message = useSelector(optionsInfo)\n  const [selected, setSelected] = React.useState([]);\n  const [form, setForm] = React.useState();\n  const [open, setOpen] = React.useState(false);\n  const [step1, setSetp1] = React.useState(false);\n  React.useEffect(() => {\n    if(isEmpty(message) && isEmpty(groups)) {\n      dispatch(listGroup())\n    }\n  }, [dispatch, groups])\n  React.useEffect(() => {\n    if(isEmpty(optionsInfo) && isEmpty(options)) {\n      dispatch(listOptions())\n    }\n  }, [dispatch, groups])\n  const customStyles = {\n    content: {\n      margin: \"auto\",\n      height: \"80%\",\n      width: \"100%\",\n      maxWidth: \"600px\",\n      overflow: \"auto\",\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      bottom: \"auto\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n  const handleEdit = group => {\n    delete group.actions\n    dispatch(selectGroup(group))\n    history.push(\"/addGroup\")\n  }\n  const handleRemove = group => {\n    const confirm = window.confirm(`You are about to remove ${group.name}. This is not reversable`)\n    if(confirm) {\n      dispatch(removeGroup(group.id))\n    }\n  }\n  map(groups, (option, i) =>\n    assign(option, {\n      actions: (\n        <div style={{ display: \"flex\" }} key={i}>\n          <div style={{ padding: \"0 5px\" }}>\n            <button onClick={() => handleEdit(option)} className=\"transparentButton\">\n              <FaEdit />\n            </button>\n          </div>\n          <div>\n            <button onClick={() => handleRemove(option)} className=\"transparentButton\">\n              <FaTrash />\n            </button>\n          </div>\n        </div>\n      ),\n    })\n  );\n  return (\n    <div className={classname(styles.tableContainer)}>\n      <Modal\n        isOpen={open}\n        onRequestClose={() => {\n          setOpen(false);\n          setSetp1(false);\n        }}\n        style={customStyles}\n      >\n        <div>\n\n                    <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                        <button onClick={() => setOpen(false)} style={{ cursor: 'pointer' }} className={classname(styles.transparent)}>\n                            <FaWindowClose />\n                        </button>\n                    </div>\n        {step1 && (\n          <div>\n            <button onClick={() => setSetp1(false)}>Back</button>\n          </div>\n        )}\n        {!step1 ? (\n          <AddGroup\n            next={setSetp1}\n            formMethod={setForm}\n            currentForm={form}\n            setOpen={setOpen}\n          />\n        ) : (\n          <div>\n            <Table\n              updateSelectItems={setSelected}\n              columns={columns}\n              data={options}\n            />\n            <div className={classname(styles.buttonGroup)}>\n              <div>\n                <button className={classname(styles.ctaButton)}>\n                  New Option\n                </button>\n              </div>\n              <div>\n                <button\n                  className={classname(styles.ctaButton)}\n                  style={{ width: \"150px\" }}\n                  onClick={() =>\n                    history.push(\"/addGroup\", { currentForm: form, selected })\n                  }\n                >\n                  Add options to group\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n        </div>\n      </Modal>\n      <div>\n        <Table\n          updateSelectItems={setSelected}\n          columns={groupColumns}\n          data={groups}\n        />\n        {\n          !isEmpty(message) && \n          <div className=\"UcenterWithMargin IamInfo\">\n           * Add Groups to view in this table \n          </div>\n        }\n      </div>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", margin: \"20px\" }}\n      >\n        <button\n          onClick={() => setOpen(true)}\n          className=\"fix-me-right cta-button transparent-button\"\n        >\n          Add Group\n        </button>\n      </div>\n    </div>\n  );\n}\n",["217","218"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/service.js",[],["219","220"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/index.js",["221","222","223","224","225","226","227","228","229","230"],"import React from \"react\";\nimport classname from \"classnames\";\nimport styles from \"./Items.module.sass\";\nimport { useHistory } from \"react-router-dom\";\nimport items from \"./items.json\";\nimport Table from \"components/table\";\nimport { normalizeText } from \"utils/normalize\";\nimport { FaEdit, FaTrash, FaWindowClose } from \"react-icons/fa\";\nimport _, { isEmpty } from \"lodash\";\nimport Modal from \"react-modal\";\nimport AddItem from \"./addItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  listItems,\n  removeItem,\n  setSelected as selectItem,\n} from \"modules/items/actions\";\nimport {\n  listSelector,\n  loadingSelector,\n  errorSelector,\n  itemInfoSelector,\n} from \"modules/items/selector\";\nimport { listGroup } from \"modules/groups/actions\";\nimport { listSelector as groupsSelector } from \"modules/groups/selector\";\nimport { listOptions } from \"modules/options/actions\";\nimport { optionsSelector } from \"modules/options/selector\";\nconst customStyles = {\n  content: {\n    margin: \"auto\",\n    height: \"80%\",\n    width: \"100%\",\n    maxWidth: \"600px\",\n    overflow: \"auto\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    bottom: \"auto\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nexport default function Items() {\n  const dispatch = useDispatch();\n  const items = useSelector(listSelector);\n  const loading = useSelector(loadingSelector);\n  const itemInfo = useSelector(itemInfoSelector);\n  const [selected, setSelected] = React.useState();\n  const [open, setOpen] = React.useState(false);\n  const [newItem, setItem] = React.useState();\n  const history = useHistory();\n  React.useEffect(() => {\n    if (isEmpty(itemInfo) && isEmpty(items)) {\n      dispatch(listItems());\n    }\n  }, [dispatch, items]);\n  const handleEdit = (item) => {\n    delete item.actions;\n    dispatch(selectItem(item));\n    history.push(\"/addItem\");\n  };\n  const handleDelete = (item) => {\n    const confirm = window.confirm(\n      \"You are about to remove an item. This is permanant\"\n    );\n    if (!!confirm) {\n      dispatch(removeItem(item.id));\n    }\n  };\n  const columns = [\n    {\n      Header: \"Name\",\n      accessor: (d) => normalizeText(d.name),\n    },\n    {\n      Header: \"Type\",\n      accessor: (d) => normalizeText(d.type) || \"-\",\n    },\n    {\n      Header: \"Price\",\n      accessor: (d) => d.price || \"-\",\n    },\n    {\n      Header: \"Active\",\n      accessor: (d) => (d.active === 1 ? \"True\" : \"False\"),\n    },\n    {\n      Header: \"Stock\",\n      accessor: (d) => d.stock || \"-\",\n    },\n    {\n      Header: \"Options\",\n      accessor: (d) => {\n        let names = _.map(d.options, (_) => normalizeText(_.name));\n        return names.join(\", \") || \"-\";\n      },\n    },\n    {\n      Header: \"Groups\",\n      accessor: (d) => {\n        let names = _.map(d.option_groups, (_) => normalizeText(_.name));\n        return names.join(\", \") || \"-\";\n      },\n    },\n    {\n      Header: \"Actions\",\n      accessor: \"actions\",\n    },\n  ];\n  _.map(items, (item) =>\n    _.assign(item, {\n      actions: (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <div style={{ padding: \"0 5px\" }}>\n            <button\n              className=\"transparentButton\"\n              onClick={() => handleEdit(item)}\n            >\n              <FaEdit />\n            </button>\n          </div>\n          <div>\n            <button\n              className=\"transparentButton\"\n              onClick={() => handleDelete(item)}\n            >\n              <FaTrash />\n            </button>\n          </div>\n        </div>\n      ),\n    })\n  );\n  return (\n    <div className={classname(styles.tableContainer)}>\n      <Modal isOpen={open} style={customStyles}>\n        <div>\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <button\n              onClick={() => setOpen(false)}\n              style={{ cursor: \"pointer\" }}\n              className=\"transparentButton\"\n            >\n              <FaWindowClose />\n            </button>\n          </div>\n          <AddItem setOpen={setOpen} setItem={setItem} />\n        </div>\n      </Modal>\n      <div>\n        <Table columns={columns} data={items} updateSelectItems={setSelected} />\n        {!isEmpty(itemInfo) && (\n          <div className=\"UcenterWithMargin IamInfo\">\n            * Add Items to view in this table\n          </div>\n        )}\n      </div>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", margin: \"20px\" }}\n      >\n        <button\n          onClick={() => setOpen(true)}\n          className=\"fix-me-right cta-button transparent-button\"\n        >\n          Add Item\n        </button>\n      </div>\n    </div>\n  );\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/addGroup.js",["231","232","233","234","235","236","237","238"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/utils.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/actions.js",[],["239","240"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/reducer.js",["241","242"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/index.js",["243","244"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/actions.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/addModifier.js",["245","246"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/table/index.js",["247","248","249","250","251","252","253"],"import React from \"react\";\nimport {\n  useTable,\n  useFilters,\n  useAsyncDebounce,\n  useSortBy,\n  usePagination,\n  useRowSelect,\n  useGlobalFilter,\n} from \"react-table\";\nimport _ from \"lodash\";\nimport classnames from \"classnames\";\nimport { matchSorter } from \"match-sorter\";\nimport styles from \"./table.module.css\";\n\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { map } from \"lodash\";\nconst style = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\nconst newStyles = {\n  formControlMargins: {\n    margin: \"3px 0 !important\",\n  },\n  gridContainer: {\n    justifyContent: \"center\",\n  },\n};\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n      <input\n        onChange={(e) => {\n          setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n        }}\n        placeholder={`Search ${count} records...`}\n        className={classnames(styles.rt_header_search)}\n      />\n    </div>\n  );\n}\n// global filter\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return (\n    <div style={{display: 'flex' }}>\n      <div style={{display: 'flex', alignItems:'center'}}>\n        Search\n      </div>\n      <input\n        value={value || \"\"}\n        onChange={(e) => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        }}\n        style={{\n          margin: '10px',\n          width: '100%',\n          fontSize: \"1rem\",\n          border: \"solid 1px\",\n          borderRadius: '5px',\n          padding: \"10px\",\n        }}\n      />\n    </div>\n  );\n}\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = (val) => !val;\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n      </>\n    );\n  }\n);\n\n// Our table component\nfunction Table({\n  columns,\n  data,\n  updateSelectItems,\n  withCheckBox,\n  noAction,\n  preSelected,\n  title,\n}) {\n  const memo_columns = React.useMemo(() => {\n    if (noAction) {\n      _.remove(columns, { Header: \"Actions\" });\n      return columns;\n    } else return columns;\n  }, [noAction]);\n  const memo_data = React.useMemo(() => data);\n  const filterTypes = React.useMemo(\n    () => ({\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: (rows, id, filterValue) => {\n        return rows.filter((row) => {\n          const rowValue = row.values[id];\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true;\n        });\n      },\n    }),\n    []\n  );\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n  const preSelectIndex = _.map(preSelected, (s) =>\n    _.indexOf(\n      memo_data.map((m) => m.id),\n      s.id\n    )\n  );\n  const selected = {};\n  preSelectIndex.map((i) => (selected[i] = true));\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    visibleColumns,\n    state: {selectedRowIds },\n    selectedFlatRows,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns: memo_columns,\n      data: memo_data,\n      defaultColumn, // Be sure to pass the defaultColumn option\n      filterTypes,\n      initialState: { selectedRowIds: selected },\n    },\n    useFilters, // useFilters!\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    (hooks) => {\n      if (withCheckBox) {\n        hooks.visibleColumns.push((columns) => [\n          {\n            id: \"selection\",\n            Header: ({ getToggleAllPageRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox\n                  {...getToggleAllPageRowsSelectedProps()}\n                />\n              </div>\n            ),\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ]);\n      } else return null;\n    }\n  );\n\n  React.useEffect(() => {\n    updateSelectItems(\n      map(selectedFlatRows, (d) => {\n        return d.original;\n      })\n    );\n  }, [updateSelectItems, selectedRowIds]);\n  return (\n    <div className={classnames(styles.ReactTable)}>\n      {title && <div className={classnames(styles.tableTile)}>{title}</div>}\n      <div>\n        <GlobalFilter\n          preGlobalFilteredRows={preGlobalFilteredRows}\n          globalFilter={state.globalFilter}\n          setGlobalFilter={setGlobalFilter}\n        />\n      </div>\n      <MaUTable {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()} className=\"rt-tr\">\n              {headerGroup.headers.map((column, key) => (\n                <TableCell\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                >\n                  <div\n                    className=\"rt-resizable-header-content table-header\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {column.render(\"Header\")}\n                    <span>\n                      {\n                        column.isSorted ? column.isSortedDesc ? ' 🔽':' 🔼': ''\n                      }\n                    </span>\n                  </div>\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n          {/*\n          <TableRow>\n            <TableCell\n              colSpan={visibleColumns.length}\n              style={{ textAlign: \"left\" }}\n            ></TableCell>\n          </TableRow>\n          */}\n        </TableHead>\n        <TableBody\n          // style={{ textAlign: \"center\" }}\n          {...getTableBodyProps()}\n          className=\"rt-tbody\"\n        >\n          {rows.map((row, i) => {\n            prepareRow(row);\n\n            return (\n              <TableRow\n                {...row.getRowProps()}\n                className={classnames(\n                  \"rt-tr\",\n                  { \" -odd\": i % 2 === 0 },\n                  { \" -even\": i % 2 === 1 }\n                )}\n                //   onClick={() => handleClickOpen(row.original)}\n              >\n                {row.cells.map((cell) => {\n                  return (\n                    <TableCell\n                      {...cell.getCellProps()}\n                      className=\"rt-td\"\n                      style={{ textAlign: \"center\" }}\n                    >\n                      {cell.render(\"Cell\")}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </MaUTable>\n    </div>\n  );\n}\nexport default Table;\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/index.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/sidebarRoutes.js",["254","255","256","257","258"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/routes.js",["259"],"import AddOptions from 'views/Options/addOption'\nimport OptionsList from 'views/Options'\nimport Groups from 'views/Groups';\nimport AddGroup from 'views/Groups/addGroup'\nimport ListItems from 'views/Items';\nimport AddItem from 'views/Items/addItem';\nimport Modifiers from 'views/Modifiers'\nimport AddModifier from 'views/Modifiers/addModifier';\nimport { FaObjectGroup, FaSitemap, FaPizzaSlice, FaDiceD6 } from 'react-icons/fa'\nexport default function () {\n    return [\n        {\n            path: \"/options\",\n            name: \"Options\",\n            icon: (<div><FaSitemap/></div>),\n            component: OptionsList,\n            layout: \"/pizza\",\n\t    num: 2\n        },\n        {\n            path: \"/addOption\",\n            name: \"Add option\",\n            icon: \"\",\n            component: AddOptions,\n            layout: \"/pizza\",\n        },\n        {\n            path: '/modifiers',\n            name: 'Modifiers',\n            icon: (<div><FaDiceD6/></div>),\n            component: Modifiers,\n            layout: \"/pizza\",\n\t    num: 1\n        },\n        {\n            path: \"/addModifier\",\n            name: \"Add Modifier\",\n            icon: \"\",\n            component: AddModifier,\n            layout: \"/pizza\"\n        },\n        {\n            path: '/items',\n            name: 'Items',\n            icon: (<div><FaPizzaSlice/></div>),\n            component: ListItems,\n            layout: \"/pizza\",\n\t    num: 4\n        },\n        {\n            path: \"/addItem\",\n            name: \"Add Item\",\n            icon: \"\",\n            component: AddItem,\n            layout: \"/pizza\"\n        }\n        ,{\n            path: '/groups',\n            name: 'Groups',\n            icon: (<div><FaObjectGroup/></div>),\n            component: Groups,\n            layout: \"/pizza\",\n\t    num: 3\n        },\n        {\n            path: \"/addgroup\",\n            name: \"add option group\",\n            icon: \"\",\n            component: AddGroup,\n            layout: \"/pizza\"\n        }\n    ]\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reportWebVitals.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reducers.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/saga.js",["260"],"import {takeEvery, put, call} from 'redux-saga/effects'\nimport * as Actions from './constants'\nimport {isEmpty} from 'lodash'\nimport {\n    listGroups,\n    addGroup,\n    deleteGroup,\n    updateGroup,\n    detailGroup\n} from './service'\nimport {createBrowserHistory} from 'history'\nconst history = createBrowserHistory()\nfunction* listGroupSaga(){\n    try {\n    const response = yield call(listGroups)\n    const {status, data} = response\n    if(status === 200) {\n        yield put({\n            type: Actions.LIST_GROUPS_SUCCESS,\n            payload:data \n        })\n    }\n    else throw new Error(\"Unable to fetch modifiers\")\n    }\n    catch(err){\n        console.log(err)\n        yield ({\n            type: Actions.LIST_GROUPS_ERROR,\n            error: err.message\n        })\n    }\n}\n\nfunction* addGroupSaga({payload}){\n    try{\n        const addReq = yield call(addGroup, payload)\n        if(addReq.status === 201){\n            yield put({\n                type: Actions.ADD_GROUP_SUCCESS,\n                payload: addReq.data\n            })\n        yield put({\n            type: Actions.LIST_GROUPS\n        }) \n        }\n        else throw new Error(\"Unable to add modifiers\")\n    }\n    catch (err){\n        console.log(err)\n        alert(err.message)\n        yield put({\n            type: Actions.ADD_GROUP_ERROR,\n            error: err.message\n        })\n    }\n}\n\nfunction* updateGroupSaga({payload}){\n    try{\n        const updateReq = yield call(updateGroup, payload)\n        const {status} = updateReq\n        if(status === 200) {\n            yield put({\n                type: Actions.UPDATE_GROUP_SUCCESS,\n                payload: 'success'\n            })\n        yield put({\n            type: Actions.LIST_GROUPS\n        })\n        history.go(-1)\n        }\n        else throw new Error(\"Unable to update modifier\")\n    }\n    catch(err){\n        console.log(err)\n        yield put({\n            type: Actions.LIST_GROUPS\n        })\n        yield put({\n            type: Actions.UPDATE_GROUP_SUCCESS,\n            error: err.message \n        })\n    }\n}\n/**\n * \n * @param {modifierId} modifier \n * Usually we dont user this function\n * as fetching a single item or option with id is not practical\n */\nfunction* detailGroupSaga({payload}){\n    try {\n        const req = yield call(detailGroup, payload.id)\n        const {status, data} = req\n        if(status === 200) {\n            yield put({\n                type: Actions.DETAIL_GROUP_SUCCESS,\n                payload: data\n            })\n        }\n        else throw new Error(\"Unable to fetch group\")\n    }\n    catch(err){\n        console.log(err)\n        yield put({\n            type: Actions.DETAIL_GROUP_ERROR,\n            error: err.message\n        })\n    }\n}\n\nfunction* deleteGroupSaga({payload}){\n    try {\n        const req = yield call(deleteGroup, payload)\n        const {status} = req\n        if(status === 204){\n            yield put({\n                type: Actions.DELETE_GROUP_SUCCESS\n            })\n            yield put({\n                type: Actions.LIST_GROUPS\n            })\n        }\n    }\n    catch (err){\n        console.log(err)\n        alert(err.message)\n            yield put({\n                type: Actions.LIST_GROUPS\n            })\n        yield put({\n            type: Actions.DELETE_GROUP_ERROR,\n            error: err.message\n        })\n    }\n}\n\nexport default function* optionSaga(){\n    yield takeEvery(Actions.ADD_GROUP, addGroupSaga)\n    yield takeEvery(Actions.LIST_GROUPS, listGroupSaga)\n    yield takeEvery(Actions.UPDATE_GROUP, updateGroupSaga)\n    yield takeEvery(Actions.DETAIL_GROUP, detailGroupSaga)\n    yield takeEvery(Actions.DELETE_GROUP, deleteGroupSaga)\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/utils/normalize.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/addItem.js",["261","262","263","264","265","266","267","268","269","270","271"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/selector.js",["272","273"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/orderTable/index.js",["274","275","276","277","278"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/index.js",["279","280","281","282","283","284","285"],"import React from \"react\";\nimport { map, assign, isEmpty } from \"lodash\";\nimport classname from \"classnames\";\nimport styles from \"./Options.module.sass\";\nimport { useHistory } from \"react-router-dom\";\nimport Table from \"components/table\";\nimport {normalizeText} from 'utils/normalize'\nimport { FaEdit, FaTrash, FaWindowClose } from \"react-icons/fa\";\nimport AddOption from './addOption'\nimport Modal from \"react-modal\";\nimport {useDispatch, useSelector} from 'react-redux'\nimport { listOptions,removeOption, setSelected as selectOption} from 'modules/options/actions'\nimport {loadingSelector, errorSelector, optionsSelector, messageSelector, nowOptionSelector} from 'modules/options/selector'\nexport default function Options(props) {\n  const dispatch = useDispatch()\n  const options = useSelector(optionsSelector)\n  const loading = useSelector(loadingSelector)\n  const option_error = useSelector(errorSelector)\n  const message  = useSelector(messageSelector)\n  React.useEffect(() => {\n\t  if(isEmpty(message) && isEmpty(options)) {\n\t  dispatch(listOptions())\n    }\n    },[dispatch, options] )\n  const [selected, setSelected] = React.useState();\n  const [open, setOpen] = React.useState(false);\n  const [list, setList] = React.useState([])\n  const history = useHistory()\n  const handleEdit = option => {\n    delete option.actions\n    dispatch(selectOption(option))\n    history.push(\"/addOption\")\n  }\n  const handleRemove = option => {\n    const confirm = window.confirm(`You are about to remove Option. This is permanant`)\n    if(!!confirm){\n      dispatch(removeOption(option.id))\n    }\n  }\n  const columns = [\n    {\n      Header: \"Name\",\n      accessor: d => normalizeText(d.name),\n    },\n    {\n      Header: \"Price\",\n      accessor: \"price\",\n    },\n    {\n      Header: \"Type\",\n      accessor: d => normalizeText(d.type) || \"-\",\n    },\n    {\n      Header: \"Modifiers\",\n      accessor: d => {\n        let names = map(d.modifiers, _ => {\n          return normalizeText(_.name)\n        })\n        return names.join(', ') || \"-\"\n      },\n    },\n    {\n      Header: \"Actions\",\n      accessor: \"actions\",\n    },\n  ];\n  map(options, (option) =>\n    assign(option, {\n      actions: (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <div style={{ padding: \"0 5px\" }}>\n            <button onClick={() => handleEdit(option)} className=\"transparentButton\">\n              <FaEdit />\n            </button>\n          </div>\n          <div>\n            <button onClick={() => handleRemove(option)} className=\"transparentButton\">\n              <FaTrash />\n            </button>\n          </div>\n        </div>\n      ),\n    })\n  );\n  const customStyles = {\n    content: {\n      margin: \"auto\",\n      height: \"80%\",\n      width: \"100%\",\n      maxWidth: \"600px\",\n      overflow: \"auto\",\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      bottom: \"auto\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n  return (\n    <div className={classname(styles.tableContainer)}>\n      <Modal isOpen={open} style={customStyles}>\n        <div>\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <button\n              onClick={() => setOpen(false)}\n              style={{ cursor: \"pointer\" }}\n              className=\"transparentButton\"\n            >\n              <FaWindowClose />\n            </button>\n          </div>\n          <AddOption setOpen={setOpen}  />\n        </div>\n      </Modal>\n      <div>\n        <Table\n          columns={columns}\n          data={options}\n          updateSelectItems={setSelected}\n        />\n\t {\n\t\t !isEmpty(message) && \n\t\t <div className=\"UcenterWithMargin IamInfo\">\n\t\t \t* Add Options to view in this table\n\t\t </div>\n\t }\n      </div>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", margin: \"20px\" }}\n      >\n        <button\n          onClick={() => setOpen(true)}\n          className=\"fix-me-right cta-button transparent-button\"\n        >\n          Add Option\n        </button>\n      </div>\n    </div>\n  );\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/App.js",["286"],"import \"./App.css\";\nimport Layout from \"Layouts\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport configureStore from \"createStore\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport {createBrowserHistory} from 'history'\n\n//history object\nconst { store, persistor } = configureStore();\nlet history = createBrowserHistory()\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\"Poppins\"],\n  },\n});\nwindow.onbeforeunload = function() {\n   localStorage.clear();\n}\nfunction App(props) {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <Router >\n            <Switch>\n              <Route path=\"/\" component={Layout}/>\n            </Switch>\n          </Router>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n}\nexport default App;\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/sagas.js",[],["287","288"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/selector.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/reducer.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/reducer.js",["289"],"import {fromJS, List, Map} from 'immutable';\nimport * as Actions from './constants';\nimport {isEmpty} from 'lodash'\nconst initState = fromJS({\n    loading: false,\n    error: '',\n    options: List(),\n    selected: List(),\n    optionToEdit: '',\n    sortedOptions: List(),\n    nowOption: Map(),\n    message: ''\n})\n\nexport default function optionReducer(state=initState, action) {\n    const {type, payload, error} = action\n    switch (type) {\n        case Actions.STATE_LOADING:\n            return state.set('loading', !state.get('loading'))\n        //add\n        case Actions.ADD_OPTION:\n            return state.set('loading', true).set('error', initState.get('error'))\n        case Actions.ADD_OPTION_SUCCESS:\n            return state.set('loading', false).set('error', initState.get('error')) \n        case Actions.ADD_OPTION_SUCCESS:\n            return state.set('loading', false).set('error', fromJS(error))\n        //remove\n        case Actions.REMOVE_OPTION:\n            return state.set('loading', true).set('error', initState.get('error'));\n        case Actions.REMOVE_OPTION_SUCCESS:\n            return state.set('loading', false)\n        case Actions.REMOVE_OPTION_ERROR:\n            return state.set('loading', false).set('error', fromJS(error))\n        //update\n        case Actions.UPDATE_OPTION:\n            return state.set('loading', true).set('error', initState.get('error'));\n        case Actions.UPDATE_OPTION_SUCCESS:\n            return state.set('loading', false)\n        case Actions.UPDATE_OPTION_ERROR:\n            return state.set('loading', false).set('error', fromJS(error))\n        //list\n        case Actions.LIST_OPTIONS:\n            return state.set('loading', true).set('error', initState.get('error'));\n        case Actions.LIST_OPTIONS_SUCCESS:\n             {\n\t\t     if(isEmpty(payload)) {\n\t\t\t     return state.set('loading', false).set('error', '').set('message', 'Add options to view')\n\t\t     }\n\t\t     else return state.set('loading', false).set('options', fromJS(payload)).set('message', '')\n\t     }\n        case Actions.LIST_OPTIONS_ERROR:\n            return state.set('loading', false).set('error', fromJS(error))\n        // set and remove option\n        case Actions.SET_SELECTED:\n            return state.set('selected', fromJS(payload))\n        case Actions.REMOVE_SELECTED:\n            return state.set('selected', initState.get('selected'))\n        default:\n            return state\n    } \n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/selector.js",["290"],"import {createSelector} from 'reselect'\nimport {isImmutable} from 'immutable'\nimport _ from 'lodash';\n\nconst options = state => state.options;\n\nexport const loadingSelector = createSelector(\n    options, \n    data => data.get('loading')\n)\n\nexport const errorSelector = createSelector(\n    options, \n    data => {\n        var error = data.get('error')\n        if(isImmutable(error)) {\n            return error.toJS()\n        }\n        else return error ? error : ''\n    }\n)\n\n export const optionsSelector= createSelector(\n     options,\n     data => {\n         var list = data.get('options')\n         if (isImmutable(list)) {\n             return list.toJS()\n         }\n         else return [] \n     }\n )\n\n export const selectedOptionsSelector = createSelector(\n     options, \n     data => {\n         var list = data.get('selected')\n         if(isImmutable(list)){\n             return list.toJS()\n         }\n         return []\n     }\n )\n\n export const nowOptionSelector = createSelector(\n     options,\n     data => {\n         var option = data.get('optionToEdit')\n         if(isImmutable(option)){\n             return option.toJS()\n         }\n         return {}\n     }\n )\n\n export const nowSortedArray = createSelector(\n     options, \n     data => {\n         var sorted = data.get('sortedOptions');\n         if (sorted.size > 0) {\n             return sorted.toJS();\n         }\n         else return []\n     }\n )\n\nexport const messageSelector = createSelector(\n\toptions,\n\tdata => data.get('message')\n)\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/selectors.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/addOption.js",["291","292","293","294","295","296"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Pizza/index.js",["297","298"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/reducer.js",[],["299","300"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/actions.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/Layouts/index.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/createStore.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/constants.js",[],["301","302"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/api.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/actions.js",[],{"ruleId":"303","severity":1,"message":"304","line":74,"column":9,"nodeType":"305","messageId":"306","endLine":74,"endColumn":16},{"ruleId":"303","severity":1,"message":"307","line":75,"column":9,"nodeType":"305","messageId":"306","endLine":75,"endColumn":14},{"ruleId":"303","severity":1,"message":"308","line":76,"column":9,"nodeType":"305","messageId":"306","endLine":76,"endColumn":24},{"ruleId":"303","severity":1,"message":"309","line":77,"column":9,"nodeType":"305","messageId":"306","endLine":77,"endColumn":21},{"ruleId":"303","severity":1,"message":"310","line":78,"column":9,"nodeType":"305","messageId":"306","endLine":78,"endColumn":24},{"ruleId":"311","severity":1,"message":"312","line":87,"column":6,"nodeType":"313","endLine":87,"endColumn":24,"suggestions":"314"},{"ruleId":"311","severity":1,"message":"315","line":92,"column":6,"nodeType":"313","endLine":92,"endColumn":24,"suggestions":"316"},{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","replacedBy":"320"},{"ruleId":"317","replacedBy":"321"},{"ruleId":"319","replacedBy":"322"},{"ruleId":"303","severity":1,"message":"323","line":5,"column":8,"nodeType":"305","messageId":"306","endLine":5,"endColumn":13},{"ruleId":"303","severity":1,"message":"324","line":21,"column":3,"nodeType":"305","messageId":"306","endLine":21,"endColumn":16},{"ruleId":"303","severity":1,"message":"325","line":24,"column":10,"nodeType":"305","messageId":"306","endLine":24,"endColumn":19},{"ruleId":"303","severity":1,"message":"326","line":25,"column":26,"nodeType":"305","messageId":"306","endLine":25,"endColumn":40},{"ruleId":"303","severity":1,"message":"327","line":26,"column":10,"nodeType":"305","messageId":"306","endLine":26,"endColumn":21},{"ruleId":"303","severity":1,"message":"328","line":27,"column":10,"nodeType":"305","messageId":"306","endLine":27,"endColumn":25},{"ruleId":"303","severity":1,"message":"304","line":45,"column":9,"nodeType":"305","messageId":"306","endLine":45,"endColumn":16},{"ruleId":"303","severity":1,"message":"329","line":47,"column":10,"nodeType":"305","messageId":"306","endLine":47,"endColumn":18},{"ruleId":"303","severity":1,"message":"330","line":49,"column":10,"nodeType":"305","messageId":"306","endLine":49,"endColumn":17},{"ruleId":"311","severity":1,"message":"331","line":55,"column":6,"nodeType":"313","endLine":55,"endColumn":23,"suggestions":"332"},{"ruleId":"303","severity":1,"message":"307","line":65,"column":9,"nodeType":"305","messageId":"306","endLine":65,"endColumn":14},{"ruleId":"303","severity":1,"message":"333","line":66,"column":9,"nodeType":"305","messageId":"306","endLine":66,"endColumn":22},{"ruleId":"303","severity":1,"message":"309","line":67,"column":9,"nodeType":"305","messageId":"306","endLine":67,"endColumn":21},{"ruleId":"303","severity":1,"message":"334","line":75,"column":10,"nodeType":"305","messageId":"306","endLine":75,"endColumn":19},{"ruleId":"303","severity":1,"message":"335","line":75,"column":21,"nodeType":"305","messageId":"306","endLine":75,"endColumn":33},{"ruleId":"303","severity":1,"message":"336","line":76,"column":9,"nodeType":"305","messageId":"306","endLine":76,"endColumn":21},{"ruleId":"311","severity":1,"message":"337","line":111,"column":6,"nodeType":"313","endLine":111,"endColumn":16,"suggestions":"338"},{"ruleId":"339","severity":1,"message":"340","line":146,"column":17,"nodeType":"341","endLine":146,"endColumn":35},{"ruleId":"317","replacedBy":"342"},{"ruleId":"319","replacedBy":"343"},{"ruleId":"344","severity":1,"message":"345","line":62,"column":9,"nodeType":"346","messageId":"347","endLine":63,"endColumn":58},{"ruleId":"344","severity":1,"message":"345","line":64,"column":9,"nodeType":"346","messageId":"347","endLine":65,"endColumn":68},{"ruleId":"311","severity":1,"message":"312","line":30,"column":5,"nodeType":"313","endLine":30,"endColumn":26,"suggestions":"348"},{"ruleId":"303","severity":1,"message":"329","line":31,"column":10,"nodeType":"305","messageId":"306","endLine":31,"endColumn":18},{"ruleId":"303","severity":1,"message":"307","line":32,"column":11,"nodeType":"305","messageId":"306","endLine":32,"endColumn":16},{"ruleId":"303","severity":1,"message":"349","line":33,"column":12,"nodeType":"305","messageId":"306","endLine":33,"endColumn":16},{"ruleId":"303","severity":1,"message":"350","line":22,"column":7,"nodeType":"305","messageId":"306","endLine":22,"endColumn":12},{"ruleId":"303","severity":1,"message":"351","line":34,"column":7,"nodeType":"305","messageId":"306","endLine":34,"endColumn":16},{"ruleId":"303","severity":1,"message":"352","line":66,"column":9,"nodeType":"305","messageId":"306","endLine":66,"endColumn":14},{"ruleId":"311","severity":1,"message":"353","line":132,"column":6,"nodeType":"313","endLine":132,"endColumn":16,"suggestions":"354"},{"ruleId":"311","severity":1,"message":"355","line":133,"column":21,"nodeType":"356","endLine":133,"endColumn":34},{"ruleId":"303","severity":1,"message":"357","line":176,"column":5,"nodeType":"305","messageId":"306","endLine":176,"endColumn":19},{"ruleId":"311","severity":1,"message":"358","line":224,"column":6,"nodeType":"313","endLine":224,"endColumn":41,"suggestions":"359"},{"ruleId":"303","severity":1,"message":"360","line":7,"column":9,"nodeType":"305","messageId":"306","endLine":7,"endColumn":22},{"ruleId":"303","severity":1,"message":"361","line":7,"column":24,"nodeType":"305","messageId":"306","endLine":7,"endColumn":33},{"ruleId":"303","severity":1,"message":"362","line":7,"column":35,"nodeType":"305","messageId":"306","endLine":7,"endColumn":47},{"ruleId":"303","severity":1,"message":"363","line":7,"column":49,"nodeType":"305","messageId":"306","endLine":7,"endColumn":57},{"ruleId":"311","severity":1,"message":"364","line":20,"column":5,"nodeType":"313","endLine":20,"endColumn":18,"suggestions":"365"},{"ruleId":"366","severity":1,"message":"367","line":10,"column":1,"nodeType":"368","endLine":73,"endColumn":2},{"ruleId":"303","severity":1,"message":"369","line":3,"column":9,"nodeType":"305","messageId":"306","endLine":3,"endColumn":16},{"ruleId":"303","severity":1,"message":"370","line":5,"column":45,"nodeType":"305","messageId":"306","endLine":5,"endColumn":57},{"ruleId":"303","severity":1,"message":"371","line":10,"column":10,"nodeType":"305","messageId":"306","endLine":10,"endColumn":20},{"ruleId":"303","severity":1,"message":"325","line":12,"column":10,"nodeType":"305","messageId":"306","endLine":12,"endColumn":19},{"ruleId":"303","severity":1,"message":"327","line":13,"column":10,"nodeType":"305","messageId":"306","endLine":13,"endColumn":21},{"ruleId":"303","severity":1,"message":"372","line":22,"column":22,"nodeType":"305","messageId":"306","endLine":22,"endColumn":35},{"ruleId":"303","severity":1,"message":"326","line":23,"column":19,"nodeType":"305","messageId":"306","endLine":23,"endColumn":33},{"ruleId":"303","severity":1,"message":"373","line":24,"column":3,"nodeType":"305","messageId":"306","endLine":24,"endColumn":18},{"ruleId":"303","severity":1,"message":"374","line":27,"column":22,"nodeType":"305","messageId":"306","endLine":27,"endColumn":37},{"ruleId":"303","severity":1,"message":"328","line":28,"column":3,"nodeType":"305","messageId":"306","endLine":28,"endColumn":18},{"ruleId":"303","severity":1,"message":"304","line":100,"column":9,"nodeType":"305","messageId":"306","endLine":100,"endColumn":16},{"ruleId":"303","severity":1,"message":"334","line":108,"column":10,"nodeType":"305","messageId":"306","endLine":108,"endColumn":19},{"ruleId":"303","severity":1,"message":"375","line":3,"column":8,"nodeType":"305","messageId":"306","endLine":3,"endColumn":9},{"ruleId":"303","severity":1,"message":"376","line":3,"column":13,"nodeType":"305","messageId":"306","endLine":3,"endColumn":19},{"ruleId":"303","severity":1,"message":"377","line":12,"column":9,"nodeType":"305","messageId":"306","endLine":12,"endColumn":22},{"ruleId":"303","severity":1,"message":"378","line":13,"column":9,"nodeType":"305","messageId":"306","endLine":13,"endColumn":23},{"ruleId":"303","severity":1,"message":"379","line":14,"column":9,"nodeType":"305","messageId":"306","endLine":14,"endColumn":20},{"ruleId":"303","severity":1,"message":"380","line":14,"column":22,"nodeType":"305","messageId":"306","endLine":14,"endColumn":33},{"ruleId":"311","severity":1,"message":"381","line":32,"column":52,"nodeType":"313","endLine":32,"endColumn":58,"suggestions":"382"},{"ruleId":"303","severity":1,"message":"383","line":13,"column":75,"nodeType":"305","messageId":"306","endLine":13,"endColumn":92},{"ruleId":"303","severity":1,"message":"304","line":17,"column":9,"nodeType":"305","messageId":"306","endLine":17,"endColumn":16},{"ruleId":"303","severity":1,"message":"309","line":18,"column":9,"nodeType":"305","messageId":"306","endLine":18,"endColumn":21},{"ruleId":"311","severity":1,"message":"312","line":24,"column":7,"nodeType":"313","endLine":24,"endColumn":26,"suggestions":"384"},{"ruleId":"303","severity":1,"message":"329","line":25,"column":10,"nodeType":"305","messageId":"306","endLine":25,"endColumn":18},{"ruleId":"303","severity":1,"message":"385","line":27,"column":10,"nodeType":"305","messageId":"306","endLine":27,"endColumn":14},{"ruleId":"303","severity":1,"message":"386","line":27,"column":16,"nodeType":"305","messageId":"306","endLine":27,"endColumn":23},{"ruleId":"303","severity":1,"message":"387","line":17,"column":5,"nodeType":"305","messageId":"306","endLine":17,"endColumn":12},{"ruleId":"317","replacedBy":"388"},{"ruleId":"319","replacedBy":"389"},{"ruleId":"344","severity":1,"message":"345","line":25,"column":9,"nodeType":"346","messageId":"347","endLine":26,"endColumn":75},{"ruleId":"303","severity":1,"message":"375","line":3,"column":8,"nodeType":"305","messageId":"306","endLine":3,"endColumn":9},{"ruleId":"303","severity":1,"message":"390","line":17,"column":3,"nodeType":"305","messageId":"306","endLine":17,"endColumn":18},{"ruleId":"303","severity":1,"message":"391","line":27,"column":10,"nodeType":"305","messageId":"306","endLine":27,"endColumn":17},{"ruleId":"303","severity":1,"message":"392","line":66,"column":9,"nodeType":"305","messageId":"306","endLine":66,"endColumn":20},{"ruleId":"303","severity":1,"message":"393","line":72,"column":10,"nodeType":"305","messageId":"306","endLine":72,"endColumn":22},{"ruleId":"303","severity":1,"message":"394","line":72,"column":24,"nodeType":"305","messageId":"306","endLine":72,"endColumn":31},{"ruleId":"311","severity":1,"message":"395","line":98,"column":6,"nodeType":"313","endLine":98,"endColumn":27,"suggestions":"396"},{"ruleId":"303","severity":1,"message":"397","line":2,"column":25,"nodeType":"305","messageId":"306","endLine":2,"endColumn":33},{"ruleId":"303","severity":1,"message":"398","line":8,"column":12,"nodeType":"305","messageId":"306","endLine":8,"endColumn":21},{"ruleId":"317","replacedBy":"399"},{"ruleId":"319","replacedBy":"400"},{"ruleId":"317","replacedBy":"401"},{"ruleId":"319","replacedBy":"402"},"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'options_loading' is assigned a value but never used.","'option_error' is assigned a value but never used.","'options_message' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.","ArrayExpression",["403"],"React Hook React.useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["404"],"no-native-reassign",["405"],"no-negated-in-lhs",["406"],["405"],["406"],"'items' is defined but never used.","'errorSelector' is defined but never used.","'listGroup' is defined but never used.","'groupsSelector' is defined but never used.","'listOptions' is defined but never used.","'optionsSelector' is defined but never used.","'selected' is assigned a value but never used.","'newItem' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'itemInfo'. Either include it or remove the dependency array.",["407"],"'option_loding' is assigned a value but never used.","'showOrder' is assigned a value but never used.","'setShowOrder' is assigned a value but never used.","'customStyles' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["408"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["405"],["406"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected",["409"],"'form' is assigned a value but never used.","'style' is assigned a value but never used.","'newStyles' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook React.useMemo has a missing dependency: 'columns'. Either include it or remove the dependency array.",["410"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'visibleColumns' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'selectedFlatRows'. Either include it or remove the dependency array.",["411"],"'FaObjectGroup' is defined but never used.","'FaSitemap' is defined but never used.","'FaPizzaSlice' is defined but never used.","'FaDiceD6' is defined but never used.","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["412"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'isEmpty' is defined but never used.","'isEmptyArray' is defined but never used.","'useHistory' is defined but never used.","'group_loading' is defined but never used.","'messageSelector' is defined but never used.","'options_loading' is defined but never used.","'_' is defined but never used.","'create' is defined but never used.","'sortedOptions' is defined but never used.","'nowSortedArray' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","React Hook React.useEffect has a missing dependency: 'updateCurrentRows'. Either include it or remove the dependency array. If 'updateCurrentRows' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["413"],"'nowOptionSelector' is defined but never used.",["414"],"'list' is assigned a value but never used.","'setList' is assigned a value but never used.","'history' is assigned a value but never used.",["405"],["406"],"'loadingSelector' is defined but never used.","'Persist' is defined but never used.","'mod_loading' is assigned a value but never used.","'showSelected' is assigned a value but never used.","'setShow' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'modifierMessage' and 'modifiers'. Either include them or remove the dependency array.",["415"],"'Redirect' is defined but never used.","'component' is assigned a value but never used.",["405"],["406"],["405"],["406"],{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},"no-global-assign","no-unsafe-negation",{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},"Update the dependencies array to be: [dispatch, groups, message]",{"range":"438","text":"439"},"Update the dependencies array to be: [dispatch, groups, options]",{"range":"440","text":"441"},"Update the dependencies array to be: [dispatch, itemInfo, items]",{"range":"442","text":"443"},"Update the dependencies array to be: [dispatch, nowGroup]",{"range":"444","text":"445"},"Update the dependencies array to be: [dispatch, message, modifiers]",{"range":"446","text":"447"},"Update the dependencies array to be: [columns, noAction]",{"range":"448","text":"449"},"Update the dependencies array to be: [updateSelectItems, selectedRowIds, selectedFlatRows]",{"range":"450","text":"451"},"Update the dependencies array to be: [activeRoute, history]",{"range":"452","text":"453"},"Update the dependencies array to be: [rows, updateCurrentRows]",{"range":"454","text":"455"},"Update the dependencies array to be: [dispatch, message, options]",{"range":"456","text":"457"},"Update the dependencies array to be: [nowOption, dispatch, modifierMessage, modifiers]",{"range":"458","text":"459"},[2513,2531],"[dispatch, groups, message]",[2651,2669],"[dispatch, groups, options]",[1717,1734],"[dispatch, itemInfo, items]",[3093,3103],"[dispatch, nowGroup]",[1086,1107],"[dispatch, message, modifiers]",[3282,3292],"[columns, noAction]",[5552,5587],"[updateSelectItems, selectedRowIds, selectedFlatRows]",[702,715],"[activeRoute, history]",[1075,1081],"[rows, updateCurrentRows]",[1069,1088],"[dispatch, message, options]",[3062,3083],"[nowOption, dispatch, modifierMessage, modifiers]"]