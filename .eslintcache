[{"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/App.js":"1","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Pizza/index.js":"2","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/constants.js":"3","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/addGroup.js":"4","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/addModifier.js":"5","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/index.js":"6","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Grid/GridContainer.js":"7","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/selector.js":"8","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reportWebVitals.js":"9","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reducers.js":"10","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/index.js":"11","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/index.js":"12","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/orderTable/index.js":"13","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/actions.js":"14","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/reducer.js":"15","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/routes.js":"16","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/Layouts/index.js":"17","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/utils/normalize.js":"18","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/addItem.js":"19","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/table/index.js":"20","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/createStore.js":"21","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Grid/GridItem.js":"22","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/index.js":"23","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/sidebarRoutes.js":"24"},{"size":912,"mtime":1615192472950,"results":"25","hashOfConfig":"26"},{"size":1064,"mtime":1613558109343,"results":"27","hashOfConfig":"28"},{"size":1051,"mtime":1613727067867,"results":"29","hashOfConfig":"28"},{"size":11206,"mtime":1613727067871,"results":"30","hashOfConfig":"26"},{"size":9035,"mtime":1614824818649,"results":"31","hashOfConfig":"28"},{"size":3433,"mtime":1614824531180,"results":"32","hashOfConfig":"26"},{"size":854,"mtime":1613727067867,"results":"33","hashOfConfig":"34"},{"size":1414,"mtime":1613727067867,"results":"35","hashOfConfig":"26"},{"size":362,"mtime":1613558109347,"results":"36","hashOfConfig":"26"},{"size":189,"mtime":1613727067867,"results":"37","hashOfConfig":"26"},{"size":3839,"mtime":1613727067871,"results":"38","hashOfConfig":"28"},{"size":3176,"mtime":1613727067871,"results":"39","hashOfConfig":"28"},{"size":4596,"mtime":1613727067867,"results":"40","hashOfConfig":"28"},{"size":598,"mtime":1613727067867,"results":"41","hashOfConfig":"28"},{"size":1955,"mtime":1613727067867,"results":"42","hashOfConfig":"26"},{"size":1857,"mtime":1613558109347,"results":"43","hashOfConfig":"26"},{"size":367,"mtime":1615192430968,"results":"44","hashOfConfig":"26"},{"size":136,"mtime":1613558109347,"results":"45","hashOfConfig":"28"},{"size":13934,"mtime":1613976604869,"results":"46","hashOfConfig":"28"},{"size":8900,"mtime":1613979900206,"results":"47","hashOfConfig":"28"},{"size":1130,"mtime":1613558109347,"results":"48","hashOfConfig":"26"},{"size":676,"mtime":1613727067867,"results":"49","hashOfConfig":"26"},{"size":1184,"mtime":1615192396706,"results":"50","hashOfConfig":"26"},{"size":1487,"mtime":1615192465866,"results":"51","hashOfConfig":"26"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ds2j73",{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"sy1zlp",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"sqonsz",{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/App.js",["105"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Pizza/index.js",["106","107"],"import React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport styles from './Pizza.module.sass'\nimport classname from 'classnames';\nimport routes from 'routes';\nimport Group from 'views/Groups'\nexport default function Pizza(props){\n    const {component} = props;\n    const getRoutes = (routes) => {\n        return routes.map((prop, key) => {\n          if (prop.children) {\n            return getRoutes(prop.children);\n          }\n          if (prop.layout === \"/pizza\") {\n              let _routes = <Route\n                path={prop.path}\n                component={prop.component}\n                key={key}\n              />\n              return _routes\n          } else {\n            return null;\n          }\n        });\n      };\n    return (\n        <div className={classname(styles.pizza)}>\n          {/* <div className={classname(styles.topBar)}>\n\n          </div> */}\n           <Switch>\n               {getRoutes(routes())}\n               <Route path=\"/groups\" component={Group}/>\n           </Switch> \n        </div>\n    )\n}",["108","109"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/addGroup.js",["110","111","112"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/addModifier.js",["113","114","115"],"import React from 'react';\nimport classname from 'classnames'\nimport styles from './Modifiers.module.sass';\nimport { Formik, ErrorMessage, Field, Form, FieldArray } from 'formik';\nimport * as yup from 'yup';\nimport {FaPlusSquare, FaMinusSquare} from 'react-icons/fa'\nimport _ from 'lodash';\nimport axios from 'axios'\nconst initialValues = {\n    name: '',\n    options: [\n        {\n            name: '',\n            price: '',\n        },\n    ],\n};\nconst validationSchema = yup.object({\n    name: yup.string().required('Name is required')\n}) \nexport default function AddModifier(props) {\n    return (\n        <div className={classname(styles.container)}>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"1.5rem\", color: \"red\" }}>Add Modifier</p>\n            </div>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={async (values) => {\n                    let promise = axios.post('http://127.0.0.1:8000/api/modifiers/', values)\n                    promise.then(res => {\n                        alert('Modifier added succesfully')\n                    }).catch(err => {\n                        console.log(err)\n                    })\n                }}\n            >\n                {({ values }) => (\n                    <Form>\n                        <div>\n                            <div className={classname(styles.formControl)}>\n                                <div>\n                                    <label htmlFor=\"name\" className={classname(styles.formLable)}>Modifier</label>\n                                </div>\n                                <div>\n                                    <Field\n                                        name=\"name\"\n                                        type=\"text\"\n                                        className={classname(styles.formInput)}\n                                    />\n                                <ErrorMessage\n                                    name={\"name\"}\n                                    component=\"div\"\n                                    className=\"field-error\"\n                                    style={{color: 'red'}}\n                                />\n                                </div>\n                            </div>\n                            <div>\n                                <div className={classname(styles.titleWithNoBox)}>\n                                    <h4>\n                                        Options\n                                    </h4>\n                                </div>\n                                <FieldArray name=\"options\">\n                                    {({ insert, remove, push, form }) => (\n                                        <div>\n                                            {values.options.length > 0 &&\n                                                values.options.map((option, index) => (\n                                                    <div className={classname(styles.horizontalContent)} key={index}>\n                                                        <div className={classname(styles.formControl)}>\n                                                            <div>\n                                                                <label className={classname(styles.formLable)} htmlFor={`options.${index}.name`}>Name</label>\n                                                            </div>\n                                                            <div>\n                                                                <Field\n                                                                    name={`options.${index}.name`}\n                                                                    type=\"text\"\n                                                                    className={classname(styles.formInput)}\n                                                                />\n                                                            </div>\n                                                            <ErrorMessage\n                                                                name={`options.${index}.name`}\n                                                                component=\"div\"\n                                                                className=\"field-error\"\n                                                            />\n                                                        </div>\n                                                        <div className={classname(styles.formControl)}>\n                                                            <div>\n                                                                <label className={classname(styles.formLable)} htmlFor={`options.${index}.price`}>Price</label>\n                                                            </div>\n                                                            <div>\n                                                                <Field\n                                                                    name={`options.${index}.price`}\n                                                                    type=\"number\"\n                                                                    step=\"0.01\"\n                                                                    className={classname(styles.formInput)}\n                                                                />\n                                                            </div>\n                                                            <ErrorMessage\n                                                                name={`options.${index}.price`}\n                                                                component=\"div\"\n                                                                className=\"field-error\"\n                                                            />\n                                                        </div>\n                                                        <div className={classname(styles.button_container)}>\n                                                            {index === 0 ? null :\n                                                                <div style={{padding:'10px'}}>\n                                                                    <button\n                                                                        type=\"button\"\n                                                                        className=\"secondary\"\n                                                                        onClick={() => remove(index)}\n                                                                        className={classname(styles.common_button)}\n                                                                    >\n                                                                        <FaMinusSquare style={{fontSize: '24px'}}/>\n                                                                    </button>\n                                                                </div>\n                                                            }\n                                                            {\n                                                                index !== 0 ? null :\n                                                                    <div style={{padding: '10px'}}>\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"secondary\"\n                                                                            onClick={() => insert(0, { name: '', price: '' })}\n                                                                            className={classname(styles.common_button)}\n                                                                        >\n                                                                        <FaPlusSquare style={{fontSize: '24px'}}/>\n                                                                        </button>\n                                                                    </div>\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                        </div>\n                                    )}\n                                </FieldArray>\n                            </div>\n                        </div>\n                        <div className={classname(styles.saveButtonContainer)}>\n                            <button type=\"submit\" className={classname(styles.ctaButton)}>Save Option</button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/index.js",["116","117"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Grid/GridContainer.js",[],["118","119"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/selector.js",["120"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reportWebVitals.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reducers.js",["121"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/index.js",["122"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/index.js",["123","124","125"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/orderTable/index.js",["126","127","128","129","130"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/actions.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/reducer.js",["131"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/routes.js",["132"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/Layouts/index.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/utils/normalize.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/addItem.js",["133","134"],"import React from \"react\";\nimport classname from \"classnames\";\nimport styles from \"./Items.module.sass\";\nimport _ from \"lodash\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport Groups from \"../Groups/groups.json\";\nimport Options from \"../Options/options.json\";\nimport { normalizeText as normalize } from \"utils/normalize\";\nimport Modal from \"react-modal\";\nimport Switch from \"react-switch\";\nimport Table from \"components/table\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  FaRegObjectGroup,\n  FaEdit,\n} from \"react-icons/fa\";\nimport OrderTable from \"components/orderTable\";\nlet tableData = Groups.concat(Options);\ntableData = _.sortBy(tableData, [\"name\"]);\nconst initialValues = {\n  name: \"\",\n  description: \"\",\n  image_url: \"\",\n  price: \"\",\n  type: \"\",\n  stock: \"\",\n};\nconst validationSchema = yup.object({\n  name: yup.string().required(\"Name is required\"),\n  description: yup.string().optional(),\n  price: yup.number().required(\"Price is required\"),\n  type: yup.string().optional(),\n  stock: yup.number().optional(),\n});\nconst columns = [\n  {\n    Header: \"Name\",\n    accessor: (d) => {\n      if (!_.isUndefined(d.min_required)) {\n        return (\n          <div>\n            {d.name}\n            <FaRegObjectGroup style={{ padding: \"0 5px\" }} />\n          </div>\n        );\n      } else {\n        return d.name;\n      }\n    },\n  },\n  {\n    Header: \"Price\",\n    accessor: (d) => {\n      if (!_.isUndefined(d.min_required)) {\n        return d.price_default;\n      } else return d.price;\n    },\n  },\n  {\n    Header: \"Min\",\n    accessor: (d) => {\n      if (!_.isUndefined(d.min_required)) {\n        return d.min_required;\n      } else return \"-\";\n    },\n  },\n  {\n    Header: \"Max\",\n    accessor: (d) => {\n      if (!_.isUndefined(d.min_required)) {\n        return d.max_allowed;\n      } else return \"-\";\n    },\n  },\n  {\n    Header: \"Order\",\n    accessor: (d) => {\n      if (!_.isUndefined(d.min_required)) {\n        return d.display_order;\n      } else return \"-\";\n    },\n  },\n  {\n    Header: \"Actions\",\n    accessor: \"actions\",\n  },\n];\nexport default function AddOption(props) {\n  const [active, setActive] = React.useState(true);\n  const [step1, setStep1] = React.useState(false);\n  const [selected, setSelected] = React.useState([]);\n  const [formValues, setForm] = React.useState();\n  const [nowArray, setNowArray] = React.useState();\n  const history = useHistory();\n  _.map(tableData, (item) =>\n    _.assign(item, {\n      actions: (\n        <div style={{ display: \"flex\" }}>\n          <div style={{ padding: \"0 5px\" }}>\n            <button>\n              <FaEdit />\n            </button>\n          </div>\n        </div>\n      ),\n    })\n  );\n  const handleSaveItem = () => {\n      // we get all the row props, insted we only want original\n    const originalArray = _.map(nowArray, n => n.original); \n    const values = formValues;\n    const finalItem = _.assign({}, values, {options: originalArray})\n    props.setItem(finalItem)\n    setForm(null);\n  };\n  return (\n    <div>\n      <div className={classname(styles.container)} style={{ flex: 1 }}>\n        {!step1 && (\n          <div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"1.5rem\", color: \"red\" }}>Add Item</p>\n            </div>\n            <Formik\n              initialValues={_.merge(initialValues, formValues)}\n              validationSchema={validationSchema}\n              onSubmit={async (values) => {\n                setForm(values);\n                setStep1(true);\n              }}\n            >\n              {({ values }) => (\n                <Form>\n                  <div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"name\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Item\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"name\"\n                          type=\"text\"\n                          className={classname(styles.formInput)}\n                          autoFocus={true}\n                        />\n                        <ErrorMessage\n                          name={\"name\"}\n                          component=\"div\"\n                          style={{ color: \"red\" }}\n                        />\n                      </div>\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"price\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Price\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"price\"\n                          type=\"number\"\n                          className={classname(styles.formInput)}\n                          min={0}\n                          step={0.01}\n                        />\n                        <ErrorMessage\n                          name={\"price\"}\n                          component=\"div\"\n                          style={{ color: \"red\" }}\n                        />\n                      </div>\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"type\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Type\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"type\"\n                          type=\"text\"\n                          className={classname(styles.formInput)}\n                        />\n                      </div>\n                      <ErrorMessage\n                        name={\"type\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"stock\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                         Stock\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"stock\"\n                          type=\"number\"\n                          className={classname(styles.formInput)}\n                        />\n                      </div>\n                      <ErrorMessage\n                        name={\"type\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"active\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Active\n                        </label>\n                      </div>\n                      <div>\n                        <Field name=\"active\">\n                          {({ field, form, meta }) => (\n                            <Switch\n                              name=\"active\"\n                              {...field}\n                              onChange={(e) => {\n                                setActive(e);\n                              }}\n                              checked={active}\n                            />\n                          )}\n                        </Field>\n                      </div>\n                      <ErrorMessage\n                        name={\"type\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div\n                      className={classname(\n                        styles.imageField,\n                        styles.formControl\n                      )}\n                    >\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"modifier_image\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Image\n                        </label>\n                      </div>\n                      <div>\n                        <input\n                          type=\"file\"\n                          name=\"modifier_image\"\n                          max={1}\n                          className={classname(styles.formInput)}\n                        />\n                      </div>\n                    </div>\n                    <div className={classname(styles.titleWithNoBox)}>\n                      <h4>Description</h4>\n                    </div>\n                    <div className={classname(styles.descriptionBox)}>\n                      <div>\n                        <Field\n                          as=\"textarea\"\n                          name=\"description\"\n                          type=\"text\"\n                          className={classname(styles.descriptionContainer)}\n                        />\n                      </div>\n                      <ErrorMessage\n                        name={\"description\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div className={classname(styles.saveButtonContainer)}>\n                      <button\n                        type=\"submit\"\n                        className={classname(styles.ctaButton)}\n                      >\n                        Add Options\n                      </button>\n                    </div>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        )}\n        {step1 && (\n          <div className={classname(styles.tableContainer)}>\n            <div className={classname(styles.tableFlex)}>\n              <Table\n                title={\"Options and groups\"}\n                columns={columns}\n                data={tableData}\n                updateSelectItems={setSelected}\n                withCheckBox={true}\n                noAction={true}\n                preSelected={_.map(selected, (s) => s.name)}\n              />\n            </div>\n            <div>\n              <div className={classname(styles.margin5)}>\n                <button\n                  className={classname(styles.button200)}\n                  onClick={() => history.push(\"/addGroup\")}\n                >\n                  Add OptionGroup\n                </button>\n              </div>\n              <div>\n                <button\n                  className={classname(styles.button200)}\n                  onClick={() => history.push(\"/addOption\")}\n                >\n                  Add Option\n                </button>\n              </div>\n            </div>\n            <div className={classname(styles.between)}>\n              <div>\n                <button\n                  onClick={() => setStep1(false)}\n                  className={classname(styles.ctaButton)}\n                >\n                  Back\n                </button>\n              </div>\n              <div>\n                <button\n                  disabled={!selected.length}\n                  className={classname(styles.ctaButton)}\n                  onClick={() => (selected.length ? setStep1(false) : null)}\n                >\n                  Add to Item\n                </button>\n                <div style={{ fontSize: \"10px\" }}>\n                  {!selected.length && (\n                    <p>\n                      <span style={{ color: \"red\" }}>*</span> Select alteast 1\n                      option\n                    </p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n      {selected.length && !step1 ? (\n        <div style={{ flex: 1 }}>\n          <div>\n            <OrderTable\n              columns={columns}\n              data={selected}\n              updateCurrentRows={setNowArray}\n            />\n          </div>\n          <div\n            style={{\n              margin: \"10px auto\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <button\n              className={styles.ctaButton}\n              onClick={() => {\n                props.setOpen(false);\n                handleSaveItem();\n              }}\n            >\n              Save Item\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/table/index.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/createStore.js",["162","163"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Grid/GridItem.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/index.js",["164"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/sidebarRoutes.js",["165","166","167"],{"ruleId":"168","severity":1,"message":"169","line":7,"column":3,"nodeType":"170","messageId":"171","endLine":7,"endColumn":11},{"ruleId":"168","severity":1,"message":"169","line":2,"column":25,"nodeType":"170","messageId":"171","endLine":2,"endColumn":33},{"ruleId":"168","severity":1,"message":"172","line":8,"column":12,"nodeType":"170","messageId":"171","endLine":8,"endColumn":21},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"168","severity":1,"message":"177","line":8,"column":27,"nodeType":"170","messageId":"171","endLine":8,"endColumn":36},{"ruleId":"168","severity":1,"message":"178","line":50,"column":10,"nodeType":"170","messageId":"171","endLine":50,"endColumn":18},{"ruleId":"168","severity":1,"message":"179","line":52,"column":9,"nodeType":"170","messageId":"171","endLine":52,"endColumn":21},{"ruleId":"168","severity":1,"message":"180","line":7,"column":8,"nodeType":"170","messageId":"171","endLine":7,"endColumn":9},{"ruleId":"181","severity":1,"message":"182","line":114,"column":73,"nodeType":"183","endLine":114,"endColumn":116},{"ruleId":"181","severity":1,"message":"182","line":127,"column":77,"nodeType":"183","endLine":127,"endColumn":120},{"ruleId":"168","severity":1,"message":"184","line":14,"column":10,"nodeType":"170","messageId":"171","endLine":14,"endColumn":18},{"ruleId":"168","severity":1,"message":"185","line":18,"column":9,"nodeType":"170","messageId":"171","endLine":18,"endColumn":16},{"ruleId":"173","replacedBy":"186"},{"ruleId":"175","replacedBy":"187"},{"ruleId":"168","severity":1,"message":"180","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":9},{"ruleId":"188","severity":1,"message":"189","line":4,"column":1,"nodeType":"190","endLine":8,"endColumn":2},{"ruleId":"168","severity":1,"message":"191","line":6,"column":8,"nodeType":"170","messageId":"171","endLine":6,"endColumn":18},{"ruleId":"168","severity":1,"message":"177","line":7,"column":27,"nodeType":"170","messageId":"171","endLine":7,"endColumn":36},{"ruleId":"168","severity":1,"message":"184","line":27,"column":12,"nodeType":"170","messageId":"171","endLine":27,"endColumn":20},{"ruleId":"168","severity":1,"message":"185","line":30,"column":11,"nodeType":"170","messageId":"171","endLine":30,"endColumn":18},{"ruleId":"168","severity":1,"message":"192","line":12,"column":9,"nodeType":"170","messageId":"171","endLine":12,"endColumn":22},{"ruleId":"168","severity":1,"message":"193","line":13,"column":9,"nodeType":"170","messageId":"171","endLine":13,"endColumn":23},{"ruleId":"168","severity":1,"message":"194","line":14,"column":9,"nodeType":"170","messageId":"171","endLine":14,"endColumn":20},{"ruleId":"168","severity":1,"message":"195","line":14,"column":22,"nodeType":"170","messageId":"171","endLine":14,"endColumn":33},{"ruleId":"196","severity":1,"message":"197","line":32,"column":52,"nodeType":"198","endLine":32,"endColumn":58,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":23,"column":9,"nodeType":"202","messageId":"203","endLine":24,"endColumn":75},{"ruleId":"188","severity":1,"message":"189","line":9,"column":1,"nodeType":"190","endLine":70,"endColumn":2},{"ruleId":"168","severity":1,"message":"177","line":9,"column":27,"nodeType":"170","messageId":"171","endLine":9,"endColumn":36},{"ruleId":"168","severity":1,"message":"204","line":10,"column":8,"nodeType":"170","messageId":"171","endLine":10,"endColumn":13},{"ruleId":"168","severity":1,"message":"205","line":14,"column":8,"nodeType":"170","messageId":"171","endLine":14,"endColumn":19},{"ruleId":"168","severity":1,"message":"206","line":15,"column":8,"nodeType":"170","messageId":"171","endLine":15,"endColumn":14},{"ruleId":"168","severity":1,"message":"207","line":16,"column":8,"nodeType":"170","messageId":"171","endLine":16,"endColumn":16},{"ruleId":"168","severity":1,"message":"208","line":17,"column":8,"nodeType":"170","messageId":"171","endLine":17,"endColumn":21},{"ruleId":"168","severity":1,"message":"209","line":18,"column":8,"nodeType":"170","messageId":"171","endLine":18,"endColumn":16},{"ruleId":"168","severity":1,"message":"210","line":27,"column":7,"nodeType":"170","messageId":"171","endLine":27,"endColumn":12},{"ruleId":"168","severity":1,"message":"211","line":39,"column":7,"nodeType":"170","messageId":"171","endLine":39,"endColumn":16},{"ruleId":"168","severity":1,"message":"212","line":71,"column":9,"nodeType":"170","messageId":"171","endLine":71,"endColumn":14},{"ruleId":"168","severity":1,"message":"213","line":132,"column":10,"nodeType":"170","messageId":"171","endLine":132,"endColumn":22},{"ruleId":"168","severity":1,"message":"214","line":132,"column":24,"nodeType":"170","messageId":"171","endLine":132,"endColumn":39},{"ruleId":"168","severity":1,"message":"215","line":133,"column":10,"nodeType":"170","messageId":"171","endLine":133,"endColumn":20},{"ruleId":"168","severity":1,"message":"216","line":133,"column":22,"nodeType":"170","messageId":"171","endLine":133,"endColumn":38},{"ruleId":"196","severity":1,"message":"217","line":139,"column":6,"nodeType":"198","endLine":139,"endColumn":16,"suggestions":"218"},{"ruleId":"196","severity":1,"message":"219","line":140,"column":21,"nodeType":"220","endLine":140,"endColumn":34},{"ruleId":"168","severity":1,"message":"221","line":184,"column":5,"nodeType":"170","messageId":"171","endLine":184,"endColumn":13},{"ruleId":"168","severity":1,"message":"222","line":186,"column":5,"nodeType":"170","messageId":"171","endLine":186,"endColumn":14},{"ruleId":"168","severity":1,"message":"223","line":187,"column":5,"nodeType":"170","messageId":"171","endLine":187,"endColumn":17},{"ruleId":"168","severity":1,"message":"224","line":188,"column":5,"nodeType":"170","messageId":"171","endLine":188,"endColumn":20},{"ruleId":"168","severity":1,"message":"225","line":189,"column":5,"nodeType":"170","messageId":"171","endLine":189,"endColumn":16},{"ruleId":"168","severity":1,"message":"226","line":190,"column":5,"nodeType":"170","messageId":"171","endLine":190,"endColumn":16},{"ruleId":"168","severity":1,"message":"227","line":191,"column":5,"nodeType":"170","messageId":"171","endLine":191,"endColumn":13},{"ruleId":"168","severity":1,"message":"228","line":192,"column":14,"nodeType":"170","messageId":"171","endLine":192,"endColumn":23},{"ruleId":"168","severity":1,"message":"229","line":192,"column":25,"nodeType":"170","messageId":"171","endLine":192,"endColumn":33},{"ruleId":"168","severity":1,"message":"230","line":233,"column":7,"nodeType":"170","messageId":"171","endLine":233,"endColumn":21},{"ruleId":"231","severity":1,"message":"232","line":236,"column":9,"nodeType":"233","messageId":"234","endLine":236,"endColumn":18},{"ruleId":"168","severity":1,"message":"235","line":237,"column":7,"nodeType":"170","messageId":"171","endLine":237,"endColumn":23},{"ruleId":"196","severity":1,"message":"236","line":244,"column":6,"nodeType":"198","endLine":244,"endColumn":41,"suggestions":"237"},{"ruleId":"168","severity":1,"message":"238","line":19,"column":7,"nodeType":"170","messageId":"171","endLine":19,"endColumn":21},{"ruleId":"188","severity":1,"message":"239","line":22,"column":1,"nodeType":"190","endLine":31,"endColumn":2},{"ruleId":"240","severity":1,"message":"241","line":18,"column":25,"nodeType":"242","endLine":18,"endColumn":102},{"ruleId":"168","severity":1,"message":"243","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":21},{"ruleId":"196","severity":1,"message":"244","line":18,"column":5,"nodeType":"198","endLine":18,"endColumn":18,"suggestions":"245"},{"ruleId":"240","severity":1,"message":"241","line":31,"column":25,"nodeType":"242","endLine":31,"endColumn":91},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'component' is assigned a value but never used.","no-native-reassign",["246"],"no-negated-in-lhs",["247"],"'normalize' is defined but never used.","'nowArray' is assigned a value but never used.","'customStyles' is assigned a value but never used.","'_' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'selected' is assigned a value but never used.","'history' is assigned a value but never used.",["246"],["247"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'OrderTable' is defined but never used.","'sortedOptions' is defined but never used.","'nowSortedArray' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'updateCurrentRows'. Either include it or remove the dependency array. If 'updateCurrentRows' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["248"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'Modal' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'GridContainer' is defined but never used.","'GridItem' is defined but never used.","'style' is assigned a value but never used.","'newStyles' is assigned a value but never used.","'count' is assigned a value but never used.","'numberOfRows' is assigned a value but never used.","'setNumberOfRows' is assigned a value but never used.","'pageSelect' is assigned a value but never used.","'handlePageSelect' is assigned a value but never used.","React Hook React.useMemo has a missing dependency: 'columns'. Either include it or remove the dependency array.",["249"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'nextPage' is assigned a value but never used.","'pageCount' is assigned a value but never used.","'previousPage' is assigned a value but never used.","'canPreviousPage' is assigned a value but never used.","'canNextPage' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'gotoPage' is assigned a value but never used.","'pageIndex' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'pageSelectData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","'numberOfRowsData' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'selectedFlatRows'. Either include it or remove the dependency array.",["250"],"'sagaMiddleware' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useLocation' is defined but never used.","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["251"],"no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [rows, updateCurrentRows]",{"range":"260","text":"261"},"Update the dependencies array to be: [columns, noAction]",{"range":"262","text":"263"},"Update the dependencies array to be: [updateSelectItems, selectedRowIds, selectedFlatRows]",{"range":"264","text":"265"},"Update the dependencies array to be: [activeRoute, history]",{"range":"266","text":"267"},[1075,1081],"[rows, updateCurrentRows]",[3669,3679],"[columns, noAction]",[6273,6308],"[updateSelectItems, selectedRowIds, selectedFlatRows]",[588,601],"[activeRoute, history]"]