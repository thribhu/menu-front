[{"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/addGroup.js":"1","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/saga.js":"2","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/index.js":"3","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/App.js":"4","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/index.js":"5","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/index.js":"6","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/constants.js":"7","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/saga.js":"8","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/reducer.js":"9","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/selector.js":"10","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/addItem.js":"11","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/table/index.js":"12","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Grid/GridContainer.js":"13","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/addModifier.js":"14","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/actions.js":"15","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/constants.js":"16","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/reducer.js":"17","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/index.js":"18","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/saga.js":"19","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/createStore.js":"20","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/sagas.js":"21","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/reducer.js":"22","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/saga.js":"23","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/index.js":"24","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/constants.js":"25","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/service.js":"26","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/routes.js":"27","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/addOption.js":"28","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/selector.js":"29","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/actions.js":"30","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/selector.js":"31","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/selectors.js":"32","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reducers.js":"33","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/service.js":"34","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/service.js":"35","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/utils/normalize.js":"36","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/actions.js":"37","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Grid/GridItem.js":"38","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reportWebVitals.js":"39","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Pizza/index.js":"40","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/service.js":"41","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/api.js":"42","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/constants.js":"43","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/index.js":"44","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/actions.js":"45"},{"size":12371,"mtime":1616665014155,"results":"46","hashOfConfig":"47"},{"size":3529,"mtime":1616605355524,"results":"48","hashOfConfig":"47"},{"size":501,"mtime":1616605548782,"results":"49","hashOfConfig":"47"},{"size":976,"mtime":1616605559010,"results":"50","hashOfConfig":"47"},{"size":5840,"mtime":1616605623827,"results":"51","hashOfConfig":"47"},{"size":4857,"mtime":1616646084562,"results":"52","hashOfConfig":"47"},{"size":1245,"mtime":1616607434989,"results":"53","hashOfConfig":"54"},{"size":3152,"mtime":1616607568212,"results":"55","hashOfConfig":"47"},{"size":2151,"mtime":1616610407377,"results":"56","hashOfConfig":"54"},{"size":993,"mtime":1616610638303,"results":"57","hashOfConfig":"47"},{"size":14922,"mtime":1616664664390,"results":"58","hashOfConfig":"47"},{"size":8632,"mtime":1617115942151,"results":"59","hashOfConfig":"47"},{"size":854,"mtime":1613727067867,"results":"60","hashOfConfig":"47"},{"size":10100,"mtime":1617099875991,"results":"61","hashOfConfig":"47"},{"size":878,"mtime":1616666784631,"results":"62","hashOfConfig":"47"},{"size":1193,"mtime":1617092078497,"results":"63","hashOfConfig":"47"},{"size":2338,"mtime":1617092115846,"results":"64","hashOfConfig":"47"},{"size":4939,"mtime":1617096342554,"results":"65","hashOfConfig":"47"},{"size":3831,"mtime":1617100104467,"results":"66","hashOfConfig":"47"},{"size":1135,"mtime":1616526875447,"results":"67","hashOfConfig":"54"},{"size":334,"mtime":1616526875451,"results":"68","hashOfConfig":"47"},{"size":2207,"mtime":1617116062739,"results":"69","hashOfConfig":"47"},{"size":3344,"mtime":1617117731044,"results":"70","hashOfConfig":"47"},{"size":1184,"mtime":1615192396706,"results":"71","hashOfConfig":"47"},{"size":1562,"mtime":1616526875447,"results":"72","hashOfConfig":"47"},{"size":897,"mtime":1616668365692,"results":"73","hashOfConfig":"54"},{"size":1850,"mtime":1616526875451,"results":"74","hashOfConfig":"47"},{"size":11290,"mtime":1617125134254,"results":"75","hashOfConfig":"47"},{"size":1012,"mtime":1616604710696,"results":"76","hashOfConfig":"47"},{"size":817,"mtime":1616604710692,"results":"77","hashOfConfig":"47"},{"size":1407,"mtime":1616526875451,"results":"78","hashOfConfig":"47"},{"size":914,"mtime":1616526875447,"results":"79","hashOfConfig":"47"},{"size":422,"mtime":1616526875451,"results":"80","hashOfConfig":"47"},{"size":821,"mtime":1616526875447,"results":"81","hashOfConfig":"47"},{"size":794,"mtime":1616526875447,"results":"82","hashOfConfig":"47"},{"size":136,"mtime":1613558109347,"results":"83","hashOfConfig":"47"},{"size":812,"mtime":1616526875447,"results":"84","hashOfConfig":"47"},{"size":676,"mtime":1613727067867,"results":"85","hashOfConfig":"47"},{"size":362,"mtime":1613558109347,"results":"86","hashOfConfig":"47"},{"size":1064,"mtime":1613558109343,"results":"87","hashOfConfig":"47"},{"size":846,"mtime":1616526875451,"results":"88","hashOfConfig":"47"},{"size":72,"mtime":1616526875415,"results":"89","hashOfConfig":"47"},{"size":1306,"mtime":1616526875447,"results":"90","hashOfConfig":"47"},{"size":3686,"mtime":1616604697395,"results":"91","hashOfConfig":"47"},{"size":794,"mtime":1616606876890,"results":"92","hashOfConfig":"47"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},"ds2j73",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sy1zlp",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/addGroup.js",["190","191","192","193","194","195"],"import React from \"react\";\nimport classname from \"classnames\";\nimport styles from \"./Groups.module.sass\";\nimport _, { isEmpty } from \"lodash\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport { normalizeText as normalize } from \"utils/normalize\";\nimport OrderTable from \"components/orderTable\";\nimport Table from \"components/table\";\nimport { useHistory } from \"react-router-dom\";\nimport {useDispatch, useSelector} from 'react-redux'\nimport {addGroup, updateGroup, removeSelected} from 'modules/groups/actions'\nimport {loadingSelector,errorSelector, selectedSelector } from 'modules/groups/selector'\nimport {listOptions} from 'modules/options/actions'\nimport {loadingSelector as optionLoading, optionsSelector, errorSelector as optionError} from 'modules/options/selector'\nconst columns = [\n  {\n    Header: \"Image\",\n    accessor: \"image\",\n  },\n  {\n    Header: \"Name\",\n    accessor: d => normalize(d.name),\n  },\n  {\n    Header: \"Price\",\n    accessor: d => d.price || 0,\n  },\n  {\n    Header: \"Type\",\n    accessor: d => normalize(d.type),\n  },\n];\nconst initialValues = {\n  name: \"\",\n  description: \"\",\n  price: 2,\n  options: [],\n  min_required: 1,\n  max_allowed: 1,\n  order: 100,\n};\nconst validationSchema = yup.object({\n  name: yup.string().required(\"A valid option must have name\"),\n  description: yup.string().optional(),\n  image_url: yup.string().optional(),\n  price: yup.number().required(\"A valid option must have price\"),\n  type: yup.string().optional(),\n});\nexport default function AddGroup(props) {\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const options = useSelector(optionsSelector)\n  const loading = useSelector(loadingSelector)\n  const error = useSelector(errorSelector)\n  const option_loding = useSelector(optionLoading)\n  const option_error = useSelector(optionError)\n  const nowGroup = useSelector(selectedSelector)\n  const [step1, setStep1] = React.useState(false);\n  const [selected, setSelected] = React.useState(!isEmpty(nowGroup) ? nowGroup.options : []);\n  const [formValues, setForm] = React.useState();\n  const [nowArray, setNowArray] = React.useState();\n  const [showOrder, setShowOrder] = React.useState(false)\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n  if(isEmpty(options)){\n    dispatch(listOptions())\n  }\n  const handleSaveItem = () => {\n      const group = _.assign({}, formValues, {options: nowArray.map(i => i.original.id)})\n    if(!isEmpty(nowGroup)) {\n      dispatch(updateGroup(group))\n    }\n    else {\n      dispatch(addGroup(group))\n    }\n    setForm('')\n    setNowArray([])\n    setSelected([])\n    if(props.setOpen) {\n        props.setOpen(false)\n    }\n  };\n  React.useEffect(() => {\n    return (() => dispatch(removeSelected()))\n  }, [nowGroup])\n  return (\n    <div>\n      <div className={classname(styles.container)} style={{ flex: 1 }}>\n        {!step1 && (\n          <div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"1.5rem\", color: \"red\" }}>{!isEmpty(nowGroup) ? 'Update Group' : 'Add Group'}</p>\n            </div>\n            <Formik\n              initialValues={!isEmpty(nowGroup) ? nowGroup : _.merge(initialValues, formValues)}\n              enableReinitialize\n              validationSchema={validationSchema}\n              onSubmit={async (values) => {\n                setForm(values);\n                setStep1(true);\n                setShowOrder(true)\n              }}\n            >\n              {({ values }) => (\n                <Form>\n                  <div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"name\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Group\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"name\"\n                          type=\"text\"\n                          className={classname(styles.formInput)}\n                        />\n                        <ErrorMessage\n                          name={\"name\"}\n                          component=\"div\"\n                          style={{ color: \"red\" }}\n                        />\n                      </div>\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"price\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Price\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"price\"\n                          type=\"number\"\n                          className={classname(styles.formInput)}\n                          min={0}\n                          step={0.01}\n                        />\n                        <ErrorMessage\n                          name={\"price\"}\n                          component=\"div\"\n                          style={{ color: \"red\" }}\n                        />\n                      </div>\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"min_requied\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Min Required\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"min_required\"\n                          type=\"number\"\n                          className={classname(styles.formInput)}\n                        />\n                      </div>\n                      <ErrorMessage\n                        name={\"min_required\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"max_allowed\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Max Allowed\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"max_allowed\"\n                          type=\"number\"\n                          className={classname(styles.formInput)}\n                        />\n                      </div>\n                      <ErrorMessage\n                        name={\"max_allowed\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"order\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Display order\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"order\"\n                          type=\"number\"\n                          className={classname(styles.formInput)}\n                        />\n                      </div>\n                      <ErrorMessage\n                        name={\"order\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div className={classname(styles.titleWithNoBox)}>\n                      <h4>Description</h4>\n                    </div>\n                    <div className={classname(styles.descriptionBox)}>\n                      <div>\n                        <Field\n                          as=\"textarea\"\n                          name=\"description\"\n                          type=\"text\"\n                          className={classname(styles.descriptionContainer)}\n                        />\n                      </div>\n                      <ErrorMessage\n                        name={\"description\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div className={classname(styles.saveButtonContainer)}>\n                      <button\n                        type=\"submit\"\n                        className={classname(styles.ctaButton)}\n                      >\n                         Choose Options\n                      </button>\n                    </div>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        )}\n        {step1 && (\n          <div className={classname(styles.tableContainer)}>\n            <div className={classname(styles.tableFlex)}>\n              <Table\n                title={\"Options\"}\n                columns={columns}\n                data={options}\n                updateSelectItems={setSelected}\n                withCheckBox={true}\n                noAction={true}\n                preSelected={selected}\n              />\n            </div>\n            <div>\n              <div>\n                <button\n                  className={classname(styles.button200)}\n                  onClick={() => history.push(\"/addOption\")}\n                >\n                  Add Option\n                </button>\n              </div>\n            </div>\n            <div className={classname(styles.between)}>\n              <div>\n                <button\n                  onClick={() => setStep1(false)}\n                  className={classname(styles.ctaButton)}\n                >\n                  Back\n                </button>\n              </div>\n              <div>\n                <button\n                  disabled={!selected.length}\n                  className={classname(styles.ctaButton)}\n                  onClick={() => (selected.length ? setStep1(false) : null)}\n                >\n                  Save\n                </button>\n                <div style={{ fontSize: \"10px\" }}>\n                  {!selected.length && (\n                    <p>\n                      <span style={{ color: \"red\" }}>*</span> Select alteast 1\n                      option\n                    </p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n      {selected.length && !step1 && showOrder ? (\n        <div style={{ flex: 1 }}>\n          <div>\n            <OrderTable\n              columns={columns}\n              data={selected}\n              updateCurrentRows={setNowArray}\n            />\n          </div>\n          <div\n            style={{\n              margin: \"10px auto\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <button\n              className={styles.ctaButton}\n              onClick={() => {\n                handleSaveItem();\n              }}\n            >\n              Save Group\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n",["196","197"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/saga.js",[],["198","199"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/index.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/App.js",["200"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/index.js",["201","202","203","204","205"],"import React from \"react\";\nimport classname from \"classnames\";\nimport styles from \"./Groups.module.sass\";\nimport Modal from \"react-modal\";\nimport Table from \"components/table\";\nimport AddGroup from \"views/Groups/addGroup\";\nimport _, { isEmpty, map } from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport { FaTrash, FaEdit, FaWindowClose } from \"react-icons/fa\";\nimport { normalizeText } from \"utils/normalize\";\nimport {listGroup, removeGroup, selectGroup} from 'modules/groups/actions'\nimport { loadingSelector, errorSelector, listSelector, messageSelector } from 'modules/groups/selector'\nimport {listOptions} from 'modules/options/actions'\nimport {loadingSelector as optionLoading, optionsSelector, errorSelector as optionError} from 'modules/options/selector'\nimport {useDispatch, useSelector} from 'react-redux'\nconst groupColumns = [\n  {\n    Header: \"Group\",\n    accessor: d => normalizeText(d.name) || \"-\",\n    width: 50,\n  },\n  {\n    Header: \"Display Order\",\n    accessor: d => d.order || \"-\",\n  },\n  {\n    Header: \"Price\",\n    accessor: d => d.price || 0,\n  },\n  {\n    Header: \"Max Allowed\",\n    accessor: d => d.max_allowed || 0,\n  },\n  {\n    Header: \"Min Required\",\n    accessor: d => d.min_required || 0,\n  },\n  {\n    Header: \"Options\",\n    accessor: d => {\n      let names = _.map(d.options, _ => normalizeText(_.name))\n      return names.join(\", \") || \"-\"\n    }\n  },\n  {\n    Header: \"Actions\",\n    accessor: \"actions\",\n  },\n];\nconst columns = [\n  {\n    Header: \"Image\",\n    accessor: \"image\",\n  },\n  {\n    Header: \"Name\",\n    accessor: \"name\",\n  },\n  {\n    Header: \"Price\",\n    accessor: \"price\",\n  },\n  {\n    Header: \"Type\",\n    accessor: \"type\",\n  },\n];\nexport default function GroupsTable() {\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const groups = useSelector(listSelector)\n  const message = useSelector(messageSelector)\n  const options = useSelector(optionsSelector)\n  const loading = useSelector(loadingSelector)\n  const error = useSelector(errorSelector)\n  const options_loading = useSelector(optionLoading)\n  const option_error = useSelector(optionError)\n  const [selected, setSelected] = React.useState([]);\n  const [form, setForm] = React.useState();\n  const [open, setOpen] = React.useState(false);\n  const [step1, setSetp1] = React.useState(false);\n  if(isEmpty(groups) && !message){\n    dispatch(listGroup())\n  }\n  if(isEmpty(options)){\n    dispatch(listOptions())\n  }\n  const customStyles = {\n    content: {\n      margin: \"auto\",\n      height: \"80%\",\n      width: \"100%\",\n      maxWidth: \"600px\",\n      overflow: \"auto\",\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      bottom: \"auto\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n  const handleEdit = group => {\n    delete group.actions\n    dispatch(selectGroup(group))\n    history.push(\"/addGroup\")\n  }\n  const handleRemove = group => {\n    const confirm = window.confirm(`You are about to remove ${group.name}. This is not reversable`)\n    if(confirm) {\n      dispatch(removeGroup(group.id))\n    }\n  }\n  _.map(groups, (option) =>\n    _.assign(option, {\n      actions: (\n        <div style={{ display: \"flex\" }}>\n          <div style={{ padding: \"0 5px\" }}>\n            <button onClick={() => handleEdit(option)}>\n              <FaEdit />\n            </button>\n          </div>\n          <div>\n            <button onClick={() => handleRemove(option)}>\n              <FaTrash />\n            </button>\n          </div>\n        </div>\n      ),\n    })\n  );\n  return (\n    <div className={classname(styles.tableContainer)}>\n      <Modal\n        isOpen={open}\n        onRequestClose={() => {\n          setOpen(false);\n          setSetp1(false);\n        }}\n        style={customStyles}\n      >\n        <div>\n\n                    <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                        <button onClick={() => setOpen(false)} style={{ cursor: 'pointer' }} className={classname(styles.transparent)}>\n                            <FaWindowClose />\n                        </button>\n                    </div>\n        {step1 && (\n          <div>\n            <button onClick={() => setSetp1(false)}>Back</button>\n          </div>\n        )}\n        {!step1 ? (\n          <AddGroup\n            next={setSetp1}\n            formMethod={setForm}\n            currentForm={form}\n            setOpen={setOpen}\n          />\n        ) : (\n          <div>\n            <Table\n              updateSelectItems={setSelected}\n              columns={columns}\n              data={options}\n            />\n            <div className={classname(styles.buttonGroup)}>\n              <div>\n                <button className={classname(styles.ctaButton)}>\n                  New Option\n                </button>\n              </div>\n              <div>\n                <button\n                  className={classname(styles.ctaButton)}\n                  style={{ width: \"150px\" }}\n                  onClick={() =>\n                    history.push(\"/addGroup\", { currentForm: form, selected })\n                  }\n                >\n                  Add options to group\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n        </div>\n      </Modal>\n      <div>\n        <Table\n          updateSelectItems={setSelected}\n          columns={groupColumns}\n          data={groups}\n        />\n        {\n          !isEmpty(message) && \n          <div className=\"UcenterWithMargin IamInfo\">\n           * Add modifiers to view in this table \n          </div>\n        }\n      </div>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", margin: \"20px\" }}\n      >\n        <button\n          onClick={() => setOpen(true)}\n          className={classname(styles.ctaButton)}\n        >\n          Add Group\n        </button>\n      </div>\n    </div>\n  );\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/index.js",["206","207","208","209","210","211","212","213","214","215","216"],"import React from 'react';\nimport classname from 'classnames'\nimport styles from './Items.module.sass';\nimport { useHistory } from 'react-router-dom'\nimport items from './items.json'\nimport Table from 'components/table'\nimport { normalizeText } from 'utils/normalize'\nimport { FaEdit, FaTrash, FaWindowClose } from 'react-icons/fa'\nimport _, { isEmpty } from 'lodash';\nimport Modal from 'react-modal';\nimport AddItem from './addItem'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {listItems, removeItem, setSelected} from 'modules/items/actions'\nimport {listSelector, loadingSelector, errorSelector, itemInfoSelector} from 'modules/items/selector'\nimport {listGroup} from 'modules/groups/actions'\nimport {listSelector as groupsSelector} from 'modules/groups/selector'\nimport {listOptions} from 'modules/options/actions'\nimport {optionsSelector} from 'modules/options/selector'\nconst customStyles = {\n    content : {\n        margin: 'auto',\n        height: '80%',\n        width: '100%',\n        maxWidth: '600px',\n        overflow: 'auto',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        bottom: 'auto',\n        transform: 'translate(-50%, -50%)'\n    }\n  };\nexport default function Items() {\n    const dispatch = useDispatch()\n    const items = useSelector(listSelector)\n    const groups = useSelector(groupsSelector)\n    const options = useSelector(optionsSelector)\n    const loading = useSelector(loadingSelector)\n    const error = useSelector(errorSelector)\n    const itemInfo = useSelector(itemInfoSelector)\n    const [selected, setSelected] = React.useState()\n    const [open, setOpen] = React.useState(false)\n    const [newItem, setItem] = React.useState()\n    const history = useHistory()\n    if(isEmpty(items)) {\n        dispatch(listItems())\n    }\n    const handleEdit = item => {\n        delete item.actions\n        dispatch(setSelected(item))\n        history.push(\"/addItem\")\n    }\n    const handleDelete = item => {\n        const confirm = window.confirm(\"You are about to remove an item. This is permanant\")\n        if (!!confirm){\n            dispatch(removeItem(item.id))\n        }\n    }\n    const columns = [\n        {\n            Header: \"Name\",\n            accessor: d => normalizeText(d.name)\n        },\n        {\n            Header: 'Type',\n            accessor: d => normalizeText(d.type) || \"-\"\n        },\n        {\n            Header: 'Price',\n            accessor: d => d.price || '-'\n        },\n        {\n            Header: 'Active',\n            accessor: d => d.active === 1 ? \"True\" : \"False\"\n        },\n        {\n            Header: \"Stock\",\n            accessor: d => d.stock || \"-\"\n        },\n        {\n            Header: \"Options\",\n            accessor: d => {\n                let names = _.map(d.options, _ => normalizeText(_.name))\n                return names.join(\", \") || \"-\"\n            }\n        },\n        {\n            Header: \"Groups\",\n            accessor: d => {\n                let names = _.map(d.option_groups, _ => normalizeText(_.name))\n                return names.join(\", \") || \"-\"\n            }\n        },\n        {\n            Header: \"Actions\",\n            accessor: \"actions\"\n        }\n    ]\n    _.map(items, item => _.assign(item, {\n        actions: (\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <div style={{ padding: '0 5px' }} >\n                    <button className={classname(styles.transparent)} onClick={() => handleEdit(item)}>\n                        <FaEdit />\n                    </button>\n                </div>\n                <div>\n                    <button className={classname(styles.transparent)} onClick= {() => handleDelete(item)}>\n                        <FaTrash />\n                    </button>\n                </div>\n            </div>\n        )\n    }))\n    return (\n        <div className={classname(styles.tableContainer)}>\n            <Modal\n                isOpen={open}\n                style={customStyles}\n            >\n                <div>\n                    <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                        <button onClick={() => setOpen(false)} style={{ cursor: 'pointer' }} className={classname(styles.transparent)}>\n                            <FaWindowClose />\n                        </button>\n                    </div>\n                    <AddItem setOpen={setOpen} setItem={setItem}/>\n                </div>\n            </Modal>\n            <div>\n                <Table columns={columns} data={items} updateSelectItems={setSelected} />\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'center', margin: '20px' }}>\n                <button onClick={() => setOpen(true)} className={classname(styles.ctaButton)}>\n                    Add Item\n              </button>\n            </div>\n        </div>\n    )\n}",["217","218"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/reducer.js",["219"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/selector.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/addItem.js",["220","221","222","223","224","225","226","227","228","229"],"import React from \"react\";\nimport classname from \"classnames\";\nimport styles from \"./Items.module.sass\";\nimport _, { isEmpty } from \"lodash\";\nimport { Formik, Form, Field, ErrorMessage, isEmptyArray } from \"formik\";\nimport * as yup from \"yup\";\nimport { normalizeText as normalize } from \"utils/normalize\";\nimport Switch from \"react-switch\";\nimport Table from \"components/table\";\nimport { useHistory } from \"react-router-dom\";\nimport {useDispatch, useSelector} from 'react-redux'\nimport {listGroup} from 'modules/groups/actions'\nimport {listOptions} from 'modules/options/actions'\nimport {addItem, updateItem, removeSelected} from 'modules/items/actions'\nimport {\n  errorSelector as group_error,\n  loadingSelector as group_loading,\n  listSelector as groupsSelector,\n  messageSelector\n} from 'modules/groups/selector'\nimport {\n  errorSelector as options_error,\n  loadingSelector as options_loading,\n  optionsSelector\n} from 'modules/options/selector'\nimport {\n  selectedSelector,\n  loadingSelector,\n  errorSelector\n} from 'modules/items/selector'\nimport {\n  FaRegObjectGroup,\n} from \"react-icons/fa\";\nimport OrderTable from \"components/orderTable\";\nconst initialValues = {\n  name: \"\",\n  description: \"\",\n  image_url: \"\",\n  price: \"\",\n  type: \"\",\n  stock: \"\",\n};\nconst validationSchema = yup.object({\n  name: yup.string().required(\"Name is required\"),\n  description: yup.string().optional(),\n  price: yup.number().required(\"Price is required\"),\n  type: yup.string().optional(),\n  stock: yup.number().optional(),\n});\nconst columns = [\n  {\n    Header: \"Name\",\n    accessor: (d) => {\n      if (!_.isUndefined(d.min_required)) {\n        return (\n          <div>\n            {normalize(d.name)}\n            <FaRegObjectGroup style={{ padding: \"0 5px\" }} />\n          </div>\n        );\n      } else {\n        return d.name;\n      }\n    },\n  },\n  {\n    Header: \"Price\",\n    accessor: (d) => {\n      if (!_.isUndefined(d.min_required)) {\n        return d.price_default;\n      } else return d.price;\n    },\n  },\n  {\n    Header: \"Min\",\n    accessor: (d) => {\n      if (!_.isUndefined(d.min_required)) {\n        return d.min_required;\n      } else return \"-\";\n    },\n  },\n  {\n    Header: \"Max\",\n    accessor: (d) => {\n      if (!_.isUndefined(d.min_required)) {\n        return d.max_allowed;\n      } else return \"-\";\n    },\n  },\n];\nexport default function AddItem(props) {\n  const dispatch = useDispatch()\n  const groups = useSelector(groupsSelector)\n  const options = useSelector(optionsSelector)\n  const nowItem = useSelector(selectedSelector)\n  const groupError = useSelector(group_error) \n  const optionError = useSelector(options_error)\n  const error = useSelector(errorSelector)\n  const loading = useSelector(loadingSelector)\n  const groupLoading = useSelector(group_loading)\n  const optionLoading = useSelector(options_loading)\n  const groupInfo = useSelector(messageSelector)\n  if (isEmpty(groups) && isEmpty(groupInfo)) {\n    dispatch(listGroup())\n  }\n  if (isEmpty(options)){\n    dispatch(listOptions())\n  }\n  /*\n  React.useEffect(() => {\n    return () => {\n      dispatch(removeSelected())\n    }\n  }, [nowItem])\n  */\n  const [active, setActive] = React.useState(true);\n  const [step1, setStep1] = React.useState(false);\n  const [selected, setSelected] = React.useState([]);\n  const [formValues, setForm] = React.useState();\n  const [nowArray, setNowArray] = React.useState();\n  const [showOrder, setShow] = React.useState(false)\n  const history = useHistory();\n  const tableData = groups.concat(options)\n  const handleSaveItem = () => {\n      // we get all the row props, insted we only want original\n    const originalArray = _.map(nowArray, n => n.original); \n    const values = formValues;\n    const finalItem = _.assign({}, values, {options: originalArray})\n    if(!isEmpty(nowItem)){\n      dispatch(updateItem(finalItem))\n    }\n    else {\n      dispatch(addItem(finalItem))\n    }\n    setForm(null);\n  };\n  return (\n    <div>\n      <div className={classname(styles.container)} style={{ flex: 1 }}>\n        {!step1 && (\n          <div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"1.5rem\", color: \"red\" }}>{!isEmpty(nowItem) ? 'Update Item' : 'Add Item'}</p>\n            </div>\n            <Formik\n              initialValues={!isEmpty(nowItem) ? nowItem :  _.merge(initialValues, formValues)}\n              validationSchema={validationSchema}\n              onSubmit={async (values) => {\n                setForm(values);\n                setStep1(true);\n              }}\n            >\n              {({ values }) => (\n                <Form>\n                  <div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"name\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Item\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"name\"\n                          type=\"text\"\n                          className={classname(styles.formInput)}\n                          autoFocus={true}\n                        />\n                        <ErrorMessage\n                          name={\"name\"}\n                          component=\"div\"\n                          style={{ color: \"red\" }}\n                        />\n                      </div>\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"price\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Price\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"price\"\n                          type=\"number\"\n                          className={classname(styles.formInput)}\n                          min={0}\n                          step={0.01}\n                        />\n                        <ErrorMessage\n                          name={\"price\"}\n                          component=\"div\"\n                          style={{ color: \"red\" }}\n                        />\n                      </div>\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"type\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Type\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"type\"\n                          type=\"text\"\n                          className={classname(styles.formInput)}\n                        />\n                      </div>\n                      <ErrorMessage\n                        name={\"type\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"stock\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                         Stock\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"stock\"\n                          type=\"number\"\n                          className={classname(styles.formInput)}\n                        />\n                      </div>\n                      <ErrorMessage\n                        name={\"type\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"active\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Active\n                        </label>\n                      </div>\n                      <div>\n                        <Field name=\"active\">\n                          {({ field, form, meta }) => (\n                            <Switch\n                              name=\"active\"\n                              {...field}\n                              onChange={(e) => {\n                                setActive(e);\n                              }}\n                              checked={active}\n                            />\n                          )}\n                        </Field>\n                      </div>\n                      <ErrorMessage\n                        name={\"type\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div\n                      className={classname(\n                        styles.imageField,\n                        styles.formControl\n                      )}\n                    >\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"modifier_image\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Image\n                        </label>\n                      </div>\n                      <div>\n                        <input\n                          type=\"file\"\n                          name=\"modifier_image\"\n                          max={1}\n                          className={classname(styles.formInput)}\n                        />\n                      </div>\n                    </div>\n                    <div className={classname(styles.titleWithNoBox)}>\n                      <h4>Description</h4>\n                    </div>\n                    <div className={classname(styles.descriptionBox)}>\n                      <div>\n                        <Field\n                          as=\"textarea\"\n                          name=\"description\"\n                          type=\"text\"\n                          className={classname(styles.descriptionContainer)}\n                        />\n                      </div>\n                      <ErrorMessage\n                        name={\"description\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div className={classname(styles.saveButtonContainer)}>\n                      <button\n                        type=\"submit\"\n                        className={classname(styles.ctaButton)}\n                      >\n                        Choose Options\n                      </button>\n                    </div>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        )}\n        {step1 && (\n          <div className={classname(styles.tableContainer)}>\n            <div className={classname(styles.tableFlex)}>\n              <Table\n                title={\"Options and groups\"}\n                columns={columns}\n                data={tableData}\n                updateSelectItems={setSelected}\n                withCheckBox={true}\n                noAction={true}\n                preSelected={selected}\n              />\n            </div>\n            {/**\n            <div>\n              <div className={classname(styles.margin5)}>\n                <button\n                  className={classname(styles.button200)}\n                  onClick={() => history.push(\"/addGroup\")}\n                >\n                  Add OptionGroup\n                </button>\n              </div>\n              <div>\n                <button\n                  className={classname(styles.button200)}\n                  onClick={() => history.push(\"/addOption\")}\n                >\n                  Add Option\n                </button>\n              </div>\n            </div>\n            */}\n            <div className={classname(styles.between)}>\n              <div>\n                <button\n                  onClick={() => setStep1(false)}\n                  className={classname(styles.ctaButton)}\n                >\n                  Back\n                </button>\n              </div>\n              <div>\n                <button\n                  disabled={!selected.length}\n                  className={classname(styles.ctaButton)}\n                  onClick={() => (selected.length ? setStep1(false) : null)}\n                >\n                  Add to Item\n                </button>\n                <div style={{ fontSize: \"10px\" }}>\n                  {!selected.length && (\n                    <p>\n                      <span style={{ color: \"red\" }}>*</span> Select alteast 1\n                      option\n                    </p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n      {selected.length && !step1 && showOrder ? (\n        <div style={{ flex: 1 }}>\n          <div>\n            <OrderTable\n              columns={columns}\n              data={selected}\n              updateCurrentRows={setNowArray}\n            />\n          </div>\n          <div\n            style={{\n              margin: \"10px auto\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <button\n              className={styles.ctaButton}\n              onClick={() => {\n                props.setOpen(false);\n                handleSaveItem();\n              }}\n            >\n              Save Item\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/table/index.js",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Grid/GridContainer.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/addModifier.js",["252","253"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/actions.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/reducer.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/index.js",["254"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/createStore.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/sagas.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/reducer.js",["255"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/index.js",["256"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/routes.js",["257"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/addOption.js",["258","259","260","261"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/selector.js",["262","263"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/actions.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/selector.js",["264"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/selectors.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reducers.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/utils/normalize.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/actions.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Grid/GridItem.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reportWebVitals.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Pizza/index.js",["265","266"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/api.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/index.js",["267","268","269","270","271","272"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/actions.js",[],{"ruleId":"273","severity":1,"message":"274","line":54,"column":9,"nodeType":"275","messageId":"276","endLine":54,"endColumn":16},{"ruleId":"273","severity":1,"message":"277","line":55,"column":9,"nodeType":"275","messageId":"276","endLine":55,"endColumn":14},{"ruleId":"273","severity":1,"message":"278","line":56,"column":9,"nodeType":"275","messageId":"276","endLine":56,"endColumn":22},{"ruleId":"273","severity":1,"message":"279","line":57,"column":9,"nodeType":"275","messageId":"276","endLine":57,"endColumn":21},{"ruleId":"273","severity":1,"message":"280","line":64,"column":9,"nodeType":"275","messageId":"276","endLine":64,"endColumn":21},{"ruleId":"281","severity":1,"message":"282","line":94,"column":6,"nodeType":"283","endLine":94,"endColumn":16,"suggestions":"284"},{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","replacedBy":"288"},{"ruleId":"285","replacedBy":"289"},{"ruleId":"287","replacedBy":"290"},{"ruleId":"273","severity":1,"message":"291","line":7,"column":3,"nodeType":"275","messageId":"276","endLine":7,"endColumn":11},{"ruleId":"273","severity":1,"message":"292","line":7,"column":22,"nodeType":"275","messageId":"276","endLine":7,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":74,"column":9,"nodeType":"275","messageId":"276","endLine":74,"endColumn":16},{"ruleId":"273","severity":1,"message":"277","line":75,"column":9,"nodeType":"275","messageId":"276","endLine":75,"endColumn":14},{"ruleId":"273","severity":1,"message":"293","line":76,"column":9,"nodeType":"275","messageId":"276","endLine":76,"endColumn":24},{"ruleId":"273","severity":1,"message":"279","line":77,"column":9,"nodeType":"275","messageId":"276","endLine":77,"endColumn":21},{"ruleId":"273","severity":1,"message":"294","line":5,"column":8,"nodeType":"275","messageId":"276","endLine":5,"endColumn":13},{"ruleId":"273","severity":1,"message":"295","line":13,"column":32,"nodeType":"275","messageId":"276","endLine":13,"endColumn":43},{"ruleId":"273","severity":1,"message":"296","line":15,"column":9,"nodeType":"275","messageId":"276","endLine":15,"endColumn":18},{"ruleId":"273","severity":1,"message":"297","line":17,"column":9,"nodeType":"275","messageId":"276","endLine":17,"endColumn":20},{"ruleId":"273","severity":1,"message":"298","line":36,"column":11,"nodeType":"275","messageId":"276","endLine":36,"endColumn":17},{"ruleId":"273","severity":1,"message":"299","line":37,"column":11,"nodeType":"275","messageId":"276","endLine":37,"endColumn":18},{"ruleId":"273","severity":1,"message":"274","line":38,"column":11,"nodeType":"275","messageId":"276","endLine":38,"endColumn":18},{"ruleId":"273","severity":1,"message":"277","line":39,"column":11,"nodeType":"275","messageId":"276","endLine":39,"endColumn":16},{"ruleId":"273","severity":1,"message":"300","line":40,"column":11,"nodeType":"275","messageId":"276","endLine":40,"endColumn":19},{"ruleId":"273","severity":1,"message":"301","line":41,"column":12,"nodeType":"275","messageId":"276","endLine":41,"endColumn":20},{"ruleId":"273","severity":1,"message":"302","line":43,"column":12,"nodeType":"275","messageId":"276","endLine":43,"endColumn":19},{"ruleId":"285","replacedBy":"303"},{"ruleId":"287","replacedBy":"304"},{"ruleId":"305","severity":1,"message":"306","line":21,"column":120,"nodeType":"307","messageId":"308","endLine":21,"endColumn":121},{"ruleId":"273","severity":1,"message":"309","line":5,"column":45,"nodeType":"275","messageId":"276","endLine":5,"endColumn":57},{"ruleId":"273","severity":1,"message":"310","line":14,"column":30,"nodeType":"275","messageId":"276","endLine":14,"endColumn":44},{"ruleId":"273","severity":1,"message":"311","line":96,"column":9,"nodeType":"275","messageId":"276","endLine":96,"endColumn":19},{"ruleId":"273","severity":1,"message":"312","line":97,"column":9,"nodeType":"275","messageId":"276","endLine":97,"endColumn":20},{"ruleId":"273","severity":1,"message":"277","line":98,"column":9,"nodeType":"275","messageId":"276","endLine":98,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":99,"column":9,"nodeType":"275","messageId":"276","endLine":99,"endColumn":16},{"ruleId":"273","severity":1,"message":"313","line":100,"column":9,"nodeType":"275","messageId":"276","endLine":100,"endColumn":21},{"ruleId":"273","severity":1,"message":"314","line":101,"column":9,"nodeType":"275","messageId":"276","endLine":101,"endColumn":22},{"ruleId":"273","severity":1,"message":"315","line":121,"column":21,"nodeType":"275","messageId":"276","endLine":121,"endColumn":28},{"ruleId":"273","severity":1,"message":"316","line":122,"column":9,"nodeType":"275","messageId":"276","endLine":122,"endColumn":16},{"ruleId":"273","severity":1,"message":"317","line":22,"column":7,"nodeType":"275","messageId":"276","endLine":22,"endColumn":12},{"ruleId":"273","severity":1,"message":"318","line":34,"column":7,"nodeType":"275","messageId":"276","endLine":34,"endColumn":16},{"ruleId":"273","severity":1,"message":"319","line":66,"column":9,"nodeType":"275","messageId":"276","endLine":66,"endColumn":14},{"ruleId":"273","severity":1,"message":"320","line":127,"column":10,"nodeType":"275","messageId":"276","endLine":127,"endColumn":22},{"ruleId":"273","severity":1,"message":"321","line":127,"column":24,"nodeType":"275","messageId":"276","endLine":127,"endColumn":39},{"ruleId":"273","severity":1,"message":"322","line":128,"column":10,"nodeType":"275","messageId":"276","endLine":128,"endColumn":20},{"ruleId":"273","severity":1,"message":"323","line":128,"column":22,"nodeType":"275","messageId":"276","endLine":128,"endColumn":38},{"ruleId":"281","severity":1,"message":"324","line":134,"column":6,"nodeType":"283","endLine":134,"endColumn":16,"suggestions":"325"},{"ruleId":"281","severity":1,"message":"326","line":135,"column":21,"nodeType":"327","endLine":135,"endColumn":34},{"ruleId":"273","severity":1,"message":"328","line":179,"column":5,"nodeType":"275","messageId":"276","endLine":179,"endColumn":13},{"ruleId":"273","severity":1,"message":"329","line":181,"column":5,"nodeType":"275","messageId":"276","endLine":181,"endColumn":14},{"ruleId":"273","severity":1,"message":"330","line":182,"column":5,"nodeType":"275","messageId":"276","endLine":182,"endColumn":17},{"ruleId":"273","severity":1,"message":"331","line":183,"column":5,"nodeType":"275","messageId":"276","endLine":183,"endColumn":20},{"ruleId":"273","severity":1,"message":"332","line":184,"column":5,"nodeType":"275","messageId":"276","endLine":184,"endColumn":16},{"ruleId":"273","severity":1,"message":"333","line":185,"column":5,"nodeType":"275","messageId":"276","endLine":185,"endColumn":16},{"ruleId":"273","severity":1,"message":"334","line":186,"column":5,"nodeType":"275","messageId":"276","endLine":186,"endColumn":13},{"ruleId":"273","severity":1,"message":"335","line":187,"column":14,"nodeType":"275","messageId":"276","endLine":187,"endColumn":23},{"ruleId":"273","severity":1,"message":"336","line":187,"column":25,"nodeType":"275","messageId":"276","endLine":187,"endColumn":33},{"ruleId":"273","severity":1,"message":"337","line":228,"column":7,"nodeType":"275","messageId":"276","endLine":228,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":231,"column":9,"nodeType":"340","messageId":"341","endLine":231,"endColumn":18},{"ruleId":"273","severity":1,"message":"342","line":232,"column":7,"nodeType":"275","messageId":"276","endLine":232,"endColumn":23},{"ruleId":"281","severity":1,"message":"343","line":239,"column":6,"nodeType":"283","endLine":239,"endColumn":41,"suggestions":"344"},{"ruleId":"273","severity":1,"message":"277","line":32,"column":11,"nodeType":"275","messageId":"276","endLine":32,"endColumn":16},{"ruleId":"273","severity":1,"message":"345","line":33,"column":12,"nodeType":"275","messageId":"276","endLine":33,"endColumn":16},{"ruleId":"273","severity":1,"message":"301","line":25,"column":10,"nodeType":"275","messageId":"276","endLine":25,"endColumn":18},{"ruleId":"346","severity":1,"message":"347","line":24,"column":9,"nodeType":"348","messageId":"349","endLine":25,"endColumn":75},{"ruleId":"350","severity":1,"message":"351","line":18,"column":25,"nodeType":"352","endLine":18,"endColumn":102},{"ruleId":"353","severity":1,"message":"354","line":9,"column":1,"nodeType":"355","endLine":70,"endColumn":2},{"ruleId":"273","severity":1,"message":"356","line":17,"column":3,"nodeType":"275","messageId":"276","endLine":17,"endColumn":18},{"ruleId":"273","severity":1,"message":"357","line":18,"column":3,"nodeType":"275","messageId":"276","endLine":18,"endColumn":16},{"ruleId":"273","severity":1,"message":"358","line":65,"column":9,"nodeType":"275","messageId":"276","endLine":65,"endColumn":20},{"ruleId":"273","severity":1,"message":"359","line":66,"column":9,"nodeType":"275","messageId":"276","endLine":66,"endColumn":18},{"ruleId":"273","severity":1,"message":"360","line":3,"column":8,"nodeType":"275","messageId":"276","endLine":3,"endColumn":9},{"ruleId":"273","severity":1,"message":"361","line":3,"column":13,"nodeType":"275","messageId":"276","endLine":3,"endColumn":19},{"ruleId":"273","severity":1,"message":"360","line":3,"column":8,"nodeType":"275","messageId":"276","endLine":3,"endColumn":9},{"ruleId":"273","severity":1,"message":"291","line":2,"column":25,"nodeType":"275","messageId":"276","endLine":2,"endColumn":33},{"ruleId":"273","severity":1,"message":"362","line":8,"column":12,"nodeType":"275","messageId":"276","endLine":8,"endColumn":21},{"ruleId":"273","severity":1,"message":"310","line":12,"column":65,"nodeType":"275","messageId":"276","endLine":12,"endColumn":79},{"ruleId":"273","severity":1,"message":"274","line":17,"column":9,"nodeType":"275","messageId":"276","endLine":17,"endColumn":16},{"ruleId":"273","severity":1,"message":"279","line":18,"column":9,"nodeType":"275","messageId":"276","endLine":18,"endColumn":21},{"ruleId":"273","severity":1,"message":"301","line":22,"column":10,"nodeType":"275","messageId":"276","endLine":22,"endColumn":18},{"ruleId":"273","severity":1,"message":"363","line":24,"column":10,"nodeType":"275","messageId":"276","endLine":24,"endColumn":14},{"ruleId":"273","severity":1,"message":"364","line":24,"column":16,"nodeType":"275","messageId":"276","endLine":24,"endColumn":23},"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'option_loding' is assigned a value but never used.","'option_error' is assigned a value but never used.","'customStyles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["365"],"no-native-reassign",["366"],"no-negated-in-lhs",["367"],["366"],["367"],"'Redirect' is defined but never used.","'map' is defined but never used.","'options_loading' is assigned a value but never used.","'items' is defined but never used.","'setSelected' is defined but never used.","'listGroup' is defined but never used.","'listOptions' is defined but never used.","'groups' is assigned a value but never used.","'options' is assigned a value but never used.","'itemInfo' is assigned a value but never used.","'selected' is assigned a value but never used.","'newItem' is assigned a value but never used.",["366"],["367"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'isEmptyArray' is defined but never used.","'removeSelected' is defined but never used.","'groupError' is assigned a value but never used.","'optionError' is assigned a value but never used.","'groupLoading' is assigned a value but never used.","'optionLoading' is assigned a value but never used.","'setShow' is assigned a value but never used.","'history' is assigned a value but never used.","'style' is assigned a value but never used.","'newStyles' is assigned a value but never used.","'count' is assigned a value but never used.","'numberOfRows' is assigned a value but never used.","'setNumberOfRows' is assigned a value but never used.","'pageSelect' is assigned a value but never used.","'handlePageSelect' is assigned a value but never used.","React Hook React.useMemo has a missing dependency: 'columns'. Either include it or remove the dependency array.",["368"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'nextPage' is assigned a value but never used.","'pageCount' is assigned a value but never used.","'previousPage' is assigned a value but never used.","'canPreviousPage' is assigned a value but never used.","'canNextPage' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'gotoPage' is assigned a value but never used.","'pageIndex' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'pageSelectData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","'numberOfRowsData' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'selectedFlatRows'. Either include it or remove the dependency array.",["369"],"'form' is assigned a value but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'loadingSelector' is defined but never used.","'errorSelector' is defined but never used.","'mod_loading' is assigned a value but never used.","'mod_error' is assigned a value but never used.","'_' is defined but never used.","'create' is defined but never used.","'component' is assigned a value but never used.","'list' is assigned a value but never used.","'setList' is assigned a value but never used.",{"desc":"370","fix":"371"},"no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},"Update the dependencies array to be: [dispatch, nowGroup]",{"range":"376","text":"377"},"Update the dependencies array to be: [columns, noAction]",{"range":"378","text":"379"},"Update the dependencies array to be: [updateSelectItems, selectedRowIds, selectedFlatRows]",{"range":"380","text":"381"},[2901,2911],"[dispatch, nowGroup]",[3400,3410],"[columns, noAction]",[6005,6040],"[updateSelectItems, selectedRowIds, selectedFlatRows]"]