[{"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/index.js":"1","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/saga.js":"2","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/index.js":"3","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/service.js":"4","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/index.js":"5","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/addGroup.js":"6","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/constants.js":"7","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/utils.js":"8","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/actions.js":"9","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/reducer.js":"10","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/index.js":"11","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/actions.js":"12","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/constants.js":"13","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/saga.js":"14","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/addModifier.js":"15","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/table/index.js":"16","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/index.js":"17","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/sidebarRoutes.js":"18","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/routes.js":"19","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reportWebVitals.js":"20","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reducers.js":"21","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/saga.js":"22","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/saga.js":"23","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/service.js":"24","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/constants.js":"25","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/utils/normalize.js":"26","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/addItem.js":"27","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/selector.js":"28","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/orderTable/index.js":"29","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/index.js":"30","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/App.js":"31","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/sagas.js":"32","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/service.js":"33","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/selector.js":"34","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/reducer.js":"35","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/reducer.js":"36","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/selector.js":"37","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/selectors.js":"38"},{"size":501,"mtime":1617371187943,"results":"39","hashOfConfig":"40"},{"size":3780,"mtime":1617371188011,"results":"41","hashOfConfig":"40"},{"size":5848,"mtime":1617371188091,"results":"42","hashOfConfig":"40"},{"size":897,"mtime":1617371188023,"results":"43","hashOfConfig":"40"},{"size":5187,"mtime":1617494284048,"results":"44","hashOfConfig":"40"},{"size":13314,"mtime":1617371188067,"results":"45","hashOfConfig":"40"},{"size":1463,"mtime":1617371188011,"results":"46","hashOfConfig":"40"},{"size":335,"mtime":1617371188103,"results":"47","hashOfConfig":"40"},{"size":817,"mtime":1617371187963,"results":"48","hashOfConfig":"40"},{"size":2769,"mtime":1617494937575,"results":"49","hashOfConfig":"40"},{"size":5282,"mtime":1617495163069,"results":"50","hashOfConfig":"40"},{"size":878,"mtime":1617371208896,"results":"51","hashOfConfig":"40"},{"size":1194,"mtime":1617371226520,"results":"52","hashOfConfig":"40"},{"size":3876,"mtime":1617371283690,"results":"53","hashOfConfig":"40"},{"size":10135,"mtime":1617372063099,"results":"54","hashOfConfig":"40"},{"size":8176,"mtime":1617371976648,"results":"55","hashOfConfig":"40"},{"size":1184,"mtime":1617373145952,"results":"56","hashOfConfig":"40"},{"size":1636,"mtime":1617373113095,"results":"57","hashOfConfig":"40"},{"size":1957,"mtime":1617434294615,"results":"58","hashOfConfig":"40"},{"size":362,"mtime":1613558109347,"results":"59","hashOfConfig":"40"},{"size":422,"mtime":1616526875451,"results":"60","hashOfConfig":"40"},{"size":3571,"mtime":1617371188063,"results":"61","hashOfConfig":"40"},{"size":3556,"mtime":1617371187991,"results":"62","hashOfConfig":"40"},{"size":821,"mtime":1616526875447,"results":"63","hashOfConfig":"40"},{"size":1562,"mtime":1616526875447,"results":"64","hashOfConfig":"40"},{"size":136,"mtime":1613558109347,"results":"65","hashOfConfig":"40"},{"size":14958,"mtime":1617371188103,"results":"66","hashOfConfig":"40"},{"size":1012,"mtime":1617371188007,"results":"67","hashOfConfig":"40"},{"size":4596,"mtime":1613727067867,"results":"68","hashOfConfig":"40"},{"size":3942,"mtime":1617494344326,"results":"69","hashOfConfig":"40"},{"size":976,"mtime":1617371187931,"results":"70","hashOfConfig":"40"},{"size":334,"mtime":1616526875451,"results":"71","hashOfConfig":"40"},{"size":846,"mtime":1616526875451,"results":"72","hashOfConfig":"40"},{"size":1254,"mtime":1617371188011,"results":"73","hashOfConfig":"40"},{"size":2786,"mtime":1617494460404,"results":"74","hashOfConfig":"40"},{"size":2404,"mtime":1617491304802,"results":"75","hashOfConfig":"40"},{"size":1497,"mtime":1617490945074,"results":"76","hashOfConfig":"40"},{"size":1011,"mtime":1617494684933,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ds2j73",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"85"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"85"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/index.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/index.js",["160","161","162","163"],"import React from \"react\";\nimport classname from \"classnames\";\nimport styles from \"./Groups.module.sass\";\nimport Modal from \"react-modal\";\nimport Table from \"components/table\";\nimport AddGroup from \"views/Groups/addGroup\";\nimport  { isEmpty, map, assign } from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport { FaTrash, FaEdit, FaWindowClose } from \"react-icons/fa\";\nimport { normalizeText } from \"utils/normalize\";\nimport {listGroup, removeGroup, selectGroup} from 'modules/groups/actions'\nimport { loadingSelector, errorSelector, listSelector, messageSelector } from 'modules/groups/selector'\nimport {listOptions} from 'modules/options/actions'\nimport {loadingSelector as optionLoading, optionsSelector, errorSelector as optionError} from 'modules/options/selector'\nimport {useDispatch, useSelector} from 'react-redux'\nconst groupColumns = [\n  {\n    Header: \"Group\",\n    accessor: d => normalizeText(d.name) || \"-\",\n    width: 50,\n  },\n  {\n    Header: \"Display Order\",\n    accessor: d => d.order || \"-\",\n  },\n  {\n    Header: \"Price\",\n    accessor: d => d.price || 0,\n  },\n  {\n    Header: \"Max Allowed\",\n    accessor: d => d.max_allowed || 0,\n  },\n  {\n    Header: \"Min Required\",\n    accessor: d => d.min_required || 0,\n  },\n  {\n    Header: \"Options\",\n    accessor: d => {\n      let names = map(d.options, _ => normalizeText(_.name))\n      return names.join(\", \") || \"-\"\n    }\n  },\n  {\n    Header: \"Actions\",\n    accessor: \"actions\",\n  },\n];\nconst columns = [\n  {\n    Header: \"Image\",\n    accessor: \"image\",\n  },\n  {\n    Header: \"Name\",\n    accessor: \"name\",\n  },\n  {\n    Header: \"Price\",\n    accessor: \"price\",\n  },\n  {\n    Header: \"Type\",\n    accessor: \"type\",\n  },\n];\nexport default function GroupsTable() {\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const groups = useSelector(listSelector)\n  const message = useSelector(messageSelector)\n  const options = useSelector(optionsSelector)\n  const loading = useSelector(loadingSelector)\n  const error = useSelector(errorSelector)\n  const options_loading = useSelector(optionLoading)\n  const option_error = useSelector(optionError)\n  const [selected, setSelected] = React.useState([]);\n  const [form, setForm] = React.useState();\n  const [open, setOpen] = React.useState(false);\n  const [step1, setSetp1] = React.useState(false);\n  if(isEmpty(groups) && !message){\n    dispatch(listGroup())\n  }\n  if(isEmpty(options)){\n    dispatch(listOptions())\n  }\n  const customStyles = {\n    content: {\n      margin: \"auto\",\n      height: \"80%\",\n      width: \"100%\",\n      maxWidth: \"600px\",\n      overflow: \"auto\",\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      bottom: \"auto\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n  const handleEdit = group => {\n    delete group.actions\n    dispatch(selectGroup(group))\n    history.push(\"/addGroup\")\n  }\n  const handleRemove = group => {\n    const confirm = window.confirm(`You are about to remove ${group.name}. This is not reversable`)\n    if(confirm) {\n      dispatch(removeGroup(group.id))\n    }\n  }\n  map(groups, (option, i) =>\n    assign(option, {\n      actions: (\n        <div style={{ display: \"flex\" }} key={i}>\n          <div style={{ padding: \"0 5px\" }}>\n            <button onClick={() => handleEdit(option)}>\n              <FaEdit />\n            </button>\n          </div>\n          <div>\n            <button onClick={() => handleRemove(option)}>\n              <FaTrash />\n            </button>\n          </div>\n        </div>\n      ),\n    })\n  );\n  return (\n    <div className={classname(styles.tableContainer)}>\n      <Modal\n        isOpen={open}\n        onRequestClose={() => {\n          setOpen(false);\n          setSetp1(false);\n        }}\n        style={customStyles}\n      >\n        <div>\n\n                    <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                        <button onClick={() => setOpen(false)} style={{ cursor: 'pointer' }} className={classname(styles.transparent)}>\n                            <FaWindowClose />\n                        </button>\n                    </div>\n        {step1 && (\n          <div>\n            <button onClick={() => setSetp1(false)}>Back</button>\n          </div>\n        )}\n        {!step1 ? (\n          <AddGroup\n            next={setSetp1}\n            formMethod={setForm}\n            currentForm={form}\n            setOpen={setOpen}\n          />\n        ) : (\n          <div>\n            <Table\n              updateSelectItems={setSelected}\n              columns={columns}\n              data={options}\n            />\n            <div className={classname(styles.buttonGroup)}>\n              <div>\n                <button className={classname(styles.ctaButton)}>\n                  New Option\n                </button>\n              </div>\n              <div>\n                <button\n                  className={classname(styles.ctaButton)}\n                  style={{ width: \"150px\" }}\n                  onClick={() =>\n                    history.push(\"/addGroup\", { currentForm: form, selected })\n                  }\n                >\n                  Add options to group\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n        </div>\n      </Modal>\n      <div>\n        <Table\n          updateSelectItems={setSelected}\n          columns={groupColumns}\n          data={groups}\n        />\n        {\n          !isEmpty(message) && \n          <div className=\"UcenterWithMargin IamInfo\">\n           * Add Groups to view in this table \n          </div>\n        }\n      </div>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", margin: \"20px\" }}\n      >\n        <button\n          onClick={() => setOpen(true)}\n          className={classname(styles.ctaButton)}\n        >\n          Add Group\n        </button>\n      </div>\n    </div>\n  );\n}\n",["164","165"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/index.js",["166","167","168","169","170","171","172","173","174","175"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Groups/addGroup.js",["176","177","178","179","180","181"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/utils.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/actions.js",[],["182","183"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/reducer.js",["184","185"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/index.js",["186","187"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/actions.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Modifiers/addModifier.js",["188","189"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/table/index.js",["190","191","192","193","194","195","196"],"import React from \"react\";\nimport {\n  useTable,\n  useFilters,\n  useAsyncDebounce,\n  useSortBy,\n  usePagination,\n  useRowSelect,\n  useGlobalFilter,\n} from \"react-table\";\nimport _ from \"lodash\";\nimport classnames from \"classnames\";\nimport { matchSorter } from \"match-sorter\";\nimport styles from \"./table.module.css\";\n\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { map } from \"lodash\";\nconst style = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\nconst newStyles = {\n  formControlMargins: {\n    margin: \"3px 0 !important\",\n  },\n  gridContainer: {\n    justifyContent: \"center\",\n  },\n};\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n      <input\n        onChange={(e) => {\n          setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n        }}\n        placeholder={`Search ${count} records...`}\n        className={classnames(styles.rt_header_search)}\n      />\n    </div>\n  );\n}\n// global filter\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return (\n    <div style={{display: 'flex' }}>\n      <div style={{display: 'flex', alignItems:'center'}}>\n        Search\n      </div>\n      <input\n        value={value || \"\"}\n        onChange={(e) => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        }}\n        style={{\n          margin: '10px',\n          width: '100%',\n          fontSize: \"1rem\",\n          border: \"solid 1px\",\n          padding: \"10px\",\n        }}\n      />\n    </div>\n  );\n}\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = (val) => !val;\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n      </>\n    );\n  }\n);\n\n// Our table component\nfunction Table({\n  columns,\n  data,\n  updateSelectItems,\n  withCheckBox,\n  noAction,\n  preSelected,\n  title,\n}) {\n  const memo_columns = React.useMemo(() => {\n    if (noAction) {\n      _.remove(columns, { Header: \"Actions\" });\n      return columns;\n    } else return columns;\n  }, [noAction]);\n  const memo_data = React.useMemo(() => data);\n  const filterTypes = React.useMemo(\n    () => ({\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: (rows, id, filterValue) => {\n        return rows.filter((row) => {\n          const rowValue = row.values[id];\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true;\n        });\n      },\n    }),\n    []\n  );\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n  const preSelectIndex = _.map(preSelected, (s) =>\n    _.indexOf(\n      memo_data.map((m) => m.id),\n      s.id\n    )\n  );\n  const selected = {};\n  preSelectIndex.map((i) => (selected[i] = true));\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    visibleColumns,\n    pageOptions,\n    state: {selectedRowIds },\n    selectedFlatRows,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns: memo_columns,\n      data: memo_data,\n      defaultColumn, // Be sure to pass the defaultColumn option\n      filterTypes,\n      initialState: { selectedRowIds: selected },\n    },\n    useFilters, // useFilters!\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    (hooks) => {\n      if (withCheckBox) {\n        hooks.visibleColumns.push((columns) => [\n          {\n            id: \"selection\",\n            Header: ({ getToggleAllPageRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox\n                  {...getToggleAllPageRowsSelectedProps()}\n                />\n              </div>\n            ),\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ]);\n      } else return null;\n    }\n  );\n\n  React.useEffect(() => {\n    updateSelectItems(\n      map(selectedFlatRows, (d) => {\n        return d.original;\n      })\n    );\n  }, [updateSelectItems, selectedRowIds]);\n  return (\n    <div className={classnames(styles.ReactTable)}>\n      {title && <div className={classnames(styles.tableTile)}>{title}</div>}\n      <div>\n        <GlobalFilter\n          preGlobalFilteredRows={preGlobalFilteredRows}\n          globalFilter={state.globalFilter}\n          setGlobalFilter={setGlobalFilter}\n        />\n      </div>\n      <MaUTable {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()} className=\"rt-tr\">\n              {headerGroup.headers.map((column, key) => (\n                <TableCell\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className={classnames(\"rt-th rt-resizable-header\", {\n                    \"-cursor-pointer\": headerGroup.headers.length - 1 !== key,\n                    \"_sort-asc\": column.isSorted && !column.isSortedDesc,\n                    \"_sort-desc\": column.isSorted && column.isSortedDesc,\n                  })}\n                >\n                  <div\n                    className=\"rt-resizable-header-content\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {column.render(\"Header\")}\n                  </div>\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n          <TableRow>\n            <TableCell\n              colSpan={visibleColumns.length}\n              style={{ textAlign: \"left\" }}\n            ></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody\n          // style={{ textAlign: \"center\" }}\n          {...getTableBodyProps()}\n          className=\"rt-tbody\"\n        >\n          {rows.map((row, i) => {\n            prepareRow(row);\n\n            return (\n              <TableRow\n                {...row.getRowProps()}\n                className={classnames(\n                  \"rt-tr\",\n                  { \" -odd\": i % 2 === 0 },\n                  { \" -even\": i % 2 === 1 }\n                )}\n                //   onClick={() => handleClickOpen(row.original)}\n              >\n                {row.cells.map((cell) => {\n                  return (\n                    <TableCell\n                      {...cell.getCellProps()}\n                      className=\"rt-td\"\n                      style={{ textAlign: \"center\" }}\n                    >\n                      {cell.render(\"Cell\")}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </MaUTable>\n    </div>\n  );\n}\nexport default Table;\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/index.js",["197"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/Sidebar/sidebarRoutes.js",["198","199","200","201","202"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/routes.js",["203"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reportWebVitals.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/reducers.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/saga.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/constants.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/utils/normalize.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Items/addItem.js",["204","205","206","207","208","209","210","211","212","213","214","215"],"import React from \"react\";\nimport classname from \"classnames\";\nimport styles from \"./Items.module.sass\";\nimport _, { isEmpty, map } from \"lodash\";\nimport { Formik, Form, Field, ErrorMessage, isEmptyArray } from \"formik\";\nimport * as yup from \"yup\";\nimport { normalizeText as normalize } from \"utils/normalize\";\nimport Switch from \"react-switch\";\nimport Table from \"components/table\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listGroup } from \"modules/groups/actions\";\nimport { listOptions } from \"modules/options/actions\";\nimport { addItem, updateItem, removeSelected, getListOptionGroups } from \"modules/items/actions\";\nimport {splitOptionsAndGroups} from './utils'\nimport {\n  loadingSelector as group_loading,\n  listSelector as groupsSelector,\n  messageSelector,\n} from \"modules/groups/selector\";\nimport {\n  loadingSelector as options_loading,\n  optionsSelector,\n} from \"modules/options/selector\";\nimport { selectedSelector, loadingSelector, optionGroupsSelector } from \"modules/items/selector\";\nimport { FaRegObjectGroup } from \"react-icons/fa\";\nimport OrderTable from \"components/orderTable\";\nconst initialValues = {\n  name: \"\",\n  description: \"\",\n  image_url: \"\",\n  price: \"\",\n  type: \"\",\n  stock: \"\",\n};\nconst validationSchema = yup.object({\n  name: yup.string().required(\"Name is required\"),\n  description: yup.string().optional(),\n  price: yup.number().required(\"Price is required\"),\n  type: yup.string().optional(),\n  stock: yup.number().optional(),\n});\nconst columns = [\n  {\n    Header: \"Name\",\n    accessor: (d) => {\n      if (!_.isUndefined(d.min_required)) {\n        return (\n          <div>\n            {normalize(d.name)}\n            <FaRegObjectGroup style={{ padding: \"0 5px\" }} />\n          </div>\n        );\n      } else {\n        return d.name;\n      }\n    },\n  },\n  {\n    Header: \"Price\",\n    accessor:  \"price\",\n  },\n  {\n    Header: \"Min\",\n    accessor: (d) => {\n      if (!_.isUndefined(d.min_required)) {\n        return d.min_required;\n      } else return \"-\";\n    },\n  },\n  {\n    Header: \"Max\",\n    accessor: (d) => {\n      if (!_.isUndefined(d.min_required)) {\n        return d.max_allowed;\n      } else return \"-\";\n    },\n  },\n];\nconst stichOptionsAndGroups = (list) => {\n  let o = list.options \n  let g = list.option_groups \n  let res = o.concat(g)\n  return res\n}\nexport default function AddItem(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const groups = useSelector(groupsSelector);\n  const options = useSelector(optionsSelector);\n  const nowItem = useSelector(selectedSelector);\n  let option_groups = useSelector(optionGroupsSelector) \n  const loading = useSelector(loadingSelector);\n  const groupLoading = useSelector(group_loading);\n  const optionLoading = useSelector(options_loading);\n  const groupInfo = useSelector(messageSelector);\n  const [active, setActive] = React.useState(true);\n  const [step1, setStep1] = React.useState(false);\n  const [groupsSelected, selectGroups] = React.useState(!isEmpty(nowItem) ? stichOptionsAndGroups(nowItem) : []);\n  const [formValues, setForm] = React.useState();\n  const [groupArray, setGroupArray] = React.useState();\n  const [optionArray, setOptionArray] = React.useState()\n  const [showOrder, setShow] = React.useState(false);\n\n  //let tableData = groups.concat(options)\n  React.useEffect(() => {\n    if(isEmpty(option_groups)) {\n      dispatch(getListOptionGroups())\n    }\n    return () => dispatch(removeSelected())\n  }, [dispatch, option_groups]);\n  const handleSaveItem = () => {\n    // we get all the row props, insted we only want original\n    const {option_groups, options} = splitOptionsAndGroups(map(groupArray, g => g.original))\n    let _active\n    if (active) {\n      _active = 1\n    }\n    else _active = 0\n    const values = formValues;\n    const finalItem = _.assign({}, values, { active: _active, options, option_groups});\n    if (!isEmpty(nowItem)) {\n      dispatch(updateItem(finalItem));\n    } else {\n      dispatch(addItem(finalItem));\n    }\n    setForm(null);\n    setShow(false)\n    if(props.setOpen) {\n      props.setOpen(false)\n    }\n  };\n  return (\n    <div>\n      <div className={classname(styles.container)} style={{ flex: 1 }}>\n        {!step1 && (\n          <div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"1.5rem\", color: \"red\" }}>\n                {!isEmpty(nowItem) ? \"Update Item\" : \"Add Item\"}\n              </p>\n            </div>\n            <Formik\n              initialValues={\n                !isEmpty(nowItem)\n                  ? !isEmpty(formValues)\n                    ? formValues\n                    : nowItem\n                  : _.merge(initialValues, formValues)\n              }\n              validationSchema={validationSchema}\n              onSubmit={async (values) => {\n                setForm(values);\n                setStep1(true);\n                setShow(true)\n              }}\n              enableReinitialize\n            >\n              {({ values }) => (\n                <Form>\n                  <div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"name\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Item\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"name\"\n                          type=\"text\"\n                          className={classname(styles.formInput)}\n                          autoFocus={true}\n                        />\n                        <ErrorMessage\n                          name={\"name\"}\n                          component=\"div\"\n                          style={{ color: \"red\" }}\n                        />\n                      </div>\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"price\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Price\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"price\"\n                          type=\"number\"\n                          className={classname(styles.formInput)}\n                          min={0}\n                          step={0.01}\n                        />\n                        <ErrorMessage\n                          name={\"price\"}\n                          component=\"div\"\n                          style={{ color: \"red\" }}\n                        />\n                      </div>\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"type\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Type\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"type\"\n                          type=\"text\"\n                          className={classname(styles.formInput)}\n                        />\n                      </div>\n                      <ErrorMessage\n                        name={\"type\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"stock\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Stock\n                        </label>\n                      </div>\n                      <div>\n                        <Field\n                          name=\"stock\"\n                          type=\"number\"\n                          className={classname(styles.formInput)}\n                        />\n                      </div>\n                      <ErrorMessage\n                        name={\"type\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div className={classname(styles.formControl)}>\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"active\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Active\n                        </label>\n                      </div>\n                      <div>\n                        <Field name=\"active\">\n                          {({ field, form, meta }) => (\n                            <Switch\n                              name=\"active\"\n                              {...field}\n                              onChange={(e) => {\n                                setActive(e);\n                              }}\n                              checked={active}\n                            />\n                          )}\n                        </Field>\n                      </div>\n                      <ErrorMessage\n                        name={\"type\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div\n                      className={classname(\n                        styles.imageField,\n                        styles.formControl\n                      )}\n                    >\n                      <div className={classname(styles.labelContainer)}>\n                        <label\n                          htmlFor=\"modifier_image\"\n                          className={classname(\n                            styles.formLabel,\n                            styles.labelContainer\n                          )}\n                        >\n                          Image\n                        </label>\n                      </div>\n                      <div>\n                        <input\n                          type=\"file\"\n                          name=\"modifier_image\"\n                          max={1}\n                          className={classname(styles.formInput)}\n                        />\n                      </div>\n                    </div>\n                    <div className={classname(styles.titleWithNoBox)}>\n                      <h4>Description</h4>\n                    </div>\n                    <div className={classname(styles.descriptionBox)}>\n                      <div>\n                        <Field\n                          as=\"textarea\"\n                          name=\"description\"\n                          type=\"text\"\n                          className={classname(styles.descriptionContainer)}\n                        />\n                      </div>\n                      <ErrorMessage\n                        name={\"description\"}\n                        component=\"div\"\n                        className=\"field-error\"\n                      />\n                    </div>\n                    <div className={classname(styles.saveButtonContainer)}>\n                      <button\n                        type=\"submit\"\n                        className={classname(styles.ctaButton)}\n                      >\n                        Choose Options\n                      </button>\n                    </div>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        )}\n        {step1 &&  (\n          <div className={classname(styles.tableContainer)}>\n            <div className={classname(styles.tableFlex)}>\n              <Table\n                title={\"Options and groups\"}\n                columns={columns}\n                data={option_groups}\n                updateSelectItems={selectGroups}\n                withCheckBox={true}\n                noAction={true}\n                preSelected={groupsSelected}\n              />\n            </div>\n            <div className={classname(styles.between)}>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <div style={{ paddingTop: \"5px\" }}>\n                  <button\n                    onClick={() => setStep1(false)}\n                    className={classname(styles.ctaButton)}\n                  >\n                    Back\n                  </button>\n                </div>\n              </div>\n              <div>\n                <button\n                  disabled={!groupsSelected.length}\n                  className={classname(styles.ctaButton)}\n                  onClick={() =>\n                    groupsSelected.length ? setStep1(false) : null\n                  }\n                >\n                  Add to Item\n                </button>\n                <div style={{ fontSize: \"10px\" }}>\n                  {!groupsSelected.length && (\n                    <p>\n                      <span style={{ color: \"red\" }}>*</span> Select alteast 1\n                    </p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n      {groupsSelected.length && !step1 && showOrder ? (\n        <div style={{ flex: 1 }}>\n          <div>Option Groups</div>\n          <div>\n            <OrderTable\n              columns={columns}\n              data={groupsSelected}\n              updateCurrentRows={setGroupArray}\n            />\n          </div>\n          <div\n            style={{\n              margin: \"10px auto\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <button\n              className={styles.ctaButton}\n              onClick={() => {\n                handleSaveItem();\n              }}\n            >\n              Save Item\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/groups/selector.js",["216","217"],"import {createSelector} from 'reselect'\nimport {isImmutable} from 'immutable'\nimport _, { create } from 'lodash'\n\nconst groups = state => state.groups\n\nexport const messageSelector = createSelector(\n    groups,\n    data => data.get('message')\n)\nexport const loadingSelector = createSelector(\n    groups, \n    data => data.get('loading')\n)\n\nexport const errorSelector = createSelector(\n    groups,\n    data => {\n        let error = data.get('error')\n        if (isImmutable(error)){\n            return error.toJS()\n        }\n        return error\n    }\n)\n\nexport const listSelector = createSelector(\n    groups,\n    data => {\n        let groups = data.get('groups')\n        if(isImmutable(groups)){\n            return groups.toJS()\n        }\n        return []\n    }\n)\n\nexport const selectedSelector = createSelector(\n    groups, \n    data => {\n        let selected = data.get('selected')\n        if(selected.size > 0 && isImmutable(selected)){\n            return selected.toJS()\n        }\n        return []\n    }\n)","/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/components/orderTable/index.js",["218","219","220","221","222"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/views/Options/index.js",["223","224","225","226","227","228"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/App.js",["229"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/sagas.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/service.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/selector.js",[],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/items/reducer.js",["230"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/reducer.js",["231","232"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/options/selector.js",["233"],"/home/manisha/dev/clients/upwork/echola/echola_menu_front/src/modules/modifiers/selectors.js",[],{"ruleId":"234","severity":1,"message":"235","line":74,"column":9,"nodeType":"236","messageId":"237","endLine":74,"endColumn":16},{"ruleId":"234","severity":1,"message":"238","line":75,"column":9,"nodeType":"236","messageId":"237","endLine":75,"endColumn":14},{"ruleId":"234","severity":1,"message":"239","line":76,"column":9,"nodeType":"236","messageId":"237","endLine":76,"endColumn":24},{"ruleId":"234","severity":1,"message":"240","line":77,"column":9,"nodeType":"236","messageId":"237","endLine":77,"endColumn":21},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"234","severity":1,"message":"245","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":13},{"ruleId":"234","severity":1,"message":"246","line":15,"column":9,"nodeType":"236","messageId":"237","endLine":15,"endColumn":18},{"ruleId":"234","severity":1,"message":"247","line":17,"column":9,"nodeType":"236","messageId":"237","endLine":17,"endColumn":20},{"ruleId":"234","severity":1,"message":"248","line":36,"column":11,"nodeType":"236","messageId":"237","endLine":36,"endColumn":17},{"ruleId":"234","severity":1,"message":"249","line":37,"column":11,"nodeType":"236","messageId":"237","endLine":37,"endColumn":18},{"ruleId":"234","severity":1,"message":"235","line":38,"column":11,"nodeType":"236","messageId":"237","endLine":38,"endColumn":18},{"ruleId":"234","severity":1,"message":"238","line":39,"column":11,"nodeType":"236","messageId":"237","endLine":39,"endColumn":16},{"ruleId":"234","severity":1,"message":"250","line":41,"column":12,"nodeType":"236","messageId":"237","endLine":41,"endColumn":20},{"ruleId":"234","severity":1,"message":"251","line":43,"column":12,"nodeType":"236","messageId":"237","endLine":43,"endColumn":19},{"ruleId":"252","severity":1,"message":"253","line":49,"column":8,"nodeType":"254","endLine":49,"endColumn":25,"suggestions":"255"},{"ruleId":"234","severity":1,"message":"238","line":64,"column":9,"nodeType":"236","messageId":"237","endLine":64,"endColumn":14},{"ruleId":"234","severity":1,"message":"256","line":65,"column":9,"nodeType":"236","messageId":"237","endLine":65,"endColumn":22},{"ruleId":"234","severity":1,"message":"240","line":66,"column":9,"nodeType":"236","messageId":"237","endLine":66,"endColumn":21},{"ruleId":"234","severity":1,"message":"257","line":75,"column":9,"nodeType":"236","messageId":"237","endLine":75,"endColumn":21},{"ruleId":"252","severity":1,"message":"258","line":106,"column":6,"nodeType":"254","endLine":106,"endColumn":16,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":137,"column":17,"nodeType":"262","endLine":137,"endColumn":35},{"ruleId":"241","replacedBy":"263"},{"ruleId":"243","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":62,"column":9,"nodeType":"267","messageId":"268","endLine":63,"endColumn":58},{"ruleId":"265","severity":1,"message":"266","line":64,"column":9,"nodeType":"267","messageId":"268","endLine":65,"endColumn":68},{"ruleId":"252","severity":1,"message":"269","line":30,"column":5,"nodeType":"254","endLine":30,"endColumn":26,"suggestions":"270"},{"ruleId":"234","severity":1,"message":"250","line":31,"column":10,"nodeType":"236","messageId":"237","endLine":31,"endColumn":18},{"ruleId":"234","severity":1,"message":"238","line":32,"column":11,"nodeType":"236","messageId":"237","endLine":32,"endColumn":16},{"ruleId":"234","severity":1,"message":"271","line":33,"column":12,"nodeType":"236","messageId":"237","endLine":33,"endColumn":16},{"ruleId":"234","severity":1,"message":"272","line":22,"column":7,"nodeType":"236","messageId":"237","endLine":22,"endColumn":12},{"ruleId":"234","severity":1,"message":"273","line":34,"column":7,"nodeType":"236","messageId":"237","endLine":34,"endColumn":16},{"ruleId":"234","severity":1,"message":"274","line":66,"column":9,"nodeType":"236","messageId":"237","endLine":66,"endColumn":14},{"ruleId":"252","severity":1,"message":"275","line":131,"column":6,"nodeType":"254","endLine":131,"endColumn":16,"suggestions":"276"},{"ruleId":"252","severity":1,"message":"277","line":132,"column":21,"nodeType":"278","endLine":132,"endColumn":34},{"ruleId":"234","severity":1,"message":"279","line":176,"column":5,"nodeType":"236","messageId":"237","endLine":176,"endColumn":16},{"ruleId":"252","severity":1,"message":"280","line":224,"column":6,"nodeType":"254","endLine":224,"endColumn":41,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":18,"column":25,"nodeType":"284","endLine":18,"endColumn":102},{"ruleId":"234","severity":1,"message":"285","line":7,"column":9,"nodeType":"236","messageId":"237","endLine":7,"endColumn":22},{"ruleId":"234","severity":1,"message":"286","line":7,"column":24,"nodeType":"236","messageId":"237","endLine":7,"endColumn":33},{"ruleId":"234","severity":1,"message":"287","line":7,"column":35,"nodeType":"236","messageId":"237","endLine":7,"endColumn":47},{"ruleId":"234","severity":1,"message":"288","line":7,"column":49,"nodeType":"236","messageId":"237","endLine":7,"endColumn":57},{"ruleId":"252","severity":1,"message":"289","line":20,"column":5,"nodeType":"254","endLine":20,"endColumn":18,"suggestions":"290"},{"ruleId":"291","severity":1,"message":"292","line":10,"column":1,"nodeType":"293","endLine":71,"endColumn":2},{"ruleId":"234","severity":1,"message":"294","line":5,"column":45,"nodeType":"236","messageId":"237","endLine":5,"endColumn":57},{"ruleId":"234","severity":1,"message":"246","line":12,"column":10,"nodeType":"236","messageId":"237","endLine":12,"endColumn":19},{"ruleId":"234","severity":1,"message":"247","line":13,"column":10,"nodeType":"236","messageId":"237","endLine":13,"endColumn":21},{"ruleId":"234","severity":1,"message":"295","line":88,"column":9,"nodeType":"236","messageId":"237","endLine":88,"endColumn":16},{"ruleId":"234","severity":1,"message":"248","line":89,"column":9,"nodeType":"236","messageId":"237","endLine":89,"endColumn":15},{"ruleId":"234","severity":1,"message":"249","line":90,"column":9,"nodeType":"236","messageId":"237","endLine":90,"endColumn":16},{"ruleId":"234","severity":1,"message":"235","line":93,"column":9,"nodeType":"236","messageId":"237","endLine":93,"endColumn":16},{"ruleId":"234","severity":1,"message":"296","line":94,"column":9,"nodeType":"236","messageId":"237","endLine":94,"endColumn":21},{"ruleId":"234","severity":1,"message":"297","line":95,"column":9,"nodeType":"236","messageId":"237","endLine":95,"endColumn":22},{"ruleId":"234","severity":1,"message":"298","line":96,"column":9,"nodeType":"236","messageId":"237","endLine":96,"endColumn":18},{"ruleId":"234","severity":1,"message":"299","line":102,"column":10,"nodeType":"236","messageId":"237","endLine":102,"endColumn":21},{"ruleId":"234","severity":1,"message":"300","line":102,"column":23,"nodeType":"236","messageId":"237","endLine":102,"endColumn":37},{"ruleId":"234","severity":1,"message":"301","line":3,"column":8,"nodeType":"236","messageId":"237","endLine":3,"endColumn":9},{"ruleId":"234","severity":1,"message":"302","line":3,"column":13,"nodeType":"236","messageId":"237","endLine":3,"endColumn":19},{"ruleId":"234","severity":1,"message":"303","line":12,"column":9,"nodeType":"236","messageId":"237","endLine":12,"endColumn":22},{"ruleId":"234","severity":1,"message":"304","line":13,"column":9,"nodeType":"236","messageId":"237","endLine":13,"endColumn":23},{"ruleId":"234","severity":1,"message":"305","line":14,"column":9,"nodeType":"236","messageId":"237","endLine":14,"endColumn":20},{"ruleId":"234","severity":1,"message":"306","line":14,"column":22,"nodeType":"236","messageId":"237","endLine":14,"endColumn":33},{"ruleId":"252","severity":1,"message":"307","line":32,"column":52,"nodeType":"254","endLine":32,"endColumn":58,"suggestions":"308"},{"ruleId":"234","severity":1,"message":"235","line":17,"column":9,"nodeType":"236","messageId":"237","endLine":17,"endColumn":16},{"ruleId":"234","severity":1,"message":"240","line":18,"column":9,"nodeType":"236","messageId":"237","endLine":18,"endColumn":21},{"ruleId":"252","severity":1,"message":"269","line":24,"column":7,"nodeType":"254","endLine":24,"endColumn":26,"suggestions":"309"},{"ruleId":"234","severity":1,"message":"250","line":26,"column":10,"nodeType":"236","messageId":"237","endLine":26,"endColumn":18},{"ruleId":"234","severity":1,"message":"310","line":28,"column":10,"nodeType":"236","messageId":"237","endLine":28,"endColumn":14},{"ruleId":"234","severity":1,"message":"311","line":28,"column":16,"nodeType":"236","messageId":"237","endLine":28,"endColumn":23},{"ruleId":"234","severity":1,"message":"312","line":7,"column":3,"nodeType":"236","messageId":"237","endLine":7,"endColumn":11},{"ruleId":"234","severity":1,"message":"313","line":2,"column":19,"nodeType":"236","messageId":"237","endLine":2,"endColumn":28},{"ruleId":"265","severity":1,"message":"266","line":25,"column":9,"nodeType":"267","messageId":"268","endLine":26,"endColumn":75},{"ruleId":"314","severity":2,"message":"315","line":46,"column":11,"nodeType":"236","messageId":"316","endLine":46,"endColumn":18},{"ruleId":"234","severity":1,"message":"301","line":3,"column":8,"nodeType":"236","messageId":"237","endLine":3,"endColumn":9},"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'options_loading' is assigned a value but never used.","'option_error' is assigned a value but never used.","no-native-reassign",["317"],"no-negated-in-lhs",["318"],"'items' is defined but never used.","'listGroup' is defined but never used.","'listOptions' is defined but never used.","'groups' is assigned a value but never used.","'options' is assigned a value but never used.","'selected' is assigned a value but never used.","'newItem' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'itemInfo'. Either include it or remove the dependency array.","ArrayExpression",["319"],"'option_loding' is assigned a value but never used.","'customStyles' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["320"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["317"],["318"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","React Hook React.useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.",["321"],"'form' is assigned a value but never used.","'style' is assigned a value but never used.","'newStyles' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook React.useMemo has a missing dependency: 'columns'. Either include it or remove the dependency array.",["322"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'pageOptions' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'selectedFlatRows'. Either include it or remove the dependency array.",["323"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FaObjectGroup' is defined but never used.","'FaSitemap' is defined but never used.","'FaPizzaSlice' is defined but never used.","'FaDiceD6' is defined but never used.","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["324"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'isEmptyArray' is defined but never used.","'history' is assigned a value but never used.","'groupLoading' is assigned a value but never used.","'optionLoading' is assigned a value but never used.","'groupInfo' is assigned a value but never used.","'optionArray' is assigned a value but never used.","'setOptionArray' is assigned a value but never used.","'_' is defined but never used.","'create' is defined but never used.","'sortedOptions' is defined but never used.","'nowSortedArray' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","React Hook React.useEffect has a missing dependency: 'updateCurrentRows'. Either include it or remove the dependency array. If 'updateCurrentRows' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["325"],["326"],"'list' is assigned a value but never used.","'setList' is assigned a value but never used.","'Redirect' is defined but never used.","'startCase' is defined but never used.","no-undef","'isEmpty' is not defined.","undef","no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},"Update the dependencies array to be: [dispatch, itemInfo, items]",{"range":"343","text":"344"},"Update the dependencies array to be: [dispatch, nowGroup]",{"range":"345","text":"346"},"Update the dependencies array to be: [dispatch, message, modifiers]",{"range":"347","text":"348"},"Update the dependencies array to be: [columns, noAction]",{"range":"349","text":"350"},"Update the dependencies array to be: [updateSelectItems, selectedRowIds, selectedFlatRows]",{"range":"351","text":"352"},"Update the dependencies array to be: [activeRoute, history]",{"range":"353","text":"354"},"Update the dependencies array to be: [rows, updateCurrentRows]",{"range":"355","text":"356"},"Update the dependencies array to be: [dispatch, message, options]",{"range":"357","text":"358"},[1871,1888],"[dispatch, itemInfo, items]",[3016,3026],"[dispatch, nowGroup]",[1086,1107],"[dispatch, message, modifiers]",[3251,3261],"[columns, noAction]",[5538,5573],"[updateSelectItems, selectedRowIds, selectedFlatRows]",[703,716],"[activeRoute, history]",[1075,1081],"[rows, updateCurrentRows]",[1051,1070],"[dispatch, message, options]"]